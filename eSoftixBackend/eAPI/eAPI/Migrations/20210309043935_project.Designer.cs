// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eAPI;

namespace eAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210309043935_project")]
    partial class project
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("eModels.AttachFilesModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("customer_id")
                        .HasColumnType("int");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("file_extension")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("file_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<long>("file_size")
                        .HasColumnType("bigint");

                    b.Property<string>("file_title")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("file_type")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("is_document_file")
                        .HasColumnType("bit");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("customer_id");

                    b.ToTable("tbl_attach_files");
                });

            modelBuilder.Entity("eModels.BusinessBranchModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("address_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("address_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("business_branch_name_en")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("business_branch_name_kh")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("logo")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("other")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("phone_1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("phone_2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("website")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.ToTable("tbl_business_branch");
                });

            modelBuilder.Entity("eModels.CategoryNoteModel", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<string>("category_note_name_en")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("category_note_name_kh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_multiple_select")
                        .HasColumnType("bit");

                    b.Property<int>("sort_order")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("tbl_category_note");
                });

            modelBuilder.Entity("eModels.ContactModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("contact_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("customer_id")
                        .HasColumnType("int");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("email_address")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("gender")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("phone_1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("phone_2")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("postion")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("telegram")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.HasIndex("customer_id");

                    b.ToTable("tbl_contact");
                });

            modelBuilder.Entity("eModels.CountryModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("country_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("country_note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.ToTable("tbl_country");
                });

            modelBuilder.Entity("eModels.CurrencyModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("business_branch_id")
                        .HasColumnType("int");

                    b.Property<decimal>("change_exchange_rate")
                        .HasColumnType("decimal(16,4)");

                    b.Property<string>("currency_format")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("currency_name_en")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("currency_name_kh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("exchange_rate")
                        .HasColumnType("decimal(16,4)");

                    b.Property<bool>("is_main")
                        .HasColumnType("bit");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("business_branch_id");

                    b.ToTable("tbl_currency");
                });

            modelBuilder.Entity("eModels.CustomerGroupModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("customer_group_name_en")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("customer_group_name_kh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("tbl_customer_group");
                });

            modelBuilder.Entity("eModels.CustomerModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("company_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("customer_code")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("customer_code_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("customer_group_id")
                        .HasColumnType("int");

                    b.Property<string>("customer_name_en")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("customer_name_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("date_of_birth")
                        .HasColumnType("date");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("gender")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("nationality")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("phone_1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("phone_2")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("photo")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("position")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("province")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("telegram")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.HasIndex("customer_group_id");

                    b.ToTable("tbl_customer");
                });

            modelBuilder.Entity("eModels.DocumentNumberModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("counter")
                        .HasColumnType("int");

                    b.Property<string>("counter_digit")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("document_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("format")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("outlet_id")
                        .HasColumnType("int");

                    b.Property<string>("prefix")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.ToTable("tbl_document_number");
                });

            modelBuilder.Entity("eModels.HistoryModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(16,4)");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("customer_id")
                        .HasColumnType("int");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("document_number")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("module")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("old_amount")
                        .HasColumnType("decimal(16,4)");

                    b.Property<int?>("outlet_id")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("transaction_date")
                        .HasColumnType("date");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int?>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("customer_id");

                    b.HasIndex("user_id");

                    b.ToTable("tbl_history");
                });

            modelBuilder.Entity("eModels.ModuleViewModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("default_filters")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("default_order_by")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("default_order_by_type")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_default")
                        .HasColumnType("bit");

                    b.Property<string>("module_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("permission_option")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("sort_order")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.ToTable("tbl_module_view");
                });

            modelBuilder.Entity("eModels.NoteModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("business_branch_id")
                        .HasColumnType("int");

                    b.Property<int>("category_note_id")
                        .HasColumnType("int");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("note_label")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("business_branch_id");

                    b.HasIndex("category_note_id");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("eModels.NumberModel", b =>
                {
                    b.Property<int>("number")
                        .HasColumnType("int");

                    b.ToTable("tbl_number");
                });

            modelBuilder.Entity("eModels.OutletModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("business_branch_id")
                        .HasColumnType("int");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("outlet_name_en")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("outlet_name_kh")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("business_branch_id");

                    b.ToTable("outlets");
                });

            modelBuilder.Entity("eModels.PaymentTypeModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("business_branch_id")
                        .HasColumnType("int");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("currency_id")
                        .HasColumnType("int");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_build_in")
                        .HasColumnType("bit");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("payment_type_name_en")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("payment_type_name_kh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("photo")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("sort_order")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("business_branch_id");

                    b.HasIndex("currency_id");

                    b.ToTable("tbl_payment_type");
                });

            modelBuilder.Entity("eModels.PermissionOptionModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("icon")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_checked")
                        .HasColumnType("bit");

                    b.Property<bool>("is_front_end")
                        .HasColumnType("bit");

                    b.Property<bool>("is_match_all")
                        .HasColumnType("bit");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("option_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int?>("parent_id")
                        .HasColumnType("int");

                    b.Property<string>("report_title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("report_title_kh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("roles")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("show_in_menu")
                        .HasColumnType("bit");

                    b.Property<int>("sort_order")
                        .HasColumnType("int");

                    b.Property<string>("url")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.HasIndex("parent_id");

                    b.ToTable("tbl_permission_option");
                });

            modelBuilder.Entity("eModels.PermissionOptionRoleModel", b =>
                {
                    b.Property<int>("role_id")
                        .HasColumnType("int");

                    b.Property<int>("permission_option_id")
                        .HasColumnType("int");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.HasKey("role_id", "permission_option_id");

                    b.HasIndex("permission_option_id");

                    b.ToTable("tbl_permission_option_role");
                });

            modelBuilder.Entity("eModels.RequestLicenseModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<Guid>("business_branch_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("expired_date")
                        .HasColumnType("date");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("is_full_license")
                        .HasColumnType("bit");

                    b.Property<int>("outlet_id")
                        .HasColumnType("int");

                    b.Property<int>("station_id")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("tbl_request_license");
                });

            modelBuilder.Entity("eModels.RoleModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_buildin")
                        .HasColumnType("bit");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("role_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("tbl_role");
                });

            modelBuilder.Entity("eModels.SettingModel", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<string>("input_type")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("setting_description")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("setting_title")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("setting_value")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("tbl_setting");
                });

            modelBuilder.Entity("eModels.StationModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("business_branch_id")
                        .HasColumnType("int");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("station_name_en")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("station_name_kh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("business_branch_id");

                    b.ToTable("tbl_station");
                });

            modelBuilder.Entity("eModels.StoreProcedureResultModel", b =>
                {
                    b.Property<string>("result")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.ToTable("StoreProcedureResultModel");
                });

            modelBuilder.Entity("eModels.UserModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date_of_birth")
                        .HasColumnType("date");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("full_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_allow_backend_login")
                        .HasColumnType("bit");

                    b.Property<bool>("is_allow_front_end_login")
                        .HasColumnType("bit");

                    b.Property<bool>("is_buildin")
                        .HasColumnType("bit");

                    b.Property<bool>("is_default")
                        .HasColumnType("bit");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("password")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("phone_1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("phone_2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("photo")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("pin_code")
                        .HasColumnType("int");

                    b.Property<int>("role_id")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.HasIndex("role_id");

                    b.ToTable("tbl_user");
                });

            modelBuilder.Entity("eModels.AttachFilesModel", b =>
                {
                    b.HasOne("eModels.CustomerModel", "customer")
                        .WithMany()
                        .HasForeignKey("customer_id");

                    b.Navigation("customer");
                });

            modelBuilder.Entity("eModels.ContactModel", b =>
                {
                    b.HasOne("eModels.CustomerModel", "customer")
                        .WithMany("contacts")
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer");
                });

            modelBuilder.Entity("eModels.CurrencyModel", b =>
                {
                    b.HasOne("eModels.BusinessBranchModel", "business_branch")
                        .WithMany()
                        .HasForeignKey("business_branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("business_branch");
                });

            modelBuilder.Entity("eModels.CustomerModel", b =>
                {
                    b.HasOne("eModels.CustomerGroupModel", "customer_group")
                        .WithMany("customers")
                        .HasForeignKey("customer_group_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer_group");
                });

            modelBuilder.Entity("eModels.HistoryModel", b =>
                {
                    b.HasOne("eModels.CustomerModel", "customer")
                        .WithMany()
                        .HasForeignKey("customer_id");

                    b.HasOne("eModels.UserModel", "user")
                        .WithMany()
                        .HasForeignKey("user_id");

                    b.Navigation("customer");

                    b.Navigation("user");
                });

            modelBuilder.Entity("eModels.NoteModel", b =>
                {
                    b.HasOne("eModels.BusinessBranchModel", "business_branch")
                        .WithMany()
                        .HasForeignKey("business_branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.CategoryNoteModel", "category_note")
                        .WithMany("notes")
                        .HasForeignKey("category_note_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("business_branch");

                    b.Navigation("category_note");
                });

            modelBuilder.Entity("eModels.OutletModel", b =>
                {
                    b.HasOne("eModels.BusinessBranchModel", "business_branch")
                        .WithMany("outlets")
                        .HasForeignKey("business_branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("business_branch");
                });

            modelBuilder.Entity("eModels.PaymentTypeModel", b =>
                {
                    b.HasOne("eModels.BusinessBranchModel", "business_branch")
                        .WithMany()
                        .HasForeignKey("business_branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.CurrencyModel", "currency")
                        .WithMany()
                        .HasForeignKey("currency_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("business_branch");

                    b.Navigation("currency");
                });

            modelBuilder.Entity("eModels.PermissionOptionModel", b =>
                {
                    b.HasOne("eModels.PermissionOptionModel", "parent")
                        .WithMany("permission_options")
                        .HasForeignKey("parent_id");

                    b.Navigation("parent");
                });

            modelBuilder.Entity("eModels.PermissionOptionRoleModel", b =>
                {
                    b.HasOne("eModels.PermissionOptionModel", "permission_option")
                        .WithMany("permission_option_roles")
                        .HasForeignKey("permission_option_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.RoleModel", "role")
                        .WithMany("permission_option_roles")
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("permission_option");

                    b.Navigation("role");
                });

            modelBuilder.Entity("eModels.StationModel", b =>
                {
                    b.HasOne("eModels.BusinessBranchModel", "business_branch")
                        .WithMany("stations")
                        .HasForeignKey("business_branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("business_branch");
                });

            modelBuilder.Entity("eModels.UserModel", b =>
                {
                    b.HasOne("eModels.RoleModel", "role")
                        .WithMany()
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("role");
                });

            modelBuilder.Entity("eModels.BusinessBranchModel", b =>
                {
                    b.Navigation("outlets");

                    b.Navigation("stations");
                });

            modelBuilder.Entity("eModels.CategoryNoteModel", b =>
                {
                    b.Navigation("notes");
                });

            modelBuilder.Entity("eModels.CustomerGroupModel", b =>
                {
                    b.Navigation("customers");
                });

            modelBuilder.Entity("eModels.CustomerModel", b =>
                {
                    b.Navigation("contacts");
                });

            modelBuilder.Entity("eModels.PermissionOptionModel", b =>
                {
                    b.Navigation("permission_option_roles");

                    b.Navigation("permission_options");
                });

            modelBuilder.Entity("eModels.RoleModel", b =>
                {
                    b.Navigation("permission_option_roles");
                });
#pragma warning restore 612, 618
        }
    }
}
