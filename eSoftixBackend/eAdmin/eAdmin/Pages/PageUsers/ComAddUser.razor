@inject ISnackbar toast
@inject IHttpService http
<Modal>
       <ModalContent>     
            <MudTextField @bind-Value="@model.role_name" Label="Name"></MudTextField>
            <MudTextField @bind-Value="@model.description" Lines="3" Label="Description"></MudTextField>
        </ModalContent>
  
    <ActionButton>
        <MudButton Color="MudBlazor.Color.Primary" OnClick="OnSave_Click">Ok</MudButton>
    </ActionButton>
</Modal>


@code{
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public RoleModel model { get; set; } = new RoleModel();
    [Parameter] public int role_id {get;set;}
    [Parameter] public int clone_id {get;set;}

    protected override async Task OnInitializedAsync()
    {
    await Task.Delay(100);
        if(role_id > 0){
            var res = await http.ApiGet($"role({role_id})");
            if(res.IsSuccess){
                model = JsonSerializer.Deserialize<RoleModel>(res.Content.ToString());
            }
        }else if(clone_id > 0)
        {
            var res = await http.ApiPost($"role/clone/{clone_id}");
            if(res.IsSuccess){
                model = JsonSerializer.Deserialize<RoleModel>(res.Content.ToString());
            }
        }else{
            await Task.Delay(100);
            model = new RoleModel();
        }
    }
    

    async Task OnSave_Click()
    {
        if(string.IsNullOrWhiteSpace(model.role_name)){
            toast.Add("Please enter role name.",Severity.Warning);
        }else{

            var res = await http.ApiPost("role/save",model);
                if(res.IsSuccess)
                {
                    toast.Add("Save Successfull",Severity.Success);
                    MudDialog.Close(DialogResult.Ok(model));
                }else{
                    toast.Add(res.Content.ToString(),Severity.Warning);
                }
            
        }
    }

}
