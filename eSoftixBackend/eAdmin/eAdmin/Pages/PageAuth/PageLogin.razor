@page "/login"
@layout BlankLayout
@inject ILocalStorageService storageService
@inject AuthenticationStateProvider  authenticationStateProvider
@inject IHttpService  http;
@inject NavigationManager nav;
@inject IConfiguration config


<AuthorizeView>
    <Authorized>
        <Redirect url="/dashboard" />
    </Authorized>
    <NotAuthorized Context="x">
        <EditForm Model="model" OnValidSubmit="LoginUser">

            <div class="wrp-login-page">
                <div class="wrp-login-form">
                    <div class="login-header">
                        <img src="images/ePOS-Rest.svg" />
                    </div>
                    <div class="login-form">
                        <div>
                            <div class="uk-form-control">
                                <input id="username" @bind="@model.Username" type="text" placeholder="Enter username" class="uk-input" />
                                <ValidationMessage For="@(()=>model.Username)" />
                            </div>
                            <div class="uk-form-control">
                                <input id="password" @bind="@model.Password" type="password" placeholder="Enter password" class="uk-input" />
                                <ValidationMessage For="@(()=>model.Password)" />
                            </div>
                            @*<div class="uk-form-control">
                                <eAdmin.Pages.PageTranslate.CultureSelector />
                            </div>*@



                            @if (IsShowMessage)
                            {
                                <small style="color:red">@Message</small>
                            }
                            <div class="uk-text-center">
                                @if (IsSpinning)
                                {
                                <button class="btn-login" type="button"> <Spinner /> Login  </button>
                                }
                                else
                                {
                            <button class="btn-login" type="submit">Login </button>
                                }
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </EditForm>
    </NotAuthorized>
</AuthorizeView>
@code {
    AuthenticateModel model = new AuthenticateModel();
    string Message = "";
    bool IsShowMessage = false;
    bool IsSpinning = false;

    public async Task LoginUser()
    {
        IsSpinning = true;
        if (string.IsNullOrWhiteSpace(model.Username) || model.Password == "")
        {
            IsShowMessage = true;
            Message = "Username or Password is required.";
            IsSpinning = false;
            return;
        }

        var resp = await http.ApiPost("user/auth/login", model);
        if (resp.IsSuccess)
        {
            UserModel user = JsonSerializer.Deserialize<UserModel>(resp.Content.ToString());
            if (user != null)
            {
                try
                {

                    var user_convert = EncryptProvider.Base64Encrypt(resp.Content.ToString());
                    await storageService.SetItemAsync("_Authorization", user_convert);
                    await authenticationStateProvider.GetAuthenticationStateAsync();
                    nav.NavigateTo("/", true);
                }
                catch (Exception ex)
                {
                    string message = ex.Message;
                    IsShowMessage = true;

                    Message = "Invalid username and password.";
                }
            }
            else
            {
                IsShowMessage = true;
                Message = "Invalid username and password.";
            }
        }
        else
        {
            IsShowMessage = true;
            Message = "Invalid username and password.";
        }
        IsSpinning = false;
    }

}
