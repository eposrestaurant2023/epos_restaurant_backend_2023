@using Microsoft.Extensions.Configuration
@inherits PageCore

@{
    RenderFragment HeaderTemplate(string display_name, string ClassName = "") =>
    @<Th ClassName="@($"{ClassName}")"> @display_name</Th>;
}


@if(!is_loading){
    <MudItem xs="12" sm="12" md="12">
    <MudCard Elevation="25" Style="height:100%;">
        <MudCardContent Class="px-0">
            <MudSimpleTable Elevation="0" Hover="true">
                  <Table Items="@models"
                isLoading="@is_loading_data"
                ShowCounter="true"
                EmptyText="There is no customer record.">
            <TableHeader>
                @HeaderTemplate("Customer")
                @HeaderTemplate("Customer Group")
                <Th>Phone</Th>
                @HeaderTemplate("Company")
                @HeaderTemplate("Current Balance","col-center")
            </TableHeader>
            <RowTemplate Context="s">
                <td>
                    <div style="display:flex;">
                        <MudAvatar Image="@(config.GetValue<string>("BaseUrl") + $"upload/{s.photo}")" Size="Size.Large">
                        </MudAvatar>
                        <div style="padding-left:6px">
                            <AuthView roles="customer_view" url="@($"customer/{s.id}")">
                                <MudText Typo="Typo.body1">@s.customer_code - @s.customer_name_en</MudText>
                            </AuthView>
                                <MudText Typo="Typo.caption">@s.company_name</MudText>
                        </div>
                    </div>
                </td>
                <td>
                    <div>
                        <MudText Typo="Typo.body1">
                           @s.customer_group.customer_group_name_en
                        </MudText>
                    </div>
                </td>
                <td>
                    <MudText Typo="Typo.body1">
                        @s.phone_1 <br/>
                        @s.phone_2
                    </MudText>
                </td>
                <TdCenter>
                    <MudText Typo="Typo.body1">@s.company_name</MudText>
                    
                </TdCenter>
                <TdCenter>
                    <MudText Typo="Typo.body1">@s.current_balance.ToString("C2")</MudText>
                </TdCenter>
            </RowTemplate>
        </Table>
            </MudSimpleTable>
        </MudCardContent>
    </MudCard>
</MudItem>
}else{
    <MudSkeleton Animation="Animation.Wave" /> 
   <MudSkeleton Animation="Animation.Wave" /> 
   <MudSkeleton Animation="Animation.Wave" /> 
   <MudSkeleton Animation="Animation.Wave" /> 
   <MudSkeleton Animation="Animation.Wave" /> 
}
@code{
    public List<CustomerModel> models = new List<CustomerModel>();
    protected override async Task OnInitializedAsync()
    {
        is_loading=true;

       await LoadData();
        is_loading=false;
    }
    async Task LoadData(){
         var res = await http.ApiGetOData("customer?$select=id,customer_name_en,company_name,customer_name_kh,customer_code,phone_1,phone_2,company_name_kh,photo,total_project&$expand=customer_group($select=customer_group_name_en,customer_group_name_kh)&$top=25&orderby=created_date desc");
        models = JsonSerializer.Deserialize<List<CustomerModel>>(res.Content.ToString());
        
    }
}