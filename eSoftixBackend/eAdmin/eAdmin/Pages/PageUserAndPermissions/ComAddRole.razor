
@inject IMatToaster Toaster;

<EditFormContext Cancel_Click="Cancel_click" model="@model" is_opened="is_dialog_open" title="@title" Save_Click="SaveRole_Click" is_submitting="@is_submit" modal_width="800px">

    <TextInput label="Role Name" @bind-text="@model.role_name">
        <ValidationMessage For="@(()=>model.role_name)" />
    </TextInput>
    <TextInput label="Description" type="textarea" @bind-text="@model.description"/>        
</EditFormContext>


@code{
    [Parameter] public RoleModel model { get; set; } = new RoleModel();
    [Parameter] public bool is_dialog_open { get; set; }
    [Parameter] public string title { get; set; } = "";
    [Parameter] public EventCallback<RoleModel> Save_Click { get; set; }
    [Parameter] public EventCallback<MouseEventArgs> Cancel_click { get; set; }
    public bool is_submit { get; set; }


    async Task SaveRole_Click()
    {
        is_submit = true;

        await Task.Delay(500);
        await Save_Click.InvokeAsync(model);
        is_submit = false;
    }



}