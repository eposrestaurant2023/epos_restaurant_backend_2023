<EditFormContext Cancel_Click="CancelClick" Save_Click="SaveCustomerGroup" model="model" title="@modal_title" @bind-is_opened="is_open">
    <TextInput @bind-text="model.customer_group_name_en" label="Customer Name Group EN">
        <ValidationMessage For="(() => model.customer_group_name_en)" />
    </TextInput>
    <TextInput @bind-text="model.customer_group_name_en" label="Customer Name Group KH">
        <ValidationMessage For="(() => model.customer_group_name_en)" />
    </TextInput>
    <TextInput @bind-text="model.note" type="textarea" label="Note">
      
    </TextInput>
</EditFormContext>

@code {
    [Parameter] public CustomerGroupModel model { get; set; }
    [Parameter] public bool is_open { get; set; }
    [Parameter] public EventCallback<bool> is_openChanged { get; set; }
    [Parameter] public EventCallback<CustomerGroupModel> SaveClick { get; set; }
    [Parameter] public EventCallback CancelClick { get; set; }

    string modal_title {
        get {
            if (model != null)
            {
                if (model.id == 0)
                {
                    return "New Customer group";
                }
                else
                {
                    return $"Edit {model.customer_group_name_en}";
                }
            }
            return "New Customer group";
        }
    }

    async Task SaveCustomerGroup()
    {
        await SaveClick.InvokeAsync(model);
    }
}
