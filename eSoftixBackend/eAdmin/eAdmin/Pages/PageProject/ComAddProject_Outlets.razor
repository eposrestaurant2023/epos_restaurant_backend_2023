
<UIContainerBox Title="Outlet" OnAddClick="@AddOutlet" is_show_add_button="true">

    @foreach (var b in model.outlets.Where(r => r.is_deleted == false).ToList())
    {
      <div class="box_project">
          <div uk-grid class="uk-flex uk-flex-middle">
              <div class="uk-width-expand">
                  <h3 class="title uk-margin-remove-top"> @b.outlet_name_en</h3>
              </div>
              <div class="uk-width-auto">
                  <Icon icon="delete" OnClick="@(()=>Delete_Outlet(b))" />
              </div>
          </div>
          <Spacing Number="10"/>

          <div class="uk-text-left">
             
          </div>
        <div class="uk-text-right">
           
        </div>
        <TextInput @bind-text="@b.outlet_name_en" label="Outlet Name En">
            <ValidationMessage For="@(() => b.outlet_name_en )" />
        </TextInput>
        <TextInput @bind-text="@b.outlet_name_kh" label="Outlet Name kh" />
        <ComInputCheckBox @bind-value="@model.status" label="Status" label_inline="true" />
        <UIContainerBox Title="Station Info" is_show_add_button="true" OnAddClick="@(()=>Add_station(b.stations))">
            <table class="uk-table  view_table set-verticle-middle uk-table-small uk-table-striped uk-table-hover">
                <tr>
                    <Th>Station Name En</Th>
                    <Th>Station Name Kh</Th>
                    <ThCenter></ThCenter>
                </tr>
                @foreach (var s in b.stations.Where(r => r.is_deleted == false).ToList())
                {
                    <tr>
                        <td>
                            <TextInput @bind-text="@s.station_name_en" />
                        </td>
                        <td>
                            <TextInput @bind-text="@s.station_name_kh" />
                        </td>
                        <TdCenter>
                            <Icon icon="delete" OnClick="@(()=>Delete_station(b.stations,s))" />
                        </TdCenter>
                    </tr>

                }
            </table>
        </UIContainerBox>
     
    </div>
    <Spacing Number="15"/>
            }
       

    </UIContainerBox>

    @code {

        [Parameter] public BusinessBranchModel model { get; set; }
        OutletModel outlet = new OutletModel();
        void AddOutlet()
        {
            OutletModel ct = new OutletModel();
            ct.outlet_name_en = "Outlet" + (model.outlets.Count() + 1);
            ct.outlet_name_kh = "Outlet" + (model.outlets.Count() + 1);
            StationModel station = new StationModel();
            station.station_name_en = "Station" + (ct.stations.Count() +1) ;
            station.station_name_kh = "Station" + (ct.stations.Count() + 1);
            ct.stations.Add(station);
            model.outlets.Add(ct);

        }

        void Delete_Outlet( OutletModel o)
        {
            model.outlets.Remove(o);
        }

        void Add_station(List<StationModel> s)
        {
            s.Add(new StationModel()
            {
                station_name_en = "Station " + (outlet.stations.Count() + 1),
                station_name_kh = "Station " + (outlet.stations.Count() + 1),

            });
        }

        void Delete_station(List<StationModel> b,StationModel s)
        {
            if (s.id == Guid.Empty)
            {
                b.Remove(s);
            }
            else
            {
                s.is_deleted = true;
            }
        }

    }
