
<UIPanel Title="Outlet and Station">
    <UIPanelHeaderRight>
        <MudIconButton Icon="@Icons.Material.Filled.Add" OnClick="@AddNewOutlet"/>
    </UIPanelHeaderRight> 
    <UIPanelBody> 
        @if (outlets != null && outlets.Count() > 0)
        {
            <MudExpansionPanels>
              <MudGrid>
                @foreach (var d in outlets)
                {
                   <MudItem xs="12" sm="12" md="12">
                    <MudExpansionPanel HideIcon="true" Class="mb-4">
                        <TitleContent>
                            <div class="d-flex align-center">
                                <MudText Class="mt-1">@d.outlet_name_en</MudText>
                                <LabelDeleted  is_visible="@d.is_deleted"/>
                                     <MenuButton icon="@Icons.Material.Filled.MoreVert" is_loading="@d.is_loading" ClassName="d-flex ml-auto pa-0" >
                                        <MenuButtonItem  roles="@gv.GetRole("project_edit")"  icon="@Icons.Material.Filled.Edit" OnClick="@(()=>EditOutlet_Click(d))">Edit</MenuButtonItem>
                                        <MenuButtonItem roles="@gv.GetRole("project_delete")" icon="@Icons.Material.Filled.Delete" is_visible="@(!d.is_deleted)" OnClick="@(()=>DeleteOutlet_Click(d))">Delete</MenuButtonItem>
                                        <MenuButtonItem roles="@gv.GetRole("project_restore")" icon="@Icons.Material.Filled.Refresh" is_visible="@(d.is_deleted)" OnClick="@(()=>DeleteOutlet_Click(d))">Restore</MenuButtonItem>
                                        <MudDivider/>
                                        <MenuButtonItem  roles="@gv.GetRole("project_add")"  icon="@Icons.Material.Filled.DesktopWindows" is_visible="@(!d.is_deleted)" OnClick="@(()=>AddNewStation(d))">Add New Station</MenuButtonItem>
                                    </MenuButton>
                            </div>
                        </TitleContent>
                        <ChildContent>
                                <MudGrid>
                           @if(d.stations.Count()>0){
                              
                                   foreach(var s in d.stations){
                                      <MudItem xs="12" sm="12" md="6">
                                           <MudCard>
                                                <MudCardHeader>
                                                    <CardHeaderAvatar>
                                                        <MudIcon Icon="@Icons.Material.Filled.DesktopWindows" Size="MudBlazor.Size.Large" />
                                                    </CardHeaderAvatar>
                                                    <CardHeaderContent>
                                                        <MudText Typo="Typo.body1">@s.station_name_en</MudText>
                                                        <MudText Typo="Typo.body1"><span style="font-style:italic;font-size:12px;">Expired Date:</span> @Convert.ToDateTime(s.expired_date).ToString(gv.date_format)</MudText>
                                                        <LabelDeleted is_visible="@s.is_deleted"/>
                                                        <LabelExpiredProject visible="@(s.expired_date < DateTime.Now)"/>
                                                        <LabelFullLicense visible="@s.is_full_license"/>
                                                    </CardHeaderContent>
                                                    <CardHeaderActions>
                                                        <MudIconButton  Color="MudBlazor.Color.Primary" OnClick="@(() => ToggleDrawer(s))" Icon="@Icons.Material.Filled.ErrorOutline" Style="margin-top: -14px;"/>
                                                        <MenuButton icon="@Icons.Material.Filled.MoreVert" is_loading="@d.is_loading">
                                                            <MenuButtonItem  roles="@gv.GetRole("project_edit")"  icon="@Icons.Material.Filled.Edit" OnClick="@(()=>EditStation_Click(s))">Edit</MenuButtonItem>
                                                            <MenuButtonItem  roles="@gv.GetRole("project_edit")"  icon="@Icons.Material.Filled.CalendarToday" OnClick="@(()=>AddNewExtendLisence(s))">Extend Expired Date</MenuButtonItem>
                                                            <MenuButtonItem  roles="@gv.GetRole("project_edit")"  icon="@Icons.Material.Filled.LockClock" is_visible="@(!s.is_deleted && !s.is_full_license)" OnClick="@(()=>MarkAsFullLicense_Click(s))">Mark as Full License</MenuButtonItem>
                                                            <MenuButtonItem  roles="@gv.GetRole("project_edit")"  icon="@Icons.Material.Filled.CalendarToday" is_visible="@(!s.is_deleted && s.is_full_license)" OnClick="@(()=>MarkAsFullLicense_Click(s))">Cancel Full License</MenuButtonItem>
                                                            <MenuButtonItem roles="@gv.GetRole("project_delete")" icon="@Icons.Material.Filled.Delete" is_visible="@(!s.is_deleted)" OnClick="@(()=>DeleteStation_Click(s))">Delete</MenuButtonItem>
                                                            <MenuButtonItem roles="@gv.GetRole("project_restore")" icon="@Icons.Material.Filled.Refresh" is_visible="@(s.is_deleted)" OnClick="@(()=>DeleteStation_Click(s))">Restore</MenuButtonItem>
                                                        </MenuButton>
                                                    </CardHeaderActions>
                                                </MudCardHeader>
                                            </MudCard>
                                     </MudItem>


                                     }

                                 
                                
                                }else{
                                    <div style="width:100%;">
                                          <MudText  Typo="@Typo.subtitle2"  Align="MudBlazor.Align.Center" Class="ma-6">There's no Station in this outlet.</MudText>
                                    </div>
                                   
                                    <div style="width:100%;">
                                        <MudButton StartIcon="@Icons.Material.Filled.Add" Color="MudBlazor.Color.Success" Variant="Variant.Filled" OnClick="@(()=>AddNewStation(d))" FullWidth="true" >
                                           Add New Station
                                        </MudButton>
                                    </div>
                                }
                             </MudGrid> 
                    
                        </ChildContent>
                    </MudExpansionPanel>
                      </MudItem>
                }
              </MudGrid>
              </MudExpansionPanels>
     }else {
    <MudText  Typo="@Typo.subtitle2"  Align="MudBlazor.Align.Center" Class="ma-6">There's no outlet in this Branch.</MudText>
    <div class="d-flex justify-center">
        <MudButton StartIcon="@Icons.Material.Filled.Add" Color="MudBlazor.Color.Success" Variant="Variant.Filled" OnClick="@AddNewOutlet"   >
            Add New Outlet
        </MudButton> 
    </div>     
    }


    @if(station_id != Guid.Empty){
        <MudDrawer  Width="300px" @bind-Open="@is_open_history_extend" Anchor="@Anchor.Right" Elevation="25" Variant="@DrawerVariant.Temporary">
            <MudDrawerContainer>
                <ComExtendLicenseHistoryList Station_id="@station_id"  station="@Station"/>
            </MudDrawerContainer>
        </MudDrawer>
    }

    </UIPanelBody>
</UIPanel>



@code{
    bool is_open_history_extend;
      Guid station_id;
      StationModel Station = new StationModel();
    
    void ToggleDrawer(StationModel _station)
    {
        is_open_history_extend = !is_open_history_extend;
        station_id = _station.id;
        Station = _station;

    }
}