@inherits PageCore
    <ObjectGraphDataAnnotationsValidator />
    <UIContainerBox Title="Customer Photo" ClassName="uk-text-center">
        <UIFlexCenter>
            <FileUpload @bind-ImageUrl="@model.photo" />
        </UIFlexCenter>
    </UIContainerBox>

    <UIContainerBox>
        <TextInput label="Code" text="@model.customer_code" is_read_only="true">

        </TextInput>
        <TextInput label="Name(EN)" @bind-text="@model.customer_name_en">
            <ValidationMessage For="@(() => model.customer_name_en)" />
        </TextInput>
        <TextInput label="Name(KH)" @bind-text="@model.customer_name_kh" />
        <SelectCustomerGroup show_empty="true" empty_text="Customer Group" @bind-selected_value="@model.customer_group_id">
            <ValidationMessage For="@(()=>model.customer_group_id)" />
        </SelectCustomerGroup>
        <TextInput label="Phone 1" @bind-text="@model.phone_1">
            <ValidationMessage For="@(()=>model.phone_1)" />
        </TextInput>
        <TextInput label="Phone 2" @bind-text="@model.phone_2" />
        <SelectGender @bind-selected_value="model.gender" />

        <SelectStatus @bind-selected_value="@model.status" />
    </UIContainerBox>

    <UIContainerBox Title="Contact Information" OnAddClick="AddContact_Click" is_show_add_button="true">
        @foreach (var c in model.contacts)
        {
            <div class="uk-text-right"><Icon icon="delete" title="Delete This Contact" OnClick="@(()=>DeleteContact_Click(c))" /></div>
            <Spacing Number="10"/>
                <TextInput label="Contact Name" @bind-text="@c.contact_name">
                    <ValidationMessage For="(()=>c.contact_name)" />
                </TextInput>
                <TextInput label="Phone Number 1" @bind-text="@c.phone_1">
                    <ValidationMessage For="(()=>c.phone_1)" />
                </TextInput>
                <TextInput label="Phone Number 2" @bind-text="@c.phone_2"></TextInput>
                <TextInput label="Posotion" @bind-text="@c.postion"></TextInput>
                <SelectGender @bind-selected_value="@c.gender" />
                <TextInput label="Telegram" @bind-text="@c.telegram"></TextInput>
                <TextInput label="Email" @bind-text="@c.email_address"></TextInput>
                @if (model.contacts.IndexOf(c) != model.contacts.Count - 1)
                {
                    <hr class="uk-divider-icon">
                }



        }
    </UIContainerBox>


    <UIContainerBox Title="Other information">
        <SelectProvince @bind-selected_value="@model.province"/>
    </UIContainerBox>

    <UIContainerBox Title="Social Media Information">
        <TextInput label="Email" @bind-text="@model.email" />
        <TextInput label="Telegram" @bind-text="@model.telegram" />

    </UIContainerBox>




    <UIContainerBox Title="Address & Note">
        <Tab>
            <TabHeader>
                <TabHeaderItem>Address</TabHeaderItem>
                <TabHeaderItem>Note</TabHeaderItem>
            </TabHeader>
            <TabBody>
                <TabItem>
                    <textarea class="uk-textarea  uk-text-left" placeholder="Address" @bind="model.address" rows="2">@model.address</textarea>
                </TabItem>
                <TabItem>
                    <textarea class="uk-textarea  uk-text-left" placeholder="Note" @bind="model.note" rows="2">@model.note</textarea>
                </TabItem>
            </TabBody>
        </Tab>
    </UIContainerBox>



    @code {


        [Parameter] public CustomerModel model { get; set; }
        [Parameter] public EventCallback<CustomerModel> modelChanged { get; set; }

        void AddContact_Click()
        {
            model.contacts.Add(new ContactModel());
        }

        async Task DeleteContact_Click(ContactModel c)
        {

            if (c.id == 0)
            {
                model.contacts.Remove(c);
            }
            else
            {
                if (await js.Confirm("Deleted Contact", "Are you sure you want to delete this contact?", SweetAlertMessageType.question))
                {
                    var res = await http.ApiPost($"contact/delete/{c.id}");
                    if (res.IsSuccess)
                    {
                        toast.Add("Contact deleted successfull", MatToastType.Success);
                        model.contacts.Remove(c);
                    }
                }
            }


        }

    }
