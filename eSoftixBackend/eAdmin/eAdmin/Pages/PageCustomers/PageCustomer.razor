@page "/customer"
@inherits PageCustomerBase;
<Loading is_loading="@(is_loading || is_loading_data)" />


@{
    RenderFragment HeaderTemplate(string field_name, string display_name, string ClassName = "") =>
    @<Th OnClick="@(async () => await OrderBy(field_name))" OrderBy="@(state.pager.order_by == field_name)" OrderByType="@state.pager.order_by_type" ClassName="@($"cp {ClassName}")"> @display_name</Th>;
}
@if (!is_loading)
{
<PageContainer>
    <PageHeader title="@state.page_title" >
        <Filter>
            <ModuleView module_views="@gv.GetModuleView("page_customer")" OnClick="@ViewClick" />
        </Filter>
        <Right>
           
            <ComSearch place_holder="@GetFilterValue2(state.filters, "keyword","")" KeywordChanged="@OnSearch" show_advance_filter="true" OnFillterClick="@FilterClick">
                 <FilterDateRange @bind-dates="@state.date_range"  />
                <SelectCustomerGroup @bind-customer_group="@state.customer_group"  show_empty="true" empty_text="All Customer Group" />
            </ComSearch>
             <MudHidden Breakpoint="Breakpoint.SmAndDown">
                <AddButton roles="@gv.GetRole("customer_add")" OnClick="@(()=>nav.NavigateTo("customer/new"))">New</AddButton>
             </MudHidden>
          
        </Right>
    </PageHeader>
    <PageBody>
        
                
          
       
       <FilterInfo filters="@state.filters" OnRemoveFilterClick="@RemoveFilter" OnRemoveAllFilterClick="@RemoveAllFilter" />
        
        <Table Items="@customers"
                PerPage="@state.pager.per_page"
                TotalItem="@TotalRecord"
                CurrentPage="@state.pager.current_page"
                OnPagerChange="@SelectChange"
                OnPageChange="@ChangePager"
                isLoading="@is_loading_data"
                ShowPager="true"
                ShowCounter="true"
                EmptyText="There is no customer record.">
            <TableHeader>
                <ThCenter>Image</ThCenter>
                @HeaderTemplate("customer_code", "Code", "uk-text-center")
                @HeaderTemplate("customer_name_en", "Name (Kh)", "col-auto")
                @HeaderTemplate("customer_group/customer_group_name_en", "Customer Group", "col-auto")
                @HeaderTemplate("company_name", "Company", "col-auto")
                @HeaderTemplate("phone_1", "Phone", "uk-text-left")
                @HeaderTemplate("gender", "Gender", "uk-text-center")
                        
                <ThAuto ClassName="uk-text-center">
                    Status
                </ThAuto>
                <th class="uk-width-auto"></th>
            </TableHeader>
            <RowTemplate Context="p">
                <TdCenter>
                    <Image ImageUrl="@http.ImageUrl(p.photo)" PopupImageUrl="@http.ImageUrl(p.photo)" IsLightBox="true" IsBackgroundImage="true"/>
                </TdCenter>
                <TdCenter>
                    <AuthView roles="customer_view" url="@($"customer/{p.id}")">@p.customer_code</AuthView>
                </TdCenter>
                <td>
                    <div>
                        <AuthView roles="@gv.GetRole("customer_view")" url="@($"customer/{p.id}")">@p.customer_name_en (@p.customer_name_kh)</AuthView>
                    </div>
                </td>

                <td>
                    @p.customer_group?.customer_group_name_en
                </td>
                <td>
                    @p.company_name
                </td>
                <td>
                    @p.phone_1 @(!string.IsNullOrEmpty(p.phone_2)?$"/ {p.phone_2}":"")
                </td>
                <td>
                    @p.gender
                </td>
                <TdCenter>
                   
                </TdCenter>
            </RowTemplate>
        </Table>
    </PageBody>
</PageContainer>
<MudHidden Breakpoint="Breakpoint.MdAndUp">
    <MudFab Color="MudBlazor.Color.Primary" Icon="@Icons.Material.Filled.Add" Style="position:fixed; bottom:25px;right:5px;" />    
</MudHidden>

}
