@inject IJSRuntime JS

<MudPaper Elevation="25">
 <MudToolBar DisableGutters="true" Class="mx-4" >
    <MudText Typo="Typo.h5" Color="MudBlazor.Color.Primary">@title</MudText>
    @if(Filter!=null){
        <MudMenu Icon="@Icons.Material.Filled.ArrowDropDown" Color="MudBlazor.Color.Inherit" >
           @Filter 
        </MudMenu>
       
    }
    @Left
    @ChildContent
     <MudAppBarSpacer />
   
         @Right
    @if (show_refresh_button)
    {
    <MudIconButton Icon="@Icons.Material.Filled.Refresh" Variant="Variant.Text" OnClick="@OnRefresh"></MudIconButton>    
    }
    @if (show_back_button)
    {
    <MudIconButton Icon="@Icons.Material.Filled.Reply" Variant="Variant.Text" OnClick="GoBack"></MudIconButton>    
    }
 
   
</MudToolBar>
</MudPaper>
@code {

    [Parameter] public RenderFragment Left { get; set; }
    [Parameter] public RenderFragment Filter { get; set; }
   [Parameter] public RenderFragment ChildContent { get; set; }
   [Parameter] public RenderFragment Right { get; set; }
   [Parameter] public string title { get; set; }
    
    [Parameter] public bool show_back_button { get; set; } = false;
    [Parameter] public bool show_refresh_button { get; set; } = true;
    [Parameter] public EventCallback OnRefresh { get; set; } 

    
    private async Task GoBack()
    {
        await JS.InvokeVoidAsync("GoBack");
   }



    

}
