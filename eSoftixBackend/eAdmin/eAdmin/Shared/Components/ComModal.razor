@using Microsoft.JSInterop
@inject IJSRuntime js

@if (IsOpened)
{
    is_visible_class = "uk-animation-fast uk-animation-fade";
}
else
{
    is_visible_class = "uk-hidden";
}

<div class="custom-modal uk-text-left uk-position-fixed uk-position-cover uk-overlay @is_visible_class @isFullModal @(is_fullscreen?is_fullscreen_class:"")" id="@Guid">
    <div class="content uk-position-relative" style="min-width: @ModalWidth;border-radius:4px !important;">
        <div class="modal-header">
            @if (is_ModelFullscreen == true)
            {
                <Icon icon="fullscreen" OnClick="openFullscreen" is_visible="!is_fullscreen" className="uk-modal-close-default" />
                <Icon icon="fullscreen_exit" OnClick="openFullscreen" is_visible="is_fullscreen" className="uk-modal-close-default" />
            }
            <button @onclick="@Close_Click" class="uk-modal-close-default" type="button" uk-close></button>
            <div class="modal-title">@Title</div>
        </div>
        <div class="modal-body">
            @ChildContent
        </div>
    </div>
</div>


@code{

    [Parameter] public bool IsOpened { get; set; } = false;
    [Parameter] public EventCallback<bool> IsOpenedChanged { get; set; }
    [Parameter] public bool is_fullscreen { get; set; } = false;
    [Parameter] public bool is_ModelFullscreen { get; set; } = false;
    [Parameter] public string Guid { get; set; } = System.Guid.NewGuid().ToString();
    [Parameter] public RenderFragment ChildContent { get; set; }

    [Parameter] public string ModalWidth { get; set; } = "auto";
    [Parameter] public string Model_Width { get; set; } = "";
    [Parameter] public string Title { get; set; } = "";

    [Parameter] public EventCallback<MouseEventArgs> Close_Click { get; set; }
    string is_visible_class = "uk-hidden";

    [Parameter] public string isFullModal { get; set; } = "modal-normal";
    [Parameter] public string is_fullscreen_class { get; set; } = "fullscreen_class";
    [Parameter] public string BodyScroll { get; set; } = "100%";

    async Task openFullscreen()
    {

        if (is_fullscreen)
        {
            await js.InvokeVoidAsync("closeFullscreen", Guid);
        }
        else
        {
            await js.InvokeVoidAsync("openFullscreen", Guid);

        }
        is_fullscreen = !is_fullscreen;
    }
}
