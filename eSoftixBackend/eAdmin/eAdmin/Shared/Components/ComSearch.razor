@using Microsoft.AspNetCore.Components.Forms
 
 
<EditForm Model="@dummy" OnSubmit="Search" >
    <MudHidden Breakpoint="Breakpoint.SmAndDown">
     <div class="d-flex">
         <div> <MudTextField @bind-Value="@search_text"  Variant="Variant.Outlined" Placeholder="@placeholder" Margin="Margin.Dense" Class="cus_inputselect_search"></MudTextField></div>
         <div class="align-self-center cus_buuton_fillter">
               @if (show_advance_filter)
        {
            <MudIconButton Icon="@Icons.Material.Filled.Tune" OnClick="ShowAdvanceFilter" Size="Size.Medium" Variant="Variant.Text" Class="ml-2"></MudIconButton>
        }
         </div>
     </div>

    </MudHidden>
 <MudHidden Breakpoint="Breakpoint.MdAndUp">
    <MudIconButton Icon="@Icons.Material.Filled.Tune" OnClick="ShowAdvanceFilter" Size="Size.Medium" Variant="Variant.Text" Class="mr-2"></MudIconButton>
 </MudHidden>

</EditForm>
 <EditForm Model="@dummy" OnSubmit="FilterClick" >
    <FilterFly IsOpen="@open_advance_filter">
            <MudHidden Breakpoint="Breakpoint.MdAndUp">
            
              <MudTextField @bind-Value="@search_text"  Variant="Variant.Outlined" Placeholder="@placeholder" Label="Search"></MudTextField>

            </MudHidden>
        @ChildContent
    </FilterFly>
 </EditForm>
 

@code{
    [Parameter] public string place_holder { get; set; } = "Search...";
    public string dummy { get; set; } = "";
    [Parameter] public EventCallback<string> KeywordChanged { get; set; }
    [Parameter] public string search_text { get; set; } = "";
    [Parameter] public string FrmClass { get; set; } = "";
    
    [Parameter] public bool show_advance_filter { get; set; } = true;
    [Parameter] public EventCallback<string> OnFillterClick { get; set; }
    [Parameter] public RenderFragment ChildContent { get; set; }
 
    bool open_advance_filter;
 

    public string placeholder
    {
        get
        {

            return string.IsNullOrEmpty(place_holder) ? "Search" : place_holder;

        }
    }

    async Task Search()
    {

        await KeywordChanged.InvokeAsync(search_text);
    }
        async Task FilterClick()
    {

        await OnFillterClick.InvokeAsync(search_text);
    }
    void ShowAdvanceFilter()
    {
        open_advance_filter = true;
    }


     

}
