
@inject NavigationManager nav
<div class="uk-margin-small">
    <label class="uk-form-label" for="@id">Province</label>
    <div class="uk-form-controls">
        <select id="@id" value="@selected_value" @onchange="@((ui) => SelectedValueChange((string)ui.Value))" class="uk-select uk-width-medium uk-form-small" style="width:@Width">
            <option value="Not Set">Not Set</option>
            @foreach (var p in provinces)
            {
                <option value="@p.province_name_en">@p.province_name_en</option>
            }
        </select>
    </div>
</div>
@code{
    [Parameter] public string selected_value { get; set; } = "Male";
    [Parameter] public string Width { get; set; } = "100%";
    [Parameter] public string label { get; set; } = "Gender";


    [Parameter]
    public EventCallback<string> selected_valueChanged { get; set; }

    Guid id = Guid.NewGuid();

    List<ProvinceModel> provinces = new List<ProvinceModel>();
    protected override async Task OnInitializedAsync()
    {
        HttpClient client = new HttpClient();
        client.BaseAddress = new Uri(nav.BaseUri);
        provinces = await client.GetFromJsonAsync<List<ProvinceModel>>("sample-data/province.json");

    }
    private async Task SelectedValueChange(string n)
    {
        selected_value = n;
        await selected_valueChanged.InvokeAsync(selected_value);
    }
    class ProvinceModel
    {
        public string province_name_en { get; set; }
    }
}
