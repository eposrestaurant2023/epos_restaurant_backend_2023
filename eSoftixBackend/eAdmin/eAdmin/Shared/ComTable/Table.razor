@typeparam TItem
 
    @if (ShowPagination && ShowPaging)
    {
        <ComTotalPager TotalRecord="@TotalItem" PerPage="@PerPage" CurrentPage="@CurrentPage" SelectedPage="@PageChange" IsVisible="@(totalPage > 1 && (PagerLocation == "Both" || PagerLocation == "Top"))" />
    }
    
   
        <MudSimpleTable Style="overflow-x: auto;" Hover="true" Class="view_table">
            <thead>
                <tr>
                    @if (ShowCounter)
                    {
                        <ThCenter>Nº</ThCenter>
                    }
                    @TableHeader
                </tr>
            </thead>
            @if (Items == null || Items.Count == 0)
            {
                <tbody>
                    <tr>
                        <td colspan="10000">
                           
                                <p>@EmptyText</p>
                           
                        </td>
                    </tr>
                </tbody>

            }
            else
            {
                <tbody>
                    @foreach (var item in (Items.Select((data, i) => new { Index = i, Data = data })).ToList())
                    {
                    <tr>
                        @if (ShowCounter)
                        {
                            <TdCenter>@(PerPage*(CurrentPage -1) + item.Index+1)</TdCenter>
                        }
                            @RowTemplate(item.Data)
                        </tr>
                    }
                </tbody>
                <tfoot class="@FooterClassName">
                    @TableFooter
                </tfoot>


            }

        </MudSimpleTable>
    

    @if (ShowPaging && Items.Count > 0)
    {
         
    <MudHidden Breakpoint="Breakpoint.SmAndDown">
      <MudGrid>
          <MudItem xs="12" md="12">
              <div class="d-flex justify-end">
              <div class="pt-2 mx-2 cus_class_select">
                  <div class="d-flex align-center">
                      <div>
                           @if (ShowPager)
                                {
                                 <ComPagerPerPage OnChange="@PagerChange" PerPage="@PerPage" />
                                }
                      </div>
                      <div>
                            @if (ShowTotalCount)
                            {
                               <Column ClassName="uk-width-auto wrp-page-size-info">
                                    <PagerInfo TotalItem="TotalItem" CurrentPage="CurrentPage" PerPage="PerPage" />
                                </Column>
                            }
                      </div>
                  </div>
                  
                    
                  
              </div>
               <div class="pt-2">
                         @if (ShowPagination)
                            {
                            <ComTotalPager TotalRecord="@TotalItem" PerPage="@PerPage" CurrentPage="@CurrentPage" SelectedPage="@PageChange" IsVisible="@(totalPage > 1 && (PagerLocation == "Both" || PagerLocation == "Bottom"))" />
                          }
              </div>
              </div>
                
          </MudItem>
       

      </MudGrid>
    </MudHidden>   

        <MudHidden Breakpoint="Breakpoint.MdAndUp">
      <MudGrid>
          <MudItem xs="12" md="12">
              <div class="d-flex justify-space-between">
                  <div class="cus_class_select">
                <div class="d-flex align-center">
                    <div>Rows per page</div>
                    <div>
                           @if (ShowPager)
                                {
                                 <ComPagerPerPage OnChange="@PagerChange" PerPage="@PerPage" />
                                }
                      </div>
                      <div>
                            @if (ShowTotalCount)
                            {
                               <Column ClassName="uk-width-auto wrp-page-size-info">
                                    <PagerInfo TotalItem="TotalItem" CurrentPage="CurrentPage" PerPage="PerPage" />
                                </Column>
                            }
                      </div>
                  </div>
                  </div>
               <div>
                         @if (ShowPagination)
                            {
                            <ComTotalPager TotalRecord="@TotalItem" PerPage="@PerPage" CurrentPage="@CurrentPage" SelectedPage="@PageChange" IsVisible="@(totalPage > 1 && (PagerLocation == "Both" || PagerLocation == "Bottom"))" />
                          }
              </div>
              </div>
                
          </MudItem>
       

      </MudGrid>
    </MudHidden>   

    
    }
    @if (isLoading)
    {
        <div class="table_loading">
            <Spinner />
        </div>
    }
 
@code { 
    [Parameter] public RenderFragment TableHeader { get; set; }
    [Parameter]    public RenderFragment<TItem> RowTemplate { get; set; }
    [Parameter]    public RenderFragment TableFooter { get; set; }
    [Parameter]    public IReadOnlyList<TItem> Items { get; set; }
    [Parameter]    public EventCallback<int> OnPageChange { get; set; }
    [Parameter]    public EventCallback<int> OnPagerChange { get; set; }
    [Parameter]    public bool ShowWhenEmptyItem { get; set; } = false;
    [Parameter]    public int CurrentPage { get; set; }=1;
    [Parameter]    public bool ShowCounter { get; set; }
    [Parameter]    public string EmptyText { get; set; } = "There's no record in the system";
    [Parameter]    public string EmptyIcon { get; set; } = "search";
    [Parameter]    public string IconSize { get; set; } = "1";
    [Parameter]    public bool EmptyShowTable { get; set; }
    [Parameter]    public bool isLoading { get; set; } = false;
    [Parameter]    public bool ShowPager { get; set; } = false;
    [Parameter]    public bool ShowPaging { get; set; } = true;
    [Parameter]    public int PerPage { get; set; } = 0;
    [Parameter]    public string ClassName { get; set; } = "uk-table-small uk-table-striped uk-table-hover";
    [Parameter]    public string ScrollClass { get; set; } = "";
    [Parameter]    public string CustomClass { get; set; } = "";
    [Parameter]    public string ClassHiddePagging { get; set; } = "";
    [Parameter]    public string FooterClassName { get; set; } = "";
    [Parameter]    public int TotalItem { get; set; }
    [Parameter]    public bool ShowPagination { get; set; } = true;
    [Parameter]    public bool ShowTotalCount { get; set; } = true;

    int totalPage;
    [Parameter]    public string PagerLocation { get; set; } = "Bottom";
    public string loadingClass { get; set; } = "";
    protected override void OnParametersSet()
    {
        if (ShowPagination)
        {
            if (PerPage > 0)
            {
                totalPage = Convert.ToInt32(Math.Ceiling(Convert.ToDecimal(TotalItem) / Convert.ToDecimal(PerPage)));
            }
        }
        if (isLoading)
        {
            loadingClass = "is_loading";
        }
        else
        {
            loadingClass = "";
        }

        @if (Items != null)
        {
            if (Items.Count == 0)
            {
                ClassName = "uk-table-small uk-table-divider";
            }

        }
        else if (Items == null)
        {
            ClassName = "uk-table-small uk-table-divider";
        }
        else
        {
            ClassName = "uk-table-small uk-table-divider uk-table-hover";

        }
    }

    async Task PageChange(int page)
    {
        isLoading = true;
        await OnPageChange.InvokeAsync(page);
        isLoading = false;
    }

    async Task PagerChange(int per_page)
    {
        isLoading = true;
        await OnPagerChange.InvokeAsync(per_page);
        StateHasChanged();
        isLoading = false;
    }
    public int GetLastRecordNumber()
    {
        if (TotalItem < CurrentPage * PerPage)
        {
            return TotalItem;
        }
        return CurrentPage * PerPage;
    }
}
