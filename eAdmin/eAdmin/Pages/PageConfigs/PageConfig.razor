@page "/config"
@layout BlankLayout
@inject ILocalStorageService storageService
@inject AuthenticationStateProvider  authenticationStateProvider
@inject IHttpService  http;
@inject NavigationManager nav;
@inject IStringLocalizer<Resource> lang
@inject IConfiguration config
 
    <div class="wrp-login-page">
        <div class="wrp-login-form">
            <div class="login-header">
                <img src="images/ePOS-Rest.svg" />
            </div>
            <div class="login-form">
                <div>
                    @if (is_loading)
                    {
                        <Spinner />
                    }
                    else
                    {
                        if (need_reset_db)
                        {

                            <h1>@lang["Please reset your database before continue."]</h1>

                            <div>
                                @if (is_check_reset_db)
                                {
                                    <Button><Spinner/> @lang["Continue"]</Button>
                                }
                                else
                                {
                                    <Button OnClick="@CheckRequiredResetDatabase">@lang["Continue"]</Button>
                                }
                            </div>
                        }
                        else
                        {
                            <ComEnterProjectID />
                        }

                    }


                </div>
            </div>
        </div>
    </div>
 

@code {


    bool is_loading = false;
    bool is_check_reset_db = false;
    bool need_reset_db;



    protected override async Task OnInitializedAsync()
    {

        is_loading = true;

        //check if need to resert db
        var check_db = await http.ApiGet("CheckRequiredResetDatabase");
        if (check_db.IsSuccess)
        {
            need_reset_db = Convert.ToBoolean(check_db.Content.ToString());
        }
        is_loading = false;

    }

    async  Task CheckRequiredResetDatabase()
    {
        is_check_reset_db = true;
        var check_db = await http.ApiGet("CheckRequiredResetDatabase");
        if (check_db.IsSuccess)
        {
            need_reset_db = Convert.ToBoolean(check_db.Content.ToString());
        }
        is_check_reset_db = false;
    }





}