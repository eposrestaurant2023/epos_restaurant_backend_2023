@inherits PageCore;
<ComSaleDetailRibbonStatus sale="sale" />
    <div class="btn_show_logo" @onclick="@ShowHideLogo">@(state.pager.show_logo ? lang["Hide Logo"] : lang["Show Logo"]) <span uk-icon="icon: image; ratio: 0.8;"></span></div>
    <PageHeader is_subpage="true">
        <HeaderLeft ClassName="uk-flex-top">
            <div>
                @if (state.pager.show_logo)
                {
                    <img src="@http.ImageUrl(gv.business_info.company_logo)" class="uk-image" style="width:100px;" />
                }
                <div class="uk-text-top">
                    <div class="font-xxl"> @(gv.current_language?.language_id == "km-KH" ?sale.business_branch?.business_branch_name_kh:sale.business_branch?.business_branch_name_en)</div>
                    <div>
                        @(gv.current_language?.language_id == "km-KH" ?sale.business_branch?.address_kh : sale.business_branch?.address_en)
                    </div>
                    <div>@sale.business_branch.phone_1</div>
                    <div>@sale.business_branch.phone_2</div>
                </div>
            </div>
        </HeaderLeft>
        <HeaderRight ClassName="uk-flex-top">
            <div class="uk-text-right">
                <h2 class="uk-text-uppercase uk-margin-small-bottom">@lang["Invoice"]</h2>
                <div class="uk-margin-small-bottom">
                    @if (is_view_detail)
                    {
                        <ComAuthorize roles="@gv.GetRole("sale_view")">
                            <span>
                               @if(sale.document_number == "New")
                               {
                                   @sale.sale_number
                               }
                               else
                               {
                                   @sale.document_number
                               }

                            </span>
                        </ComAuthorize>
                    }
                    else
                    {
                       <span>@lang["INV#"] @sale.document_number</span>
                    }

                </div>
                <div>@lang["Balance Due"]</div>
                <div class="font-xxl"> @sale.balance.ToString(gv.currency_format)</div>
            </div>
        </HeaderRight>
    </PageHeader>
    <div uk-grid>
        <div class="uk-width-expand">
            <ComSaleDetail_CustomerAddress sale="@sale" />
        </div>
        <div class="uk-width-auto">
            <div class="box-invoice-header-info">
                <div class="invoice-header-title">@lang["Invoice Information"]</div>
                <table class="invoice_header_description">
                    <tr>
                        <td>@lang["Invoice Date"]:</td>
                        <td>@sale.working_date.ToString(gv.date_format)</td>
                    </tr>
                    @if (sale.business_branch != null)
                    {
                        <tr>
                            <td>@lang["Business Branch"]:</td>
                            <td>@sale.business_branch?.business_branch_name_en</td>
                        </tr>
                    }
                    @if (sale.outlet != null)
                    {
                        <tr>
                            <td>@lang["Business Branch"]:</td>
                            <td>@sale.business_branch?.business_branch_name_en</td>
                        </tr>
                    }
                    @if (!String.IsNullOrEmpty(sale.outlet_name_en))
                    {
                        <tr>
                            <td>@lang["Outlet"]:</td>
                            <td>@sale.outlet_name_en</td>
                        </tr>
                    }
                    @if (!String.IsNullOrEmpty(sale.station_name_en))
                    {
                        <tr>
                            <td>@lang["Station"]:</td>
                            <td>@sale.station_name_en</td>
                        </tr>
                    }
                    @if (!String.IsNullOrEmpty(sale.cash_drawer_name))
                    {
                        <tr>
                            <td>@lang["Cash Drawer"]:</td>
                            <td>@sale.cash_drawer_name</td>
                        </tr>
                    }
                    @if (gv.is_shift_management)
                    {
                        if (sale.working_day_number != null)
                        {
                            <tr>
                                <td>@lang["Working Day No"]:</td>
                                <td>
                                    <ComAuthorize roles="@gv.GetRole("working_day_management")" url="@($"workingday/{sale.working_day_id}")">
                                        @sale.working_day_number
                                    </ComAuthorize>
                                </td>
                            </tr>
                        }

                        @if (sale.cashier_shift_number != null)
                        {
                            <tr>
                                <td>@lang["Cashier Shift No"]:</td>
                                <td>
                                    <ComAuthorize roles="@gv.GetRole("cashier_shift_management")" url="@($"cashiershift/{sale.cashier_shift_id}")">
                                        @sale.cashier_shift_number
                                    </ComAuthorize>
                                </td>
                            </tr>

                        }

                    }
                </table>
            </div>
        </div>
    </div>
 
@code {
    [Parameter] public SaleModel sale { get; set; }
    [Parameter] public bool is_view_detail { get; set; } = false;

    public string StateKey
    {
        get
        {

            return "803024893204r3ui20r9u0rfmdjiosfdjlsfjsd" + gv.current_login_user.id; //Storage and Session Key  
        }
    }

    protected override async Task OnInitializedAsync()
    {
        is_loading = true;
        state = await GetState(StateKey);
        is_loading = false;

    }
    public async Task ShowHideLogo()
    {
        state.pager.show_logo = !state.pager.show_logo;
        await SetState(StateKey, state);
    }


}
