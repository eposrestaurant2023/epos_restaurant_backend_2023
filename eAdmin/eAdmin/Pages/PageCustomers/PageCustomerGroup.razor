@page "/customergroup"
@inherits PageCustomerGroups
@inject IStringLocalizer<Resource> lang
<Loading is_loading="@(is_loading || is_loading_data)" />

@if (!is_loading)
{
    <Title Value="@lang["Customer Group"]"></Title>
    <PageContainer roles="@gv.GetRole("customer_group_management")">
        <PageHeader>
            <HeaderLeft>
                <PageTitle>
                    <HeaderTemplate>
                        @lang[state.page_title]
                    </HeaderTemplate>
                    <FilterTemplate>
                        <PageFilter title="@lang["Status"]">
                            <ModuleView module_views="@gv.GetModuleView("page_customer_group")" OnClick="@ViewClick" />
                        </PageFilter>
                    </FilterTemplate>
                </PageTitle>
            </HeaderLeft>
            <HeaderRight>
                <AddButton roles="@gv.GetRole("customer_group_add")" OnClick="@AddNew" custom_class="button-create">@lang["New Customer Group"]</AddButton>
                <MudHidden Breakpoint="Breakpoint.SmAndDown">
                    <ComSearch place_holder="@GetFilterValue2(state.filters, "keyword","")" KeywordChanged="@OnSearch" show_advance_filter="false" />
                </MudHidden>
                <RefreshButton OnClick="@(async()=>await LoadData())" />
            </HeaderRight>
        </PageHeader>
        <PageBody>
            <MudHidden Breakpoint="Breakpoint.MdAndUp">
                <ComSearch is_fullwidth="true" place_holder="@GetFilterValue2(state.filters, "keyword","")" KeywordChanged="@OnSearch" show_advance_filter="false" />
                <Spacing Number="4" />
            </MudHidden>
            <Com is_visible="@(customer_groups != null)">
                <Table Items="@customer_groups"
                       PerPage="@state.pager.per_page"
                       TotalItem="@TotalRecord"
                       CurrentPage="@state.pager.current_page"
                       OnPagerChange="@SelectChange"
                       OnPageChange="@ChangePager"
                       isLoading="@is_loading_data"
                       ShowPager="true"
                       ShowCounter="true"
                       ClassName="uk-table-small uk-table-striped uk-table-hover"
                       ScrollClass="uk-overflow-auto">
                    <TableHeader>
                        <Th OnClick="@(async () => await OrderBy("customer_group_name_en"))" OrderBy="@(state.pager.order_by == "customer_group_name_en")" OrderByType="@state.pager.order_by_type" ClassName="cp col-auto">@lang["Name En"]</Th>
                        <Th OnClick="@(async () => await OrderBy("customer_group_name_kh"))" OrderBy="@(state.pager.order_by == "customer_group_name_kh")" OrderByType="@state.pager.order_by_type" ClassName="cp col-auto">@lang["Name Kh"]</Th>
                        <ThCenter>@lang["Status"]</ThCenter>
                        <th class="uk-width-auto"></th>
                    </TableHeader>
                    <RowTemplate Context="p">
                        <td>
                            <ComAuthorize roles="@gv.GetRole("customer_group_edit")" OnClick="@(()=>OnEdit(p.id))">@p.customer_group_name_en</ComAuthorize>
                        </td>
                        <td>
                            <ComAuthorize roles="@gv.GetRole("customer_group_edit")" OnClick="@(()=>OnEdit(p.id))">@p.customer_group_name_kh</ComAuthorize>
                        </td>
                        <TdCenter>
                            <LabelDeleted is_visible="@p.is_deleted" />
                            <LabelActive is_visible="@(!p.is_deleted && p.status)" OnClick="(()=>OnToogleStatusLabel(p))" roles="@gv.GetRole("customer_group_edit")" is_loading="@p.is_change_status" />
                            <LabelInActive is_visible="@(!p.is_deleted && !p.status)" OnClick="(()=>OnToogleStatusLabel(p))" roles="@gv.GetRole("customer_group_edit")" is_loading="@p.is_change_status" />
                        </TdCenter>
                        <TdActions is_loading="@p.is_loading">
                            <TableActionItem roles="@gv.GetRole("customer_group_edit")" icon="edit" is_visible="@(!p.is_deleted)" OnClick="@(()=>OnEdit(p.id))">@lang["Edit"]</TableActionItem>
                            <TableActionItem roles="@gv.GetRole("customer_group_add")" icon="file_copy" OnClick="@(()=>Clone_Click(p.id))">@lang["Clone"]</TableActionItem>
                            <TableActionItem roles="@gv.GetRole("customer_group_edit")" icon="highlight_off" is_visible="@(p.status && !p.is_deleted)" OnClick="@(()=>OnToogleStatus(p))">@lang["Inactive"]</TableActionItem>
                            <TableActionItem roles="@gv.GetRole("customer_group_edit")" icon="check" is_visible="@(!p.status && !p.is_deleted)" OnClick="@(() => OnToogleStatus(p))">@lang["Active"]</TableActionItem>
                            <TableActionItem roles="@gv.GetRole("customer_group_delete")" icon="delete" is_visible="@(!p.is_deleted)" OnClick="@(() => OnDeleteRestore(p))">@lang["Delete"]</TableActionItem>
                            <TableActionItem roles="@gv.GetRole("customer_group_restore")" icon="refresh" is_visible="@(p.is_deleted)" OnClick="@(()=>OnDeleteRestore(p,false))">@lang["Restore"]</TableActionItem>
                        </TdActions>
                    </RowTemplate>
                </Table>
            </Com>
        </PageBody>
    </PageContainer>
    @if (ShowModal)
    {
        <ComAddCustomerGroup model="@model" @bind-is_open="ShowModal" Save_Click="OnSave" modal_title="@ModalTitle" />
    }
}


