@inject IStringLocalizer<Resource> lang
@inject IHttpService http;
<UIContainerBox Title="@(lang["Yearly Sale"])">
    <div>
        <Button  custom_class="@(chart_type==ApexCharts.ChartType.Bar?"active_chart":"")" OnClick="@(()=>chart_type=ApexCharts.ChartType.Bar)">@lang["Bar_Chart"]</Button>
        <Button  custom_class="@(chart_type== ApexCharts.ChartType.Line?"active_chart":"")" OnClick="@(()=>chart_type=ApexCharts.ChartType.Line)">@lang["Line_Chart"]</Button>
        <Button custom_class="@(chart_type==ApexCharts.ChartType.Area?"active_chart":"")" OnClick="@(()=>chart_type=ApexCharts.ChartType.Area)">@lang["Area_Chart"]</Button>
    </div>
    @if (is_loading)
    {
        <Spinner />
    }
    else
    {
        @if (chart != null)
        {
            <ComChart chart_data="chart" chart_type="@chart_type" height="200" />
        }
    }


</UIContainerBox>
 
@code{
    [CascadingParameter] public GlobalVariableModel gv { get; set; }

    [Parameter] public string customer_id { get; set; }
    List<ApexChartModel> chart = new List<ApexChartModel>();
 
    bool is_loading;
    List<YearlySaleRevenueModel> data = new List<YearlySaleRevenueModel>();
    List<YearlySaleRevenueModel> temp = new List<YearlySaleRevenueModel>();
    ApexCharts.ChartType chart_type = ApexCharts.ChartType.Bar;
    protected override async Task OnInitializedAsync()
    {
        is_loading = true;
        var resp = await http.ApiPost("GetData", new FilterModel() { procedure_name = "sp_get_yearly_sale_by_customer_json", procedure_parameter = $"'{gv.business_branch_ids_filter_1}','{customer_id}'" });
        if (resp.IsSuccess)
        {
            data = JsonSerializer.Deserialize<List<YearlySaleRevenueModel>>(resp.Content.ToString());
            SetLineData();
        }
        is_loading = false;
    }

    void SetLineData()
    {
        if (data != null)
        {
            chart = new List<ApexChartModel>();

            temp = data.Select(r => new YearlySaleRevenueModel()
            {
                business_branch_id = r.business_branch_id,
                color = r.color,
                business_branch_name = r.business_branch_name,
            })
                          .GroupBy(p => new { p.business_branch_id })
                          .Select(g => g.FirstOrDefault())
                          .ToList();
            chart = new List<ApexChartModel>();
            foreach (var d in temp)
            {
                List<ApexChartDataModel> a = data.Where(r => r.business_branch_id == d.business_branch_id).Select(r => new ApexChartDataModel() { label = r.cal_date.ToString("yyyy"), value = Convert.ToDecimal(r.total_amount) }).ToList();
                chart.Add(new ApexChartModel()
                {
                    color = d.color,
                    title = d.business_branch_name,
                    data = a
                });

            }
        }

    }




}