@inject IHttpService http
@inject NavigationManager nav
@inject IStringLocalizer<Resource> lang
 
        <UIGridCenter>
            <UISummaryBox ImageUrl="@model.photo">
                <ContentLeft>
                    <table>
                        <tr>
                            <th>@lang["Customer Code"]</th>
                            <td>@model.customer_code</td>
                        </tr>
                        <tr>
                            <th>@lang["Customer (En)"]</th>
                            <td>@model.customer_name_en</td>
                        </tr>
                        <tr>
                            <th>@lang["Customer (Kh)"]</th>
                            <td>@model.customer_name_kh</td>
                        </tr>
                        <tr>
                            <th>@lang["Group"]</th>
                            <td>@model.customer_group?.customer_group_name_en</td>
                        </tr>
                    </table>
                    <LabelCustomerBusinessBranchs customer_business_branchs="@model.customer_business_branchs" />
                </ContentLeft>
                <ContentRight>
                    <table>
                        <tr>
                            <th>@lang["Gender"]</th>
                            <td>@model.gender</td>
                        </tr>
                        <tr>
                            <th>@lang["City"]</th>
                            <td>@model.address</td>
                        </tr>
                        <tr>
                            <th>@lang["Phone Number"]</th>
                            <td>@model.phone_1</td>
                        </tr>
                    </table>
                </ContentRight>
            </UISummaryBox>

            <UIContainerBox>
                <ComCustomerKPI data="@kpi" />
            </UIContainerBox>

            <ComCustomerDetail_YearlySaleBarchart customer_id="@(model.id.ToString())" />



            <UIContainerBox Title="@lang["Social Media Information"]">
                <ListTable>
                    <ListTableItem ItemTitle="@lang["Email"]">@model.email</ListTableItem>

                </ListTable>
            </UIContainerBox>
            <UIContainerBox Title="@lang["Note"]" is_visible="@(!string.IsNullOrEmpty(model.note))">
                <div class="text-area">
                    @model.note
                </div>
            </UIContainerBox>
            <UIContainerBox Title="@lang["Address"]" is_visible="@(!string.IsNullOrEmpty(model.address))">
                @model.address
            </UIContainerBox> 
        </UIGridCenter> 
        <div class="invoice_footer_description">
            <div>
                @lang["Created By"] @model.created_by @lang["on"] @model.created_date.ToString(gv.date_time_format)
            </div>

            @if (model.is_deleted)
            {
                <div>
                    @lang["Deleted by"] @model.deleted_by @lang["on"] @(model.deleted_date != null? model.deleted_date.Value.ToString(gv.date_time_format):"")
                </div>
            }
        </div>
    @code {

        [Parameter] public CustomerModel model { get; set; }

        [Parameter] public List<BusinessBranchModel> business_branches { get; set; } = new List<BusinessBranchModel>();

        [CascadingParameter] public GlobalVariableModel gv { get; set; }

        CustomerKPIModel kpi = new CustomerKPIModel();

        protected override async Task OnInitializedAsync()
        {
            var resp = await http.ApiPost("GetData", new FilterModel() { procedure_name = "sp_get_customer_kpi_json", procedure_parameter = $"'{model.id}'" });
            if (resp.IsSuccess)
            {
                var data = JsonSerializer.Deserialize<List<CustomerKPIModel>>(resp.Content.ToString());
                if (data.Any())
                {
                    kpi = data.FirstOrDefault();
                }
                else
                {
                    kpi = new CustomerKPIModel();
                }
            }
        }
    }

