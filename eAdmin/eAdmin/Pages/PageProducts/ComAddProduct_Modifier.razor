@inject IStringLocalizer<Resource> lang
 
@foreach (var s in model.product_modifiers.Where(r => r.is_section == true))
{


<UIContainerBox Title="@s.section_name">
    <TextInput @bind-text="@s.section_name" label="Section Name" />
    <ComInputCheckBox @bind-value="@s.is_required" label="Is Required" />
    <ComInputCheckBox @bind-value="@s.is_multiple_select" label="Allow Multiple Select" />

    <hr />
    <ModifierTypeahead modifier="@modifier" modifierChanged="@((val)=>OnSelectModifer(s, val))"  />
    <hr />
    <table class="uk-table  view_table set-verticle-middle uk-table-small uk-table-striped uk-table-hover">
        <tr>
            <Th>Modifier Name</Th>
            <ThCenter>Price</ThCenter>
            <ThCenter></ThCenter>
        </tr>
        @foreach (var pm in s.children.Where(r => r.is_deleted == false && r.is_section == false))
        {
            <tr>
                <td>
                    @pm.modifier.modifier_name
                </td>
                <TdCenter>
                    <NumberInput placeholder="Price" @bind-text="@pm.price" width="100px" />
                </TdCenter>
                <TdCenter>
                    <Icon icon="delete" OnClick="@(() => DeleteModifier(pm))" is_visible="@(pm.modifier_group_id == 0)" />
                </TdCenter>
            </tr>
        }
    </table>

</UIContainerBox>

}
<Button OnClick="@AddSection">@lang["Add Section"]</Button>


@code{
    [Parameter] public ProductModel model { get; set; }


    private ModifierModel _modifier;

    public ModifierModel modifier
    {
        get { return _modifier; }
        set
        {
             
            _modifier = value;
        }
    }

    void OnSelectModifer(ProductModifierModel parent, ModifierModel child)
    {

        if (!parent.children.Where(r => r.is_deleted == false   && r.modifier.modifier_name.Trim().ToLower().Contains(child.modifier_name.ToLower().Trim())).Any())
        {
            parent.children.Add(new ProductModifierModel() { modifier = child, modifier_id = child.id });
        }
        modifier = null;
    }


    void DeleteModifier(ProductModifierModel pm)
    {
        if (pm.id > 0)
        {
            pm.is_deleted = true;
        }
        else
        {
            model.product_modifiers.Remove(pm);
        }
    }

    void AddSection()
    {
        model.product_modifiers.Add(new ProductModifierModel()
        {
            section_name = "Section Name",
            is_section = true

        });
    }


}