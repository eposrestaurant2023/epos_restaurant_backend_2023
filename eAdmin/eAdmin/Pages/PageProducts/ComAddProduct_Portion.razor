@inject IStringLocalizer<Resource> lang

    <UIContainerBox Title="Product Prices" Icon="monetization_on" is_show_add_button="true" OnAddClick="@AddProductPortion">
        @if (is_loading)
        {
            <Spinner />
        }
        else
        {
            @if (model.product_portions.Any())
            {
                <div class="uk-overflow-auto">
                    <table class="uk-table  view_table set-verticle-middle uk-table-small uk-table-striped uk-table-hover  ">
                        <thead>
                            <tr>
                                <ThAuto>Portion</ThAuto>
                                <Th>Unit</Th>
                                <th>Cost</th>
                                @foreach (var p in gv.price_rules)
                                {
                                    <ThCenter>
                                        @p.price_name
                                    </ThCenter>
                                }
                                <th></th>
                            </tr>
                            <tr>
                                <th></th>
                                <th></th>
                                @foreach (var p in gv.price_rules)
                                {
                                    <ThCenter>
                                        <LabelActive is_visible="@(IsPriceRuleActive(p))" />
                                        <LabelInActive is_visible="@(!IsPriceRuleActive(p))" />
                                    </ThCenter>
                                }
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var pp in model.product_portions.Where(r => r.is_deleted == false))
                            {
                                <tr>
                                    <td>
                                        <TextInput placeholder="Portion Name" @bind-text="@pp.portion_name" width="150px" />

                                    </td>

                                    <td>
                                        <SelectUnit label="@lang["Unit"]" @bind-selected_value="@pp.unit_id" @bind-unit="@pp.unit" unit_category_id="@pp.unit.unit_category_id" is_select_unit_category="true" show_empty="true">
                                            <ValidationMessage For="@(()=>pp.unit_id)" />
                                        </SelectUnit>
                                    </td>
                                    
                                    <TdCenter>
                                        <NumberInput placeholder="Cost" @bind-text="@pp.cost" />
                                    </TdCenter>
                                    @foreach (var p in price_rules)
                                    {

                                        <TdCenter>
                                            @if (pp.product_prices.Where(r => r.price_rule_id == p.id).Any())
                                            {
                                                <NumberInput placeholder="@p.price_name"
                                                             @bind-text="@pp.product_prices.Where(r => r.price_rule_id == p.id).FirstOrDefault().price"
                                                             is_read_only="@(!@pp.product_prices.Where(r => r.price_rule_id == p.id).FirstOrDefault().status)"
                                                             class_name="uk-text-center" />
                                            }
                                        </TdCenter>
                                    }
                                    <td>
                                        <Icon icon="delete" OnClick="@(() => DeletePortion(pp))" is_visible="@(model.product_portions.Where(r => r.is_deleted == false).Count() > 1)" />
                                    </td>
                                </tr>

                            }

                        </tbody>
                    </table>
                </div>

            }
            else
            {
                <p>There is no product portions</p>
            }
        }


    </UIContainerBox>

    @code {

        [CascadingParameter] public GlobalVariableModel gv { get; set; }
        [Parameter] public ProductModel model { get; set; }

        List<PriceRuleModel> price_rules = new List<PriceRuleModel>();


        bool is_loading;
        protected override async Task OnInitializedAsync()
        {
            is_loading = true;
            await Task.Delay(100);
            price_rules = JsonSerializer.Deserialize<List<PriceRuleModel>>(JsonSerializer.Serialize(gv.price_rules));

            if (model.id == 0 && model.product_portions.Count() == 0)
            {

                model.product_portions.Add(new ProductPortionModel(price_rules) { portion_name = "Normal" });

            }
            else
            {
                var data = model.product_portions.SelectMany(r => r.product_prices).Where(r => r.is_deleted == false);
                if (data.Any())
                {
                    int default_price_rule_id = data.FirstOrDefault().price_rule_id;

                }

            }
            is_loading = false;
        }



        void OnChangeStatus(PriceRuleModel p)
        {
            model.product_portions.Where(r => r.is_deleted == false).SelectMany(r => r.product_prices).Where(r => r.is_deleted == false && r.price_rule_id == p.id).ToList().ForEach(r => r.status = !r.status);
        }

        void AddProductPortion()
        {
            model.product_portions.Add(new ProductPortionModel(price_rules) { portion_name = "Portion Name" });
        }


        void DeletePortion(ProductPortionModel pp)
        {
            if (pp.id == 0)
            {
                model.product_portions.Remove(pp);

            }
            else
            {
                pp.is_deleted = true;
            }
        }

        bool IsPriceRuleActive(PriceRuleModel p)
        {

            var data = model.product_portions.Where(r => r.is_deleted == false).SelectMany(r => r.product_prices).Where(r => r.price_rule_id == p.id);

            if (data.Any())
            {
                return data.FirstOrDefault().status;
            }
            return false;

        }


    }
