@page "/productcategory"

@inherits PageCore;
<Loading is_loading="@is_loading" />
@if (!is_loading)
{
    <Title Value="@lang["Product Category & Group"]"></Title>
    <PageContainer roles="@gv.GetRole("product_category_group_management")">
        <PageHeader>
            <HeaderLeft>
                <PageTitle ShowFilter="false">
                    <HeaderTemplate>
                        @lang["Product Category & Group"]
                    </HeaderTemplate>
                </PageTitle>
            </HeaderLeft>
            <HeaderRight>
                <MudHidden Breakpoint="Breakpoint.SmAndDown">
                    <AddButton roles="@gv.GetRole("product_group_category_add")" url="productcategory/new">@lang["New Category & Group"]</AddButton>

                </MudHidden>
                <MudHidden Breakpoint="Breakpoint.MdAndUp">
                    <AddButton roles="@gv.GetRole("product_group_category_add")" url="productcategory/new"></AddButton>

                </MudHidden>
                <RefreshButton OnClick="@(async()=>await LoadData())" />
            </HeaderRight>
        </PageHeader>
        <PageBody>
            <UIGridCenter>
                <Tab>
                    <div>
                        <ViewEmptyTemplate is_view="@(models.Any())" is_box_empty="true">
                            @foreach (var d in models.ToList())
                            {
                                <div class="container-layout">
                                    <div class="title-header">
                                        <div class="uk-panel">
                                            <div class="uk-float-left">
                                                <span>
                                                    @(gv.current_language?.language_id == "km-KH" ?d.product_group_kh:d.product_group_en)
                                                </span>
                                            </div>
                                            <Column ClassName="uk-float-right">
                                                <div>
                                                    <LabelActive is_visible="@d.status" is_loading="@d.is_change_status" ClassName="cp" roles="@gv.GetRole("product_group_category_edit")" />
                                                    <LabelInActive is_visible="@(!d.status)" is_loading="@d.is_change_status" ClassName="cp" roles="@gv.GetRole("product_group_category_edit")" />

                                                    <span>
                                                        <Icon icon="edit" url="@($"productcategory/edit/{d.id}")" roles="@gv.GetRole("product_group_category_edit")" />
                                                    </span>

                                                    <span>
                                                        <Icon icon="delete" OnClick="@(()=>Deleted(d))" roles="@gv.GetRole("product_group_category_delete")" is_visible="@(!d.is_built_in)" />
                                                    </span>

                                                </div>
                                            </Column>
                                        </div>
                                    </div>

                                    <hr />
                                    <div>
                                        <Tab>
                                            <div class="uk-overflow-auto table-scroll">
                                                <table class="uk-table cus_hearder_table view_table set-verticle-middle uk-table-small uk-table-striped uk-table-hover">
                                                    <tr>
                                                        <Th>@lang["Product Category En"]</Th>
                                                        <Th>@lang["Product Category Kh"]</Th>
                                                        <ThCenter>@lang["Status"]</ThCenter>
                                                        <ThCenter></ThCenter>
                                                    </tr>
                                                    <ViewEmptyTemplate is_view="@d.product_categories.Any()" colspan="6">
                                                        @foreach (var s in d.product_categories)
                                                        {
                                                            <tr>
                                                                <td>@s.product_category_en</td>
                                                                <td>@s.product_category_kh </td>
                                                                <TdCenter>
                                                                    <LabelActive is_visible="@s.status" is_loading="@s.is_change_status" />
                                                                    <LabelInActive is_visible="@(!s.status)" is_loading="@s.is_change_status" />
                                                                </TdCenter>
                                                                <TdCenter>
                                                                  <TdActions>
                                                                        <TableActionItem OnClick="(()=>onOpenDialogClick(s))">@lang["Change Product Group"]</TableActionItem>
   
                                                                    </TdActions>
                                                                </TdCenter>
                                                            </tr>
                                                        }
                                                    </ViewEmptyTemplate>
                                                </table>
                                            </div>
                                        </Tab>
                                    </div>
                                </div>
                            }
                           
                        </ViewEmptyTemplate>
                    </div>
                </Tab>
            </UIGridCenter>
            
        </PageBody>

       <EditFormContext Cancel_Click="Cancel_click" model="change_group_model" is_opened="is_change_group" title="@dialog_title" Save_Click="@SaveGroupChage" is_submitting="change_group_model.is_loading" modal_width="500px">
                <SelectProductGroup @bind-selected_value="product_group_id" />
            
        </EditFormContext>

    </PageContainer>



}

@code{
    List<ProductGroupModel> models = new List<ProductGroupModel>();
    List<ProductCategoryModel> product_category = new List<ProductCategoryModel>();
    bool is_change_group = false;
    ProductCategoryModel change_group_model = new ProductCategoryModel();
    int product_group_id = 0;
    private DialogOptions dialogOptions = new() { FullWidth = true,MaxWidth=MaxWidth.Small,DisableBackdropClick=true,CloseButton=true };
    string ControllerApi = "ProductGroup";
    string dialog_title = "";
    protected override async Task OnInitializedAsync()
    {
        is_loading = true;
        await LoadData();
        is_loading = false;
    }

    async Task LoadData(string api_url = "")
    {
        is_loading = true;
        is_loading_data = true;

        if (string.IsNullOrEmpty(api_url))
        {

            api_url = $"{ControllerApi}?$expand=product_categories($filter=is_deleted eq false;$expand=products($select=id;$top=1))&$filter=is_deleted eq false and id ne 1";
        }

        var resp = await http.ApiGetOData(api_url);
        if (resp.IsSuccess)
        {

            models = JsonSerializer.Deserialize<List<ProductGroupModel>>(resp.Content.ToString());
            gv.product_groups = models;
            gv.product_categories = models.SelectMany(r => r.product_categories).ToList();

        }
        is_loading_data = false;
        is_loading = false;
    }

    void onOpenDialogClick(ProductCategoryModel category)
    {
        dialog_title = lang["Product Product Group"] + $": {category.product_category_en}";
        is_change_group = true;

        product_group_id = category.product_group_id;
        change_group_model = category; 
    }

    async Task SaveGroupChage()
    {
        change_group_model.product_group_id = product_group_id;
        var save_model = JsonSerializer.Deserialize<ProductCategoryModel>(JsonSerializer.Serialize(change_group_model));
        save_model.products = null;
        var res = await http.ApiPost("ProductCategory/save",save_model);
        if (res.IsSuccess)
        {
            toast.Add(lang["save successfull"],Severity.Success);
            await LoadData();
        }
        is_change_group = false;

    }

    void Cancel_click()
    {
        is_change_group = false;
    }

    async Task Deleted(ProductGroupModel p)
    {
        if (!is_saving)
        {
            is_saving = true;

            // validate category available
            if (p.product_categories.Where(r=>r.products.Count() > 0).Any())
            {
                toast.Add(lang["You can delete this group. It is already in used."], MudBlazor.Severity.Warning);
                is_saving = false;
                return;
            }

            if (await js.Confirm(lang["Delete Record"], lang["Are you sure you want to delete this record?"]))
            {
                var res = await http.ApiPost($"ProductGroup/delete", p);
                if (res.IsSuccess)
                {
                    toast.Add(lang["Delete record successfully"], MudBlazor.Severity.Success);
                    await LoadData();
                }
                else
                {
                    is_saving = false;
                    toast.Add(lang[res.Content.ToString()], MudBlazor.Severity.Warning);
                }
            }
            is_saving = false;
        }
    }
}
