@page "/productcategory"
@inject IJSRuntime js
@inherits PageCore;
<Loading is_loading="@is_loading" />
@if (!is_loading)
{
    <Title Value="@lang["Product Category & Group"]"></Title>
    <PageContainer roles="@gv.GetRole("product_category_group_management")">
        <PageHeader>
            <HeaderLeft>
                <PageTitle ShowFilter="false">
                    <HeaderTemplate>
                        @lang["Product Category & Group"]
                    </HeaderTemplate>
                </PageTitle>
            </HeaderLeft>
            <HeaderRight>
                <LinkButton roles="@gv.GetRole("product_group_category_add")" url="productcategory/new" icon="add" background="uk-button-primary" Class_Name="button-create button-large">@lang["New Category & Group"]</LinkButton>
            </HeaderRight>
        </PageHeader>
            <PageBody>
                <UIGridCenter>
                    <Tab>
                        <div>
                            <ViewEmptyTemplate is_view="@(models.Any())" is_box_empty="true">
                                @foreach (var d in models.ToList())
                                {
                                    <div class=" container-layout">
                                        <div class="title-header">
                                            <div class="uk-panel">
                                                <div class="uk-float-left">
                                                    <span>
                                                        @d.product_group_en
                                                    </span>
                                                </div>
                                                <Column ClassName="uk-float-right">
                                                    <div> 
                                                            <LabelActive is_visible="@d.status" is_loading="@d.is_change_status" ClassName="cp" roles="@gv.GetRole("product_group_category_edit")"/>
                                                            <LabelInActive is_visible="@(!d.status)" is_loading="@d.is_change_status" ClassName="cp" roles="@gv.GetRole("product_group_category_edit")"/>

                                                            <span>
                                                                <Icon icon="edit" url="@($"productcategory/edit/{d.id}")" roles="@gv.GetRole("product_group_category_edit")"/> 
                                                            </span>
                                                            
                                                            <span>
                                                                <Icon icon="delete" OnClick="@(()=>Deleted(d))" roles="@gv.GetRole("product_group_category_delete")" is_visible="@(!d.is_built_in)"/> 
                                                            </span> 

                                                    </div>
                                                </Column>
                                            </div>
                                        </div>

                                        <hr />
                                        <div>
                                            <Tab>
                                                <div>
                                                    <table class="uk-table cus_hearder_table view_table set-verticle-middle uk-table-small uk-table-striped uk-table-hover">
                                                        <tr>
                                                            <Th>@lang["Product Category Name En"]</Th>
                                                            <Th>@lang["Product Category Name Kh"]</Th>
                                                            <ThCenter>@lang["Status"]</ThCenter> 
                                                        </tr>
                                                        <ViewEmptyTemplate is_view="@d.product_categories.Any()" colspan="6">
                                                            @foreach (var s in d.product_categories)
                                                            {
                                                                <tr>
                                                                    <td>@s.product_category_en</td>
                                                                    <td>@s.product_category_kh </td>
                                                                    <TdCenter>
                                                                            <LabelActive is_visible="@s.status" is_loading="@s.is_change_status" />
                                                                            <LabelInActive is_visible="@(!s.status)" is_loading="@s.is_change_status" />
                                                                    </TdCenter>
                                                                </tr>
                                                            }
                                                        </ViewEmptyTemplate>
                                                    </table>
                                                </div>
                                            </Tab>
                                        </div> 
                                    </div>
                                }
                                </ViewEmptyTemplate>
                            </div>
                        </Tab>
                </UIGridCenter>
            </PageBody>
    </PageContainer>
}

@code{
    List<ProductGroupModel> models = new List<ProductGroupModel>();
    List<ProductCategoryModel> product_category = new List<ProductCategoryModel>();
    string ControllerApi = "ProductGroup";


    protected override async Task OnInitializedAsync()
    {
        is_loading = true;
        await LoadData();
        is_loading = false;
    }



    async Task LoadData(string api_url = "")
    {

        is_loading_data = true;

        if (string.IsNullOrEmpty(api_url))
        {

            api_url = $"{ControllerApi}?$expand=product_categories($filter=is_deleted eq false;$expand=products($select=id;$top=1))&$filter=is_deleted eq false and id ne 1";
        }

        var resp = await http.ApiGetOData(api_url);
        if (resp.IsSuccess)
        {

            models = JsonSerializer.Deserialize<List<ProductGroupModel>>(resp.Content.ToString());

        }
        is_loading_data = false;

    }

    async Task Deleted(ProductGroupModel p)
    {
        if (!is_saving)
        {
            is_saving = true;

            // validate category available
            if (p.product_categories.Where(r=>r.products.Count() > 0).Any())
            {
                toast.Add(lang["This group not availiable"], MatBlazor.MatToastType.Warning);
                is_saving = false;
                return;
            }

            if (await js.Confirm(lang["Delete Product Group"], "Are you sure you want to delete this record?"))
            {
                var res = await http.ApiPost($"ProductGroup/delete", p);
                if (res.IsSuccess)
                {
                    toast.Add("Deleted successfully", MatToastType.Success);
                    await LoadData();
                }
                else
                {
                    is_saving = false;
                    toast.Add(res.Content.ToString(), MatToastType.Warning);
                }
            }
            is_saving = false;
        }
    }
}
