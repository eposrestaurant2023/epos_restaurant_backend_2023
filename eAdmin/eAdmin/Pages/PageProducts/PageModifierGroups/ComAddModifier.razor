@inject IStringLocalizer<Resource> lang
<UIContainerBox Title="@lang["Modifier Section"]">
    @if (modifer_group.modifier_group_items.Where(r => r.is_section == true && r.is_deleted == false).Any())
    {
        foreach (var s in modifer_group.modifier_group_items.Where(r => r.is_section == true && r.is_deleted == false).OrderBy(r => r.sort_order))
        {
            <UIBox Title="@s.section_name" is_show_delete_button="true" OnDeleteClick="@(()=>DeleteModifierSection(s))">
                <TextInput @bind-text="@s.section_name" label="@lang["Section Name"]" />
                <NumberInputInt @bind-text="@s.sort_order" label="@lang["Sort Order"]" />
                <ComInputCheckBox @bind-value="@s.is_required" label="@lang["Is Required"]" />
                <ComInputCheckBox @bind-value="@s.is_multiple_select" label="@lang["Allow Multiple Select"]" />
                <hr />
                <ModifierTypeahead modifier="@modifier" modifierChanged="@((val)=>OnSelectModifier(s, val))" />
                <hr />
                <table class="uk-table  view_table set-verticle-middle uk-table-small uk-table-striped uk-table-hover">
                    <tr>
                        <Th>@lang["Modifier Name"]</Th>
                        <ThRight>@lang["Price"]</ThRight>
                        <ThRight>@lang["Sort Order"]</ThRight>
                        <ThCenter></ThCenter>
                    </tr>
                    <ViewEmptyTemplate is_view="@s.children.Where(r => r.is_deleted == false).Any()" colspan="4">
                        @foreach (var m in s.children.Where(r => r.is_deleted == false).OrderBy(r => r.sort_order))
                        {
                            <tr>
                                <td>
                                    @m.modifier?.modifier_name
                                </td>
                                <TdRight>
                                    <NumberInput @bind-text="@m.price" label="" placeholder="@lang["Price"]" />
                                </TdRight>
                                <TdRight>
                                    <NumberInputInt @bind-text="@m.sort_order" label="" placeholder="@lang["Sort Order"]" />
                                </TdRight>
                                <TdCenter>
                                    <Icon icon="delete" OnClick="@(()=>DeleteModifier(m))" />
                                </TdCenter>
                            </tr>
                        }
                    </ViewEmptyTemplate>
                </table> 
            </UIBox>
            <div class="uk-divider uk-margin-top uk-margin-bottom"></div>
        }
        <hr />
        <div class="uk-text-right">
            <Button OnClick="@AddSection">@lang["Add Section"]</Button>
        </div>

    }
    else
    {
        <ComEmptyTemplate empty="@lang["Please click button below to add section."]" icon="create_new_folder">
            <div class="uk-text-center">
                <Button OnClick="@AddSection">@lang["Add Section"]</Button>
            </div>
        </ComEmptyTemplate>
    }
</UIContainerBox>

    @code{
        [Parameter] public ModifierGroupModel modifer_group { get; set; }

        private ModifierModel _modifier;

        public ModifierModel modifier
        {
            get { return _modifier; }
            set
            {

                _modifier = value;
            }
        }

        void OnSelectModifier(ModifierGroupItemModel parent, ModifierModel child)
        {

            if (!parent.children.Where(r => r.is_deleted == false && r.modifier.modifier_name.Trim().ToLower().Contains(child.modifier_name.ToLower().Trim())).Any())
            {
                parent.children.Add(new ModifierGroupItemModel() { modifier = child, modifier_id = child.id });
            }
            modifier = null;
        }



        void DeleteModifier(ModifierGroupItemModel m)
        {
            if (m.modifier_group_id == 0)
            {
                modifer_group.modifier_group_items.Remove(m);
            }
            else
            {
                m.is_deleted = true;
            }
        }

        void AddSection()
        {
            modifer_group.modifier_group_items.Add(new ModifierGroupItemModel()
            {
                section_name = "Section Name",
                is_section = true
            });
        }

        void DeleteModifierSection(ModifierGroupItemModel m)
        {
            if (m.modifier_group_id == 0)
            {
                modifer_group.modifier_group_items.Remove(m);
            }
            else
            {
                m.is_deleted = true;
            }
        }

    }
