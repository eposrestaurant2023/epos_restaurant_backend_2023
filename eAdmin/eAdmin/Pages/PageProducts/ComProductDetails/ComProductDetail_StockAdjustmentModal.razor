@inject IHttpService http
@inject IStringLocalizer<Resource> lang

<EditFormContext model="@product.stock_location_products" Save_Click="@Save_Click" Cancel_Click="@(()=>OnCancelClick())" modal_width="800px" is_opened="@is_opened" title="@lang["Stock Adjustment"]" is_submitting="is_saving">
    <Com is_visible="@product.stock_location_products.Any()">
        <table class="uk-table view_table set-verticle-middle uk-table-small uk-table-striped uk-table-hover">
            <thead>
                <ThAuto>@lang["Business Branch"]</ThAuto>
                <ThAuto>@lang["Stock Location"]</ThAuto>
                <ThCenter>@lang["Quantity"]</ThCenter>
            </thead>
            <tbody>
                @foreach (var p in product.stock_location_products)
                {
                <tr>
                    <td>@p.stock_location?.business_branch?.business_branch_name_en</td>
                    <td>
                        <div>
                            @p.stock_location.stock_location_name
                        </div>
                    </td>
                    <TdCenter>
                        <NumberInput label="" class_name="uk-input uk-form-small uk-text-center" @bind-text="@p.quantity" text_format="@gv.quantity_format" width="100px" />
                    </TdCenter>
                </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="2">@lang["Total Quantity"]</td>
                    <TdCenter>@product.stock_location_products.Sum(r => r.quantity).ToString(gv.quantity_format)</TdCenter> 
                </tr>
            </tfoot>
        </Table>
    </Com>
</EditFormContext>
@code {
    [CascadingParameter] public GlobalVariableModel gv { get; set; }
    [Parameter] public bool is_opened { get; set; }
    [Parameter] public EventCallback<bool> is_openedChanged { get; set; }
    [Parameter] public ProductModel product {get; set;}
    [Parameter] public EventCallback<MouseEventArgs> Cancel_Click { get; set; }


    public ProductModel save_product = new ProductModel();
    bool is_loading, is_saving, ShowModal;
    int TotalRecord = 0;

    async Task OnCancelClick()
    {
        await is_openedChanged.InvokeAsync(false);
        await Cancel_Click.InvokeAsync(new MouseEventArgs());
    }

    async Task Save_Click()
    {
        is_saving = true;
        //await ...;
        is_saving = false;
    }

}
