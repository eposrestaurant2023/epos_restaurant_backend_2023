
 @inject IHttpService http; 
    <UIContainerBox Title="@product_portion.portion_name" 
        is_show_add_button="@can_add"
        is_show_edit_button="@can_edit"
        OnAddClick="@(()=> show_modal = true)"
        OnEditClick="@(()=> show_modal = true)">

        <table class="uk-table  view_table set-verticle-middle uk-table-small uk-table-striped uk-table-hover">
            <tr>
                <ThAuto>Ingredient Name</ThAuto>
                <ThCenter>Quantity</ThCenter>
                <ThCenter>Unit</ThCenter>
                <ThRight>Cost</ThRight>
                <ThRight>Total Cost</ThRight>
            </tr>

            @if (product_portion.product_ingredients.Where(r => r.is_deleted == false).Any())
            {
                foreach (var pi in product_portion.product_ingredients.Where(r => r.is_deleted == false).ToList())
                {
                    <tr>
                        <td>
                            @pi.ingredient?.product_display_name
                        </td>
                        <TdCenter>
                            @pi.quantity.ToString(gv.quantity_format)
                        </TdCenter>
                        <TdCenter>@pi.unit?.unit_name</TdCenter>
                        <TdRight>@pi.cost.ToString(gv.currency_format)</TdRight>
                        <TdRight>@pi.total_cost.ToString(gv.currency_format)</TdRight>
                    </tr>
                }
                <tfoot>
                    <tr>
                        <td>
                            Total Cost
                        </td>
                        <TdCenter>
                            @product_portion.product_ingredients.Where(r => r.is_deleted == false).Sum(r => r.quantity).ToString(gv.quantity_format)

                        </TdCenter>
                        <TdCenter>
                        </TdCenter>
                        <TdRight>
                        </TdRight>
                        <TdRight>
                            @product_portion.product_ingredients.Where(r => r.is_deleted == false).Sum(r => r.total_cost).ToString(gv.currency_format)

                        </TdRight>
                       
                    </tr>
                </tfoot>
            }
            else
            {
                <tr>
                    <td colspan="5">
                        <ComEmptyTemplate padding_top_bottom="25px" />
                    </td>
                </tr>
            }
        </table>
    </UIContainerBox>
  
   
<Com is_visible="@show_modal">
    <ComProductDetail_AddIngredientProduct  @bind-is_open="@show_modal" Save_Click="OnSave"   product_portion="@(JsonSerializer.Deserialize<ProductPortionModel>(JsonSerializer.Serialize(product_portion)))" />
</Com>
@code {
    [CascadingParameter] public GlobalVariableModel gv { get; set; }

    [Parameter] public ProductPortionModel product_portion { get; set; }

    bool is_loading, show_modal;

    public bool can_add
    {
        get
        {
            return !product_portion.product_ingredients.Where(r => r.is_deleted == false).ToList().Any();
        }
    }

    public bool can_edit
    {
        get
        {
            return product_portion.product_ingredients.Where(r => r.is_deleted == false).ToList().Any();
        }
    }





    public async Task   OnSave(ProductPortionModel _portion)
    {
        show_modal = false;
        await LoadData();

    }

    public async Task LoadData()
    {
        is_loading = true;


        var resp = await http.ApiGet($"ProductPortion({product_portion.id})?$expand=product_ingredients($expand=ingredient($select=id,product_code,product_name_en,product_name_kh),unit($select=id,unit_name);$filter=is_deleted eq false)");
        if (resp.IsSuccess)
        {
            product_portion = JsonSerializer.Deserialize<ProductPortionModel>(resp.Content.ToString());
        }

        is_loading = false;
    }



}
