@inject IHttpService http; 
@inject IStringLocalizer<Resource> lang

    <UIContainerBox Title="@product_portion.portion_name" 
        is_show_add_button="@can_add"
        is_show_edit_button="@can_edit"
        OnAddClick="@(()=> show_modal = true)"
        OnEditClick="@(()=> show_modal = true)">
        <table class="uk-table view_table set-verticle-middle uk-table-small uk-table-striped uk-table-hover">
            <tr>
                <ThAuto>@lang["Name"]</ThAuto>
                <ThCenter>@lang["Quantity"]</ThCenter>
                <ThCenter>@lang["Unit"]</ThCenter>
                <ThRight>@lang["Cost"]</ThRight>
                <ThRight>@lang["Total Cost"]</ThRight>
            </tr>
            @if (product_portion.product_ingredients != null)
            {
                @if (product_portion.product_ingredients.Where(r => r.is_deleted == false).Any())
                {
                    foreach (var pi in product_portion.product_ingredients.Where(r => r.is_deleted == false).ToList())
                    {

                      
                            <tr>
                                <td>
                                    @if (pi.ingredient.is_menu_product)
                                    {
                                        <a href="@($"product/{pi?.ingredient_id}")">
                                            @pi?.ingredient?.product_display_name
                                        </a>
                                    }
                                    else
                                    {
                                        <a href="@($"ingredient/{pi?.ingredient_id}")">
                                            @pi.ingredient?.product_display_name
                                        </a>
                                    }

                                    <br />
                                    <LabelInventory is_visible="@(pi.ingredient?.is_inventory_product==true)" />
                                    <LabelIngredient is_visible="@(pi.ingredient?.is_ingredient_product==true)" />
                                    <LabelMenuProduct is_visible="@(pi.ingredient?.is_menu_product==true)" />
                                    @if (pi.product_portion != null && pi.product_portion.portion_name != "Normal")
                                    {
                                        <Label Text="@pi.product_portion?.portion_name" Background="#4873aa" />
                                    }

                                </td>
                                <TdCenter>
                                    @pi.quantity.ToString(gv.quantity_format)
                                </TdCenter>
                                <TdCenter>@pi.unit?.unit_name</TdCenter>
                                <TdRight>@pi.cost.ToString(gv.currency_format)</TdRight>
                                <TdRight>@pi.total_cost.ToString(gv.currency_format)</TdRight>
                            </tr>
                        

                    }
                    <tfoot>
                        <tr>
                            <td>
                                @lang["Total Cost"]
                            </td>
                            <TdCenter>
                                @product_portion.product_ingredients.Where(r => r.is_deleted == false).Sum(r => r.quantity).ToString(gv.quantity_format)
                            </TdCenter>
                            <TdCenter>
                            </TdCenter>
                            <TdRight>
                            </TdRight>
                            <TdRight>
                                @product_portion.product_ingredients.Where(r => r.is_deleted == false).Sum(r => r.total_cost).ToString(gv.currency_format)
                            </TdRight>

                        </tr>
                    </tfoot>
                }
                else
                {
                    <tr>
                        <td colspan="5">
                            <ComEmptyTemplate padding_top_bottom="25px" />
                        </td>
                    </tr>
                }

            }

        </table>
    </UIContainerBox>
  
   
<Com is_visible="@show_modal"> 
    <ComProductDetail_AddIngredientProduct is_search_all_product="@is_search_all_product" is_open="@show_modal" is_openChanged="@OnOpenModal" Save_Click="OnSave"   product_portion_id="@product_portion.id" />
</Com>
@code {
    [CascadingParameter] public GlobalVariableModel gv { get; set; }

    [Parameter] public ProductPortionModel product_portion { get; set; }
    [Parameter] public bool is_product_deleted { get; set; }
    [Parameter] public bool is_search_all_product { get; set; } = false;

    bool  show_modal;

    public bool can_add
    {
        get
        {
            if (is_product_deleted)
                return false;

            return !product_portion.product_ingredients.Where(r => r.is_deleted == false).ToList().Any();
        }
    }

    public bool can_edit
    {
        get
        {
            if (is_product_deleted)
                return false;

            return product_portion.product_ingredients.Where(r => r.is_deleted == false).ToList().Any();
        }
    }

    void OnOpenModal(bool is_open)
    {
        show_modal = is_open;
    }



    public async Task   OnSave(ProductPortionModel _portion)
    {
        show_modal = false;
        await LoadData();

    }

    public async Task LoadData()
    {
        


        var resp = await http.ApiGet($"ProductPortion({product_portion.id})?$expand=product_ingredients($expand=product_portion($select=portion_name),ingredient($select=id,is_inventory_product,product_code,product_name_en,product_name_kh,is_ingredient_product,is_menu_product),unit($select=id,unit_name,unit_category_id);$filter=is_deleted eq false)");
        if (resp.IsSuccess)
        {
            product_portion = JsonSerializer.Deserialize<ProductPortionModel>(resp.Content.ToString());
        }

      
    }



}
