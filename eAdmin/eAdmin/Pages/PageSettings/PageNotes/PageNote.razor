@page "/setting/note"
@inject IHttpService http;
@inject ISnackbar toast;
@inject IStringLocalizer<Resource> lang
<Loading is_loading="@(is_loading || is_saving)" />
@if (!is_loading)
{
    <Title Value="@lang["Cashier Notes"]"></Title>
    <PageContainer roles="@gv.GetRole("note_management")">
        <PageHeader>
            <HeaderLeft>
                <PageTitle ShowFilter="false">
                    <HeaderTemplate>
                        @lang["Cashier Notes"]
                    </HeaderTemplate>
                </PageTitle>
            </HeaderLeft>
            <HeaderRight ShowBackButton="true">
                <RefreshButton OnClick="@OnInitializedAsync" />
            </HeaderRight>
        </PageHeader>
        <PageBody>
            <UIGridCenter>

                @if (branches.Any())
                {
                    @foreach (var b in branches)
                    {
                        <UIContainerBox Title="@b.business_branch_name_en">
                            @foreach (var c in gv.category_notes.Where(r => r.status))
                            {
                                <ComAccordion>
                                    <Header>
                                        @c.category_note_name_en (@b.cashier_notes.Where(r => r.category_note_id == c.id && r.is_deleted == false).Count())
                                    </Header>
                                    <Content>
                                        <ComNoteCategory notes="@b.cashier_notes.Where(r=>r.category_note_id==c.id).ToList()" />
                                        <hr />
                                        <div class="uk-text-right">
                                            <Button OnClick="@(()=>AddNote(b,c))">@lang["Add New"]</Button>
                                        </div>
                                    </Content>
                                </ComAccordion>
                            }



                        </UIContainerBox>
                    }
                }
                else
                {
                    <ComAlert type="warning">@lang["There is no business branch. Please enter business branch first."]</ComAlert>
                }

            </UIGridCenter>
        </PageBody>
        <PageFooter>
            <FooterCenter>
                <SavingButton is_saving="@is_saving" />
                <Button OnClick="@Save_Click" is_visible="@(!is_saving)">@lang["Save"]</Button>
            </FooterCenter>
        </PageFooter>
    </PageContainer>

}

@code{


    [CascadingParameter] public GlobalVariableModel gv { get; set; }


    List<BusinessBranchModel> branches = new List<BusinessBranchModel>();
    bool is_loading, is_saving;

    protected override async Task OnInitializedAsync()
    {
        is_loading = true;
        await LoadData();
        is_loading = false;
    }



    async Task LoadData()
    {
        var resp = await http.ApiGetOData("BusinessBranch?$expand=cashier_notes($filter=is_deleted eq false)&$filter=is_deleted eq false");
        if (resp.IsSuccess)
        {
            branches = JsonSerializer.Deserialize<List<BusinessBranchModel>>(resp.Content.ToString());
        }
        else
        {

            toast.Add(lang["Load data fail"], MudBlazor.Severity.Warning);
        }
    }

    void AddNote(BusinessBranchModel b, CategoryNoteModel c)
    {
        b.cashier_notes.Add(new NoteModel() { category_note_id = c.id, business_branch_id = b.id });
    }

    async Task Save_Click()
    {


        branches.SelectMany(r => r.cashier_notes).ToList().RemoveAll(r => r.note.Trim() == "");
        branches.SelectMany(r => r.cashier_notes).ToList().Where(r => r.id != Guid.Empty && r.note.Trim() == "").ToList().ForEach(r => r.is_deleted = true);

        is_saving = true;

        var resp = await http.ApiPost("BusinessBranch/save/multiple", branches);
        if (resp.IsSuccess)
        {
            toast.Add(lang["Save successfully"], MudBlazor.Severity.Success);
            await LoadData();
        }
        else
        {
            toast.Add(lang["Save record fail"], MudBlazor.Severity.Warning);
        }
        is_saving = false;
    }

}
