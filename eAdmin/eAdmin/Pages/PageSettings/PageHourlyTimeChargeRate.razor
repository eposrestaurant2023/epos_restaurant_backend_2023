@page "/setting/hourlytimechargrate"
@inherits PageCore
<Loading is_loading="@(is_loading || is_saving)" />
@if (!is_loading)
{

    <Title Value="@lang["Hourly Time Charge Rate"]"></Title>
    <PageContainer roles="@gv.GetRole("hourly_time_charge_rate_management")">
        <PageHeader>
            <HeaderLeft>
                <PageTitle ShowFilter="false">
                    <HeaderTemplate>
                        @lang["Hourly Time Charge Rate"]
                    </HeaderTemplate>
                </PageTitle>
            </HeaderLeft>
            <HeaderRight ShowBackButton="true">
                <RefreshButton OnClick="@OnInitializedAsync" />
            </HeaderRight>
        </PageHeader>

        <PageBody>
            <Tab>
                <TabHeader>
                        @foreach (var branch_role in gv.business_branch_by_role)
                        {
                            @foreach (var b in branch_item_charge_rates.Where(r => r.business_branch.id == branch_role.id))
                            {
                                <TabHeaderItem>
                                    @b.business_branch.business_branch_name_en
                                </TabHeaderItem>
                            }
                        }
                </TabHeader>
                <TabBody>
                        @foreach (var branch_role in gv.business_branch_by_role)
                        {
                            <TabItem>
                                @foreach (var b in branch_item_charge_rates.Where(r => r.business_branch.id == branch_role.id))
                            {
                                <UIGridCenter>
                                    @foreach(var p in product_portions)
                                    {
                                        <MudExpansionPanels MultiExpansion="true">
                                            <MudExpansionPanel Class="mb-2" Text="@p.portion_name">
                                                <div class="uk-overflow-auto table-scroll">
                                                            <table class="uk-table  view_table set-verticle-middle uk-table-small uk-table-striped uk-table-hover">
                                                                <tr>
                                                                    <th>@lang["hour"]</th>
                                                                    <ThCenter>@lang["portion"]</ThCenter>
                                                                    <ThCenter>@lang["break point"]</ThCenter>
                                                                </tr>
                                                                @foreach (var charge_rate in b.hourly_time_charge_rates.Where(r=>r.portion_id == p.id))
                                                                {
                                                                    <tr>
                                                                        <td>
                                                                            <NumberInputInt @bind-text="@charge_rate.hour" is_read_only placeholder="@lang["hour"]" />
                                                                        </td>
                                                                        <TdCenter>
                                                                            <SelectProductPortion label="" product_id="product_item_charge" @bind-selected_value="@charge_rate.portion_id"/>
                                                                        </TdCenter>
                                                                        <TdCenter>
                                                                            <ComInputCheckBox  @bind-value="@charge_rate.is_break_point" />
                                                                        </TdCenter>
                                                                    </tr>
                                                                }
                                                            </table>
                                                        </div>
                                            </MudExpansionPanel>
                                        </MudExpansionPanels>
                                   
                                    }
                                            

                                </UIGridCenter>
                            }
                            </TabItem>
                            
                        }
                </TabBody>
            </Tab>

        </PageBody>
        <PageFooter>
            <FooterCenter>
                <ComSavingFormButton is_loading="@is_saving" is_show_cancel_back="false" is_show_save_action="true" OnSave="@Save_Click" />
            </FooterCenter>
        </PageFooter>
    </PageContainer>
}

@code {
    List<BusinessBranchSettingModel> branch_settings = new List<BusinessBranchSettingModel>();
    List<HourlyTimeChargeRateModel> hourly_time_charge_rates = new List<HourlyTimeChargeRateModel>();
    List<BranchItemChargeRateModel> branch_item_charge_rates = new List<BranchItemChargeRateModel>();
    public List<ProductPortionModel> product_portions { get; set; }

    private int _product_item_charge;

    public int product_item_charge
    {
        get { return Convert.ToInt32(gv.product_id_item_charge); }
        set { _product_item_charge = value; }
    }

    protected override async Task OnInitializedAsync()
    {
        is_loading = true;
        await LoadData();

        is_loading = false;
    }



    async Task LoadData()
    {

        var resp = await http.ApiGetOData("businessbranchsetting?$expand=setting,business_branch&$filter=setting_id eq 113");
        if (resp.IsSuccess)
        {
            branch_settings = new List<BusinessBranchSettingModel>();
            branch_settings = JsonSerializer.Deserialize<List<BusinessBranchSettingModel>>(resp.Content.ToString());
            var business_branch = branch_settings.Select(r => new BusinessBranchModel()
                {
                    business_branch_name_en = r.business_branch.business_branch_name_en,
                    business_branch_name_kh = r.business_branch.business_branch_name_kh,
                    id = r.business_branch_id
                }).ToList();

            branch_item_charge_rates = new List<BranchItemChargeRateModel>();

            var res = await http.ApiGetOData("productportion?$filter=product_id eq 249&$select=id,portion_name");
            if(res.IsSuccess){
                product_portions = JsonSerializer.Deserialize<List<ProductPortionModel>>(res.Content.ToString());
            }

        }
        else
        {

            toast.Add(lang["Loading time charge rate failed."], MudBlazor.Severity.Warning);
        }


    }

    async Task Save_Click()
    {
        is_saving = true;
        var save_model = new List<BusinessBranchSettingModel>();

        foreach(var s in branch_item_charge_rates)
        {
            save_model.Add(new BusinessBranchSettingModel()
                {
                    setting_id = branch_settings.FirstOrDefault().setting_id,
                    business_branch_id = s.business_branch.id,
                    setting_value = JsonSerializer.Serialize(s.hourly_time_charge_rates)
        });
        }
        var resp = await http.ApiPost("BusinessBranchSetting/save/multiple",save_model);
        if (resp.IsSuccess)
        {

            toast.Add(lang["Save successfully"], MudBlazor.Severity.Success);

            await LoadData();
        }
        else
        {

            toast.Add(lang["Save item charge rate fail"], MudBlazor.Severity.Warning);
        }
        is_saving = false;
    }

    internal class BranchItemChargeRateModel
    {
        public BusinessBranchModel business_branch { get; set; }
        public List<HourlyTimeChargeRateModel> hourly_time_charge_rates { get; set; }
    }
}
