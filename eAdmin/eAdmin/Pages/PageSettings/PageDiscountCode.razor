@page "/discountcode"

@inherits PageCore;
<Loading is_loading="@(is_loading || is_saving)" />
@if (!is_loading)
{
    <Title Value="@lang["Discount Code"]"></Title>
    <PageContainer roles="@gv.GetRole("discount_code")">
        <PageHeader>
            <HeaderLeft>
                <PageTitle ShowFilter="false">
                    <HeaderTemplate>
                       @lang["Discount Code"]
                    </HeaderTemplate>
                </PageTitle>
            </HeaderLeft>
        </PageHeader>

        <PageBody>
          
            <UIGridCenter>

                @if (is_loading)
                {
                    <Spinner />
                }
                else
                {
                    @foreach (var b in branches)
                    {

                        <MudExpansionPanels MultiExpansion="true">
                            <MudExpansionPanel Class="mb-2" Text="@b.business_branch_name_en">
                                <div class="uk-overflow-auto table-scroll">
                                    <table class="uk-table  view_table set-verticle-middle uk-table-small uk-table-striped uk-table-hover">

                                        <tr>
                                            <ThAuto>@lang["Discount Type"]</ThAuto>
                                            <ThAuto>@lang["Discount Code"]</ThAuto>
                                            <ThAuto>@lang["Discount Value"]</ThAuto>
                                            <ThCenter>@lang["Status"]</ThCenter>
                                            <Th></Th>
                                        </tr>
                                        @foreach (var d in b.discount_codes.Where(r => r.is_deleted == false))
                                        {
                                            <tr>
                                                <td>
                                                    <SelectDiscountType @bind-selected_value="@d.discount_type" />
                                                </td>
                                                <td>
                                                    @if (d.discount_type != "Amount")
                                                    {
                                                        <TextInput @bind-text="@d.discount_code" placeholder="Discount Code" />
                                                    }

                                                </td>
                                                <td><NumberInput @bind-text="@d.discount_value" label="" placeholder="Discount Value" /></td>
                                                <TdCenter>
                                                    <LabelActive OnClick="@(() => Activebutton(d))" is_visible="@d.status" is_loading="@d.is_change_status" />
                                                    <LabelInActive OnClick="@(() => Activebutton(d))" is_visible="@(!d.status)" is_loading="@d.is_change_status" />
                                                </TdCenter>
                                                <td> <Icon OnClick="@(() => OnDelete(b,d))" icon="delete" /></td>
                                            </tr>
                                        }
                                    </table>
                                </div>
                                <hr />
                                <div class="uk-text-right">
                                    <Button OnClick="@(()=>AddDiscount(b))">@lang["Add Discount Code"]</Button>
                                </div>
                            </MudExpansionPanel>
                        </MudExpansionPanels>
                                }
                                }

                    </UIGridCenter>
        </PageBody>

        <PageFooter>
            <FooterCenter>
                <ComSavingFormButton is_loading="@is_saving" is_show_save_action="true" OnSave="@Save_Click" is_show_cancel="false"/>
            </FooterCenter>
        </PageFooter>

    </PageContainer>

 


}

@code{


    List<BusinessBranchModel> branches = new List<BusinessBranchModel>();

    protected override async Task OnInitializedAsync()
    {
        is_loading = true;
        await LoadData();

        is_loading = false;
    }

    void AddDiscount(BusinessBranchModel b){
        b.discount_codes.Add(new DiscountCodeModel() { business_branch_id = b.id });

    }


    async Task LoadData()
    {

        is_loading_data = true;

        string api_url = $"BusinessBranch?$expand=discount_codes";


        var resp = await http.ApiGetOData(api_url);
        if (resp.IsSuccess)
        {

            branches = JsonSerializer.Deserialize<List<BusinessBranchModel>>(resp.Content.ToString());

        }
        is_loading_data = false;

    }



    async Task Save_Click()
    {


        is_saving = true;

        foreach (var b in branches)
        {
            foreach (var discount in b.discount_codes)
            {
                if (discount.discount_type == "Amount")
                {
                    discount.discount_code = discount.discount_value.ToString();
                }
                else
                {
                    if (string.IsNullOrEmpty(discount.discount_code))
                    {
                        toast.Add(lang["Discount code cannot empty"], MudBlazor.Severity.Warning);
                        is_saving = false;
                        return;
                    }
                }
            }
        }
        var resp = await http.ApiPost("BusinessBranch/save/multiple", branches);
        if (resp.IsSuccess)
        {

            toast.Add(lang["Save successfully"], MudBlazor.Severity.Success);

            await LoadData();
        }
        else
        {

            toast.Add(lang["Delete record successfully."], MudBlazor.Severity.Warning);
        }
        is_saving = false;
    }




    void  OnDelete(BusinessBranchModel b, DiscountCodeModel v)
    {

        if (v.id == 0)
        {
            b.discount_codes.Remove(v);
        }
        else
        {
            v.is_deleted = true;
        }

    }

    void SelectedValueChange(string value)
    {

    }

    void Activebutton(DiscountCodeModel b)
    {
        b.status = !b.status;

    }
}
