@page "/discountcode"
@inject IJSRuntime js
@inherits PageCore;
<Loading is_loading="@is_loading" />
@if (!is_loading)
{
    <Title Value="Discount Code"></Title>
    <PageContainer roles="@gv.GetRole("discount_code")">
        <PageHeader>
            <HeaderLeft>
                <PageTitle ShowFilter="false">
                    <HeaderTemplate>
                        Discount Code
                    </HeaderTemplate>
                </PageTitle>
            </HeaderLeft>
        </PageHeader>

        <PageBody>
          
            <UIGridCenter>

                @if (is_loading)
                {
                    <Spinner />
                }
                else
                {
                    @foreach (var b in branches)
                    {
                        <ComAccordion>
                            <Header>
                                @b.business_branch_name_en
                            </Header>
                            <Content>
                                <table class="uk-table  view_table set-verticle-middle uk-table-small uk-table-striped uk-table-hover">

                                    <tr>
                                        <Th>Discound Code Label</Th>
                                        <Th>Discound Code Value</Th>
                                        <ThCenter>Status</ThCenter>
                                        <Th></Th>
                                    </tr>
                                    @foreach (var d in b.discount_codes.Where(r => r.is_deleted == false))
                                    {
                                        <tr>
                                            <td><TextInput @bind-text="@d.discount_label" label="" placeholder="Discount Label" /></td>
                                            <td><NumberInput @bind-text="@d.discount_value" label="" placeholder="Discount Value" /></td>
                                            <TdCenter>
                                                <LabelActive OnClick="@(() => Activebutton(d))" is_visible="@d.status" is_loading="@d.is_change_status" />
                                                <LabelInActive OnClick="@(() => Activebutton(d))" is_visible="@(!d.status)" is_loading="@d.is_change_status" />
                                            </TdCenter>
                                            <td> <Icon OnClick="@(() => OnDelete(b,d))" icon="delete" /></td>
                                        </tr>
                                    }
                                </table>
                                <hr />
                                <Button OnClick="@(()=>AddDiscount(b))">Add Discount Code</Button>
                            </Content>
                        </ComAccordion>
                    }
                }


            </UIGridCenter>
        </PageBody>

        <PageFooter>
            <FooterCenter>
                <ComButtonLoading is_loading="@is_saving">
                    <SavingButton is_saving="@is_saving" />
                    <Button OnClick="@Save_Click" is_visible="@(!is_saving)">Save</Button>
                </ComButtonLoading>
            </FooterCenter>
        </PageFooter>

    </PageContainer>

 


}

@code{


    List<BusinessBranchModel> branches = new List<BusinessBranchModel>();

    protected override async Task OnInitializedAsync()
    {
        is_loading = true;
        await LoadData();

        is_loading = false;
    }

    void AddDiscount(BusinessBranchModel b){
        b.discount_codes.Add(new DiscountCodeModel() { business_branch_id = b.id });

    }


    async Task LoadData()
    {

        is_loading_data = true;

        string api_url = $"BusinessBranch?$expand=discount_codes";


        var resp = await http.ApiGetOData(api_url);
        if (resp.IsSuccess)
        {

            branches = JsonSerializer.Deserialize<List<BusinessBranchModel>>(resp.Content.ToString());

        }
        is_loading_data = false;

    }



    async Task Save_Click()
    {

        if (branches.SelectMany(r => r.discount_codes).Where(r => r.is_deleted == false && (r.discount_label.Trim() == "" || r.discount_value==0 )).Any())
        {

            toast.Add("Please enter printer name", MatToastType.Warning);
            return;
        }

        is_saving = true;

        string xx = JsonSerializer.Serialize(branches);

        var resp = await http.ApiPost("BusinessBranch/save/multiple", branches);
        if (resp.IsSuccess)
        {

            toast.Add("Save Discount Codes successfully", MatToastType.Success);

            await LoadData();
        }
        else
        {

            toast.Add("Save Discount Codes Fail", MatToastType.Warning);
        }
        is_saving = false;
    }




    void  OnDelete(BusinessBranchModel b, DiscountCodeModel v)
    {

        if (v.id == 0)
        {
            b.discount_codes.Remove(v);
        }
        else
        {
            v.is_deleted = true;
        }

    }



    void Activebutton(DiscountCodeModel b)
    {
        b.status = !b.status;

    }
}
