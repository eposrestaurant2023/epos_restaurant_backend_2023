@page "/businessinformation"
@inject IJSRuntime js
@inherits PageCore;
<Loading is_loading="@is_loading" />
@if (!is_loading)
{
    <Title Value="Company Information"></Title>
    <PageContainer roles="@gv.GetRole("business_information")">
        <PageHeader>
            <HeaderLeft>
                <PageTitle ShowFilter="false">
                    <HeaderTemplate>
                        Business Information
                    </HeaderTemplate>
                </PageTitle>
            </HeaderLeft>
        </PageHeader>
        <EditForm Model="@model" OnValidSubmit="Save_Click" @attributes="@formAttributes">
            <DataAnnotationsValidator />
            <PageBody>
                <UIGridCenter>
                    <UIContainerBox Title="Business Info">
                        <UISummaryBox ImageUrl="@model.company_logo" ShowImage="true">
                            <ContentLeft>
                                <table>
                                    <tr>
                                        <th>Company Name</th>
                                        <td>@model.company_name</td>
                                    </tr>
                                    <tr>
                                        <th>Company Name KH</th>
                                        <td>@model.company_name_kh</td>
                                    </tr>
                                    <tr>
                                        <th>Mobile Phone</th>
                                        <td>@model.mobile_phone</td>
                                    </tr>
                                    <tr>
                                        <th>Office Phone</th>
                                        <td>@model.office_phone</td>
                                    </tr>
                                </table>
                            </ContentLeft>
                            <ContentRight>
                                <table>
                                    <tr>
                                        <th>Contact Name</th>
                                        <td>@model.contact_name</td>
                                    </tr>
                                    <tr>
                                        <th>Phone Number</th>
                                        <td>@model.contact_phone_number</td>
                                    </tr>
                                    <tr>
                                        <th>Office Phone</th>
                                        <td>@model.contact_office_number</td>
                                    </tr>

                                    <tr>
                                        <th>Office Emai</th>
                                        <td>
                                            @model.email
                                        </td>
                                    </tr>

                                    <tr>
                                        <th>Contact Email</th>
                                        <td>
                                            @model.contact_email
                                        </td>
                                    </tr>
                                </table>
                            </ContentRight>
                        </UISummaryBox>

                    </UIContainerBox>
                    <UIContainerBox Title="Brance Info" is_show_add_button="true" OnAddClick="@OnOpenModel">
                       @foreach(var d in models) { 
                     

                            <UISummaryBox ImageUrl="@d.logo" ShowImage="true" Icon="edit" OnClick="@(()=>OnEdit(d.id))">
                                
                                <ContentLeft>
                                    <table>
                                        <tr>
                                            <th>Business Branch Name Kh</th>
                                            <td>@d.business_branch_name_kh</td>
                                        </tr>
                                        <tr>
                                            <th>Business Branch Name En</th>
                                            <td>@d.business_branch_name_en</td>
                                        </tr>
                                        <tr>
                                            <th>Mobile Phone</th>
                                            <td>@d.phone_1</td>
                                        </tr>
                                        <tr>
                                            <th>Office Phone</th>
                                            <td>@d.phone_2</td>
                                        </tr>
                                    </table>
                                </ContentLeft>
                                <ContentRight>
                                    <table>
                                        <tr>
                                            <th>Email</th>
                                            <td>@d.email</td>
                                        </tr>
                                        <tr>
                                            <th>WebSite</th>
                                            <td>@d.website</td>
                                        </tr>
                                        <tr>
                                            <th>Address</th>
                                            <td>@d.address_en</td>
                                        </tr>
                                        <tr>
                                            <th>Note</th>
                                            <td>@d.note</td>
                                        </tr>
                                    </table>
                                </ContentRight>
                            </UISummaryBox>
                       }
                    </UIContainerBox>
                </UIGridCenter>
            </PageBody>
            <PageFooter>
                <FooterCenter>
                    <Button roles="@gv.GetRole("business_information_add")" icon="save" disabled="is_saving" type="submit">
                        @if (is_saving)
                        {
                            <Spinner />
                        }
                        else
                        {
                            <span>Save</span>
                        }
                    </Button>
                </FooterCenter>
            </PageFooter>
        </EditForm>

    </PageContainer>



    <ComModal IsOpened="@ShowModal" Close_Click="@Oncanel" ModalWidth="700px">
        @ModalTitle
        <EditForm Model="@business_brnach" OnValidSubmit="@Save_Click">
            <ValidationSummary />
            <FileUpload @bind-ImageUrl="@business_brnach.logo" />
            <TextInput label="Business Branch Name Kh" @bind-text="@business_brnach.business_branch_name_kh">
                <ValidationMessage For="@(() => business_brnach.business_branch_name_kh )" />
            </TextInput>
            <TextInput label="Business Branch Name En" @bind-text="@business_brnach.business_branch_name_en" />
            <TextInput label="Mobile Phone" @bind-text="@business_brnach.phone_1" />
            <TextInput label="Office Phone" @bind-text="@business_brnach.phone_2" />
            <TextInput label="Email" @bind-text="@business_brnach.email" />
            <TextInput label="WebSite" @bind-text="@business_brnach.website" />
            <TextInput type="textarea" label="Address" @bind-text="@business_brnach.address_en" />
            <TextInput type="textarea" label="Note" @bind-text="@business_brnach.note" />
            <div uk-margin class="uk-text-right">
                <Button icon="arrow_back" @onclick="@Oncanel" disabled="@IsSubmitting">Cancel</Button>
                <Button type="submit" icon="save" disabled="@IsSubmitting"> Save <Spinner is_spinning="@IsSubmitting" /></Button>
            </div>
        </EditForm>
    </ComModal>

}

@code{
    string guid = Guid.NewGuid().ToString();
    bool ShowModal = false;
    List<BusinessBranchModel> models = new List<BusinessBranchModel>();
    [Parameter] public bool IsSubmitting { get; set; } = false;
    BusinessInformationModel model { get; set; } = new BusinessInformationModel();
    BusinessBranchModel business_brnach { get; set; } = new BusinessBranchModel();
    InputFileData file { get; set; } = new InputFileData();
    string ControllerApi = "BusinessBranch";
    string ModalTitle = "";

    protected override async Task OnInitializedAsync()
    {
        is_loading = true;
        model = gv.business_info;
        await LoadData();
        is_loading = false;
    }



    async Task LoadData(string api_url = "")
    {

        is_loading_data = true;

        if (string.IsNullOrEmpty(api_url))
        {

            api_url = $"{ControllerApi}?$select=id,business_branch_name_en,business_branch_name_kh,address_en,is_deleted,email,phone_1,website,logo,phone_2,note";
        }

        var resp = await http.ApiGetOData(api_url);
        if (resp.IsSuccess)
        {

            models = JsonSerializer.Deserialize<List<BusinessBranchModel>>(resp.Content.ToString());

        }
        is_loading_data = false;

    }



    async Task Save_Click()
    {
        is_saving = true;
        var res = await http.ApiPost("BusinessBranch/save", business_brnach);
        if (res.IsSuccess)
        {
            toast.Add("Save sucessfully", MatToastType.Success);
            await LoadData();
        }
        else
        {
            toast.Add(res.Content.ToString(), MatToastType.Warning);
        }

        ShowModal = false;
        is_saving = false;

    }

    void OnOpenModel()
    {
        ShowModal = !ShowModal;
    }

    void Oncanel()
    {
        ShowModal = false;
    }

    async Task OnEdit(Guid id)
    {
        is_loading_data = true;
        var get_result = await http.ApiGet($"BusinessBranch({id})");
        if (get_result.IsSuccess)
        {
            business_brnach = JsonSerializer.Deserialize<BusinessBranchModel>(get_result.Content.ToString());
            ModalTitle = "Edit" + ": " + business_brnach.business_branch_name_en ;
            ShowModal = true;
        }
        is_loading_data = false;
    }

    async Task OnDelete(BusinessBranchModel v)
    {
        is_loading_data = true;
        v.is_loading = true;
        if (await js.Confirm("Are You Sure To Delete"))
        {
            var postr = await http.ApiPost($"{ControllerApi}/delete/{v.id}");
            if (postr.IsSuccess)
            {
                await js.Toast("Deleted Sucessfully", AlertType.success);
            }
        }
        v.is_loading = false;
        is_loading_data = false;
    }

    void AddNew()
    {
        business_brnach = new BusinessBranchModel();
        ShowModal = true;
    }


}
