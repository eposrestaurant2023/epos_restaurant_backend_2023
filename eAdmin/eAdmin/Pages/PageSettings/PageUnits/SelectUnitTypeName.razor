@if (label != "")
{
    <div class="@(is_horizontal ? "uk-form-horizontal" : "")">
        <div class="uk-margin-small">
            <label class="uk-form-label" for="@id">@label</label>
            @if (is_read_only)
            {
                <div class="uk-form-controls">
                    <select disabled id="@id" value="@selected_value.ToString()" class="uk-select uk-width-medium uk-form-small" style="width:@Width">
                        <option value="Reference">Reference</option>
                        <option value="Smaller than Reference">Smaller than Reference</option>
                        <option value="Bigger than Reference">Bigger than Reference</option>
                    </select>
                </div>
            }
            else
            {
                <div class="uk-form-controls">
                    <select id="@id" value="@selected_value.ToString()" @onchange="@((ui) => SelectedValueChange((string)ui.Value))" class="uk-select uk-width-medium uk-form-small" style="width:@Width">
                        <option value="Reference">Reference</option>
                        <option value="Smaller than Reference">Smaller than Reference</option>
                        <option value="Bigger than Reference">Bigger than Reference</option>
                    </select>
                </div>
            }
        </div>
    </div>
}
else
{
    @if (is_read_only)
    {
        <div class="uk-form-controls">
            <select disabled id="@id" value="@selected_value.ToString()" class="uk-select uk-width-medium uk-form-small" style="width:@Width">
                <option value="Reference">Reference</option>
                <option value="Smaller than Reference">Smaller than Reference</option>
                <option value="Bigger than Reference">Bigger than Reference</option>
            </select>
        </div>
    }
    else
    {
        <div class="uk-form-controls">
            <select id="@id" value="@selected_value.ToString()" @onchange="@((ui) => SelectedValueChange((string)ui.Value))" class="uk-select uk-width-medium uk-form-small" style="width:@Width">
                <option value="Reference">Reference</option>
                <option value="Smaller than Reference">Smaller than Reference</option>
                <option value="Bigger than Reference">Bigger than Reference</option>
            </select>
        </div>
    }
}
@code{
    [Parameter] public string selected_value { get; set; } = "Reference";
    [Parameter] public string label { get; set; } = "";
    [Parameter] public string Width { get; set; } = "100%";
    [Parameter] public bool is_read_only { get; set; } = false;
    [Parameter] public bool is_horizontal { get; set; } = true;


    [Parameter]
    public EventCallback<string> selected_valueChanged { get; set; }

    Guid id = Guid.NewGuid();

    private async Task SelectedValueChange(string n)
    {
        selected_value = n;
        await selected_valueChanged.InvokeAsync(selected_value);
    }
}
