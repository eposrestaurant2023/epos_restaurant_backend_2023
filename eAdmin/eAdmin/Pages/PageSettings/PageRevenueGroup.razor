@page "/setting/revenuegroup"
@inherits PageCore
<Loading is_loading="@(is_loading || is_saving)" />
@if (!is_loading)
{
   
    <Title Value="@lang["Revenue Group"]"></Title>
    <PageContainer roles="@gv.GetRole("revenue_group_management")">
        <PageHeader>
            <HeaderLeft>
                <PageTitle ShowFilter="false">
                    <HeaderTemplate>
                        @lang["Revenue Group"]
                    </HeaderTemplate>
                </PageTitle>
            </HeaderLeft>
            <HeaderRight ShowBackButton="true">
               <RefreshButton OnClick="@OnInitializedAsync"/>
            </HeaderRight>
        </PageHeader>

        <PageBody>
            <UIGridCenter>
                <UIContainerBox Title="@lang["Revenue Group"]">
                    <div class="uk-overflow-auto table-scroll">
                        <table class="uk-table  view_table set-verticle-middle uk-table-small uk-table-striped uk-table-hover">
                            <tr>
                                <Th>@lang["Name En"]</Th>
                                <Th>@lang["Name Kh"]</Th>
                                <ThCenter>@lang["Sort Order"]</ThCenter>
                                <Th></Th>
                            </tr>
                            @foreach (var b in models.Where(r => r.is_deleted == false))
                            {
                                <tr>
                                    <td><TextInput @bind-text="@b.revenue_group_name_en" placeholder="@lang["Revenue Group en"]" /></td>
                                    <td><TextInput @bind-text="@b.revenue_group_name_kh" placeholder="@lang["Revenue Group kh"]" /></td>
                                    <TdCenter>
                                        <NumberInputInt @bind-text="@b.sort_order" class_name="uk-text-center"/>
                                    </TdCenter>
                                    <TdCenter>
                                        <Icon icon="delete" OnClick="@(()=>Delete(b))" />
                                    </TdCenter>

                                </tr>
                            }
                        </table>
                    </div>
                        <Button OnClick="@(()=>Add())">@lang["Add Revenue Group"]</Button>
                </UIContainerBox>
            </UIGridCenter>
        </PageBody>
        <PageFooter>
            <FooterCenter>
                <ComSavingFormButton is_loading="@is_saving" is_show_cancel_back="false" is_show_save_action="true" OnSave="@Save_Click"/>
            </FooterCenter>
        </PageFooter>
        </PageContainer>
}

@code{
    List<RevenueGroupModel> models = new List<RevenueGroupModel>();
    protected override async Task OnInitializedAsync()
    {
        is_loading = true;
        await LoadData();
        is_loading = false;
    }



    async Task LoadData()
    {

        var resp = await http.ApiGetOData("RevenueGroup?$orderby=sort_order desc");
        if (resp.IsSuccess)
        {
            models = JsonSerializer.Deserialize<List<RevenueGroupModel>>(resp.Content.ToString());
            gv.revenue_groups = models;
        }
        else
        {

            toast.Add(lang["Loading Revenue Group fail."], MudBlazor.Severity.Warning);
        }


    }

    void Add()
    {
        models.Add(new RevenueGroupModel() { sort_order = models.Where(r=>r.is_deleted ==false).Count()+1 });

    }

    void Delete(RevenueGroupModel p)
    {
        if (p.id == Guid.Empty)
        {
            models.Remove(p);
        }
        else
        {
            p.is_deleted = true;
        }
    }

    async Task Save_Click()
    {


        if (models.Where(r => r.is_deleted == false && string.IsNullOrEmpty(r.revenue_group_name_en)).Any())
        {

            toast.Add(lang["Please enter revenue group name"], MudBlazor.Severity.Warning);
            return;

        }

        is_saving = true;

        var resp = await http.ApiPost("RevenueGroup/Save", models);
        if (resp.IsSuccess)
        {

            toast.Add(lang["Save revenue group successfully"], MudBlazor.Severity.Success);

            await LoadData();
        }
        else
        {

            toast.Add(lang["Save Revenue Group fail"], MudBlazor.Severity.Warning);
        }
        is_saving = false;
    }

}
