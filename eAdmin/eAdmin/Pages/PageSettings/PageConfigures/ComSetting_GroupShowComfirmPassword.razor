<Table 
       ShowPaging="false"
       ShowCounter="true"
       ShowPager="true"
       ShowTotalCount="false"
       ShowPagination="false"
       Items="@settings.Where(r=>r.group_name.Trim().ToLower() == group_name && r.is_public == is_public).ToList()"
       EmptyIcon="setting"
       EmptyText="No Data Found">
    <TableHeader>
        <Th>Setting title</Th>
        <ThAuto>Setting Value</ThAuto>
        <th></th>
    </TableHeader>
    <RowTemplate Context="s">
        <td>
            @s.setting_title
        </td>
        @if (business_id != Guid.Empty)
        {
            foreach (var bs in s.business_branch_settings.Where(r => r.setting_id == s.id && r.business_branch_id == business_id))
            {
    <td>
        @if (s.input_type == "date")
        {
            if (is_edit)
            {
                <ComSelectDateFormat label="Date Format" @bind-selected_value="@bs.setting_value" />
            }
            else
            {
                <div class="text-pre-wrap">@bs.setting_value</div>
            }

        }
        else if (s.input_type == "datetime")
        {
            if (is_edit)
            {
                <ComSelectDateTimeFormat label="Date Time Format" @bind-selected_value="@bs.setting_value" />
            }
            else
            {
                <div class="text-pre-wrap">@bs.setting_value</div>
            }
        }
        else if (s.input_type == "checkbox")
        {
            if (is_edit)
            {
                <ComInputCheckBox @bind-value="@(bs.is_select)" />
                bs.setting_value = bs.is_select.ToString().Trim().ToLower().Equals("true") ? "0" : "1";
                @bs.setting_value
            }
            else
            {
                <ComInputCheckBox is_read_only="true" @bind-value="@(bs.is_select)" />
                bs.setting_value = bs.is_select.ToString().Trim().ToLower().Equals("true") ? "0" : "1";
                @bs.setting_value
            }
        }
        else
        {
            if (is_edit)
            {
                <TextInput type="@s.input_type" label="text" @bind-text="@bs.setting_value" />
            }
            else
            {
                <div class="text-pre-wrap">@bs.setting_value</div>
            }
        }
    </td>
            <td>
                <Icon roles="@gv.GetRole("general_setting_edit")" title="Edit" icon="edit" OnClick="@(()=>OnEdits(s))" />
            </td>
            }
        }
        else if(business_id == Guid.Empty)
        {
    <td>
        @if (s.input_type == "date")
        {
            if (is_edit)
            {
                <ComSelectDateFormat label="Date Format" @bind-selected_value="@s.setting_value" />
            }
            else
            {
                <div class="text-pre-wrap">@s.setting_value</div>
            }
        }
        else if (s.input_type == "datetime")
        {
            if (is_edit)
            {
                <ComSelectDateTimeFormat label="Date Time Format" @bind-selected_value="@s.setting_value" />
            }
            else
            {
                <div class="text-pre-wrap">@s.setting_value</div>
            }

        }
        else if (s.input_type == "checkbox")
        {
            if (is_edit)
            {

                <ComInputCheckBox @bind-value="@(s.is_select)" />
                s.setting_value = s.is_select.ToString().Trim().ToLower().Equals("true") ? "0" : "1";
                @s.setting_value
            }
            else
            {
                <ComInputCheckBox is_read_only="true" @bind-value="@(s.is_select)" />
                s.setting_value = s.is_select.ToString().Trim().ToLower().Equals("true") ? "0" : "1";
                @s.setting_value
            }
        }
        else
        {
            if (is_edit)
            {
                <TextInput type="@s.input_type" @bind-text="s.setting_value" />
            }
            else
            {
                <div class="text-pre-wrap">@s.setting_value</div>
            }
        }
    </td>
            <td>
                <Icon roles="@gv.GetRole("general_setting_edit")" title="Edit" icon="edit" OnClick="@(()=>OnEdits(s))" />
            </td>
        }
    </RowTemplate>
</Table>

@code {
    [CascadingParameter] public GlobalVariableModel gv { get; set; }
    [Parameter] public List<SettingModel> settings { get; set; }
    [Parameter] public string group_name { get; set; }
    [Parameter] public bool is_public { get; set; }
    [Parameter] public Guid business_id { get; set; } = new Guid();
    [Parameter] public EventCallback<SettingModel> OnEdit { get; set; }
    bool is_edit = false;

    async Task OnEdits(SettingModel _s)
    {
        is_edit = !is_edit;
        await OnEdit.InvokeAsync(_s);
    }
}
