@page "/configure"
@inherits PageCore

<Loading is_loading="@is_loading" />

@if (!is_loading)
{
    <Title Value="General Setting"></Title>
    <PageContainer roles="@gv.GetRole("general_setting_management")">
        <PageHeader>
            <HeaderLeft>
                <PageTitle ShowFilter="false">
                    <HeaderTemplate>
                      @lang["Settings"]
                    </HeaderTemplate>
                </PageTitle>
            </HeaderLeft>
            <HeaderRight>
                <RefreshButton OnClick="@(async()=>await LoadData())" />
                <MudHidden Breakpoint="Breakpoint.SmAndDown">
                    <ComSearch place_holder="@keyword" KeywordChanged="@OnSearch" show_advance_filter="false" />

                </MudHidden>
            </HeaderRight>
        </PageHeader>
        <PageBody>
            <MudHidden Breakpoint="Breakpoint.MdAndUp">
                <ComSearch is_fullwidth="true" place_holder="@keyword" KeywordChanged="@OnSearch" show_advance_filter="false" />

                <Spacing Number="4" />
            </MudHidden>
            <Tab>
                <TabHeader>
                    <TabHeaderItem>@lang["General Setting"]</TabHeaderItem>
                    @foreach (var bs in gv.business_branch_by_role.Where(r => r.is_deleted == false))
                    {
                        <TabHeaderItem>@bs.business_branch_name_en</TabHeaderItem>
                    }
                </TabHeader>
                <TabBody>
                    <TabItem>
                        <UIGridCenter>
                            <ComSetting business_branch_id="@(Guid.Empty)" settings="@GetSettings" />
                        </UIGridCenter>
                    </TabItem>

                    @foreach (var bs in gv.business_branch_by_role.Where(r => r.is_deleted == false))
                    {
                        <TabItem>
                            <UIGridCenter>
                                <ComSetting business_branch_id="@bs.id" settings="@GetSettings" />
                            </UIGridCenter>
                        </TabItem>
                    }
                </TabBody>
            </Tab>
        </PageBody>
        <PageFooter>
            <FooterCenter>
                <ComSavingFormButton is_loading="@is_saving" is_show_cancel_back="false" is_show_save_action="true" OnSave="@Save_Click" />
            </FooterCenter>
        </PageFooter>
    </PageContainer>
}

@code{

    List<SettingModel> settings = new List<SettingModel>();
    string keyword;

    public List<SettingModel> GetSettings { get {
            if (string.IsNullOrEmpty(keyword))
            {
                return settings;
            }
            else
            {
                return settings.Where(r=>r.setting_title.ToLower().Trim().Contains(keyword.ToLower().Trim())).ToList();
            }
        } }

    protected override async Task OnInitializedAsync()
    {
        is_loading = true;
        await LoadData();

        is_loading = false;
    }

    async Task LoadData()
    {
        is_loading = true;

        string   api_url = $"Setting?$expand=business_branch_settings";


        var resp = await http.ApiGetOData(api_url);
        if (resp.IsSuccess)
        {
            settings = JsonSerializer.Deserialize<List<SettingModel>>(resp.Content.ToString());
        }
        is_loading = false;
    }

    async Task Save_Click()
    {
        is_saving = true;

        var re = await http.ApiPost("save/setting/multiple", settings);
        if (re.IsSuccess)
        {
            toast.Add(lang["Save successfully"], MudBlazor.Severity.Success);
        }
        else
        {
            toast.Add(lang["Save data fail"], MudBlazor.Severity.Warning);
        }
        is_saving = false;
    }

    void OnSearch(string _keyword)
    {
        keyword = _keyword;
       
    }
}


