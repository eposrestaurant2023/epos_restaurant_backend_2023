
@page "/setting/printer"
@inject IHttpService http;
@inject ISnackbar toast;
@inject IStringLocalizer<Resource> lang
<Loading is_loading="@(is_loading || is_saving)" />
@if (!is_loading)
{
   
    <Title Value="@lang["Printers"]"></Title>
    <PageContainer roles="@gv.GetRole("printer_management")">
        <PageHeader>
            <HeaderLeft>
                <PageTitle ShowFilter="false">
                    <HeaderTemplate>
                        @lang["Printers"]
                    </HeaderTemplate>
                </PageTitle>
            </HeaderLeft>
            <HeaderRight ShowBackButton="true">
               <RefreshButton OnClick="@OnInitializedAsync"/>
            </HeaderRight>
        </PageHeader>

        <PageBody>
            <UIGridCenter>

                @if (branches.Any())
                {
                    @foreach (var b in gv.business_branch_by_role)
                    {
                        if (gv.business_branch_has_feature(b.id.ToString(), "KOT"))
                        {

                            <MudExpansionPanels MultiExpansion="true">
                                <MudExpansionPanel Class="mb-2" Text="@b.business_branch_name_en">
                                    <ComPrinters printers="@branches.Where(r=>r.id==b.id).FirstOrDefault().printers" />
                                    <hr />
                                    <div class="uk-text-right">
                                        <Button OnClick="@(() => AddPrinter(branches.Where(r=>r.id==b.id).FirstOrDefault()))">@lang["Add Printer"]</Button>
                                    </div>
                                </MudExpansionPanel>
                            </MudExpansionPanels>
                        }
                        else
                        {
                            <span><b>@(b.business_branch_name_en)</b> is not allow with this feature.</span>
                        }

                    }
                }
                else
                {
                    <ComAlert type="warning">@lang["There is no business branch. Please enter business branch first."]</ComAlert>
                }
            </UIGridCenter>
        </PageBody>
        <PageFooter>
            <FooterCenter>
                <ComSavingFormButton is_loading="@is_saving" is_show_cancel_back="false" is_show_save_action="true" OnSave="@Save_Click"/>
            </FooterCenter>
        </PageFooter>
        </PageContainer>
}

@code{


    [CascadingParameter] public GlobalVariableModel gv { get; set; }
    List<BusinessBranchModel> branches = new List<BusinessBranchModel>();


    bool is_loading,is_saving;

    protected override async Task OnInitializedAsync()
    {
        is_loading = true;
        await LoadData();
        is_loading = false;
    }



    async Task LoadData()
    {

        var resp = await http.ApiGetOData("BusinessBranch?$expand=printers($filter=is_deleted eq false)&$filter=is_deleted eq false");
        if (resp.IsSuccess)
        {
            branches = JsonSerializer.Deserialize<List<BusinessBranchModel>>(resp.Content.ToString());
            gv.printers = branches.SelectMany(r => r.printers).ToList();
        }
        else
        {

            toast.Add(lang["Loading printer fail."], MudBlazor.Severity.Warning);
        }


    }

    void AddPrinter(BusinessBranchModel b)
    {
        b.printers.Add(new PrinterModel());
    }

    async Task Save_Click()
    {

        if(branches.SelectMany(r=>r.printers).Where(r=>r.is_deleted==false && r.printer_name.Trim() == "").Any())
        {

            toast.Add(lang["Please enter printer name"], MudBlazor.Severity.Warning);
            return;
        }

        is_saving = true;

        var resp = await http.ApiPost("BusinessBranch/save/multiple", branches);
        if (resp.IsSuccess)
        {

            toast.Add(lang["Save successfully"], MudBlazor.Severity.Success);

            await LoadData();
        }
        else
        {

            toast.Add(lang["Save data fail"], MudBlazor.Severity.Warning);
        }
        is_saving = false;
    }

}
