@*@if (roles != null || roles.Count() > 0)
    {
        <ComRenderTree Items="@roles">
            <ItemTemplate Context="r">
                <li>

                    <a @onclick="@(()=>SelectRole_Click(r))" class="uk-drop-close">@r.Description (@r.Name) </a>

                    @if (r.roles?.Count() > 0)
                    {
                        <ComRoleTree OnDeleteRole="@Delete_Click" roles="@r.roles.Where(r=>r.is_hided == false).ToList()" OnSelect="SelectRole_Click" show_delete="@show_delete" />
                    }
                    else
                    {
                        if (show_delete)
                        {
                            if (r.is_loading)
                            {
                                <Spinner />
                            }
                            else
                            {
                                <button @onclick="@(()=>Delete_Click(r))">@lang["Delete"]</button>
                            }
                        }


                    }
                </li>
            </ItemTemplate>
        </ComRenderTree>

    }
    @code{

        [CascadingParameter] public Lang.I18nText.Lang lang { get; set; }
        [Parameter] public List<ApplicationRole> roles { get; set; }
        [Parameter] public bool show_delete { get; set; } = false;


        [Parameter] public EventCallback<ApplicationRole> OnDeleteRole { get; set; }
        [Parameter] public EventCallback<ApplicationRole> OnSelect { get; set; }





        async Task SelectRole_Click(ApplicationRole role)
        {
            await OnSelect.InvokeAsync(role);
        }

        async Task Delete_Click(ApplicationRole role)
        {
            await OnDeleteRole.InvokeAsync(role);
        }



    }*@

