@using eModels;
@inherits PageCore
 

<EditFormContext Cancel_Click="Cancel_click" model="@user" is_opened="is_dialog_open" title="@modal_title" Save_Click="@SaveUser_Click" is_submitting="user.is_loading" modal_width="800px">
    <FileUpload @bind-ImageUrl="@user.photo" />
    <Spacing Number="10" />
    <NumberInputInt label="User Code" @bind-text="@(user.user_code)">
        <ValidationMessage For="@(()=>user.user_code)"/>
    </NumberInputInt>

    @if (user.is_allow_front_end_login)
    {
        <NumberInputInt label="Pin Code" @bind-text="@user.pin_code" />
    }

    <TextInput label="Full Name" @bind-text="@user.full_name">
        <ValidationMessage For="@(() => user.full_name)" />
    </TextInput>

    <TextInput label="User Name" @bind-text="@user.username">
        <ValidationMessage For="@(() => user.username)" />
    </TextInput>

    <SelectRole label="Role Name" show_empty="true" @bind-selected_value="@user.role_id">
        <ValidationMessage For="@(()=>user.role_id)" />
    </SelectRole>

    <TextInput label="Email Address" @bind-text="@user.email"/>
    <TextInput label=" Phone Number" @bind-text="@user.phone_1"/>
    <TextInput label="Password" type="password" @bind-text="@user.password">
        <ValidationMessage For="@(()=>user.password)"/>
    </TextInput>

    <ComInputCheckBox label="Is Allow Front End Login" @bind-value="user.is_allow_front_end_login"/>
    <ComInputCheckBox label="Is Allow Back End Login" @bind-value="user.is_allow_backend_login"/>

    <SelectStatus label=" Status" @bind-selected_value="@user.status" />

    <TextInput label="Note" type="textarea" @bind-text="@user.note" />
</EditFormContext>
@code{
    [Parameter] public string modal_title { get; set; } = "";
    [Parameter] public UserModel user { get; set; } = new UserModel();
    [Parameter] public bool is_dialog_open { get; set; }

    [Parameter] public EventCallback<UserModel> Save_User_click { get; set; }
    [Parameter] public EventCallback<MouseEventArgs> Cancel_click { get; set; }

    async Task SaveUser_Click()
    {
        if (string.IsNullOrEmpty(user.username))
        {
            toast.Add("Please enter username", MatToastType.Warning);
            return;
        }
        if (string.IsNullOrEmpty(user.password))
        {
            toast.Add("Please enter password", MatToastType.Warning);
            return;
        }
        if (user.password.Length < 4)
        {
            toast.Add("Password is too short", MatToastType.Warning);
            return;
        }
        await Save_User_click.InvokeAsync(user);
    } 
}

