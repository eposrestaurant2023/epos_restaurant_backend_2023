@using eModels;
@inherits PageCore

<EditFormContext Cancel_Click="Cancel_click" model="@user" is_opened="is_dialog_open" title="@modal_title" Save_Click="@SaveUser_Click" is_submitting="user.is_loading" modal_width="800px">
    <UIContainerBox Title="@lang["Photo"]" ClassName="uk-text-center">
        <UIFlexCenter>
            <FileUpload @bind-ImageUrl="@user.photo" />
        </UIFlexCenter>
    </UIContainerBox>
    <UIContainerBox Title="@lang["General Information"]">
        <TextInput label="@lang["Full Name"]" @bind-text="@user.full_name">
            <ValidationMessage For="@(() => user.full_name)" />
        </TextInput>
        <TextInput label="@lang["Email"]" @bind-text="@user.email" />
        <TextInput label="@lang["Phone Number"]" @bind-text="@user.phone_1" />
    </UIContainerBox>
    
    <UIContainerBox Title="@lang["Account"]">
        <TextInput label="@lang["Code"]" @bind-text="@(user.user_code)">
            <ValidationMessage For="@(()=>user.user_code)" />
        </TextInput>

        <TextInput label="@lang["User Name"]" @bind-text="@user.username">
            <ValidationMessage For="@(() => user.username)" />
        </TextInput>
        <TextInput label="@lang["Password"]" type="password" @bind-text="@user.password">
            <ValidationMessage For="@(()=>user.password)" />
        </TextInput>
        <SelectRole label="@lang["Role Name"]" show_empty="true" @bind-selected_value="@user.role_id">
            <ValidationMessage For="@(()=>user.role_id)" />
        </SelectRole>
        <ComInputCheckBox label="@lang["Is Allow Front End Login"]" @bind-value="user.is_allow_front_end_login" />
        @if (user.is_allow_front_end_login)
        {
            <TextInput label="@lang["Pin Code"]" @bind-text="@user.pin_code" />
        }
        <ComInputCheckBox label="@lang["Is Allow Back End Login"]" @bind-value="user.is_allow_backend_login" />

        <SelectStatus label="@lang["Status"]" @bind-selected_value="@user.status" />
    </UIContainerBox>

    <UIContainerBox Title="@lang["Note"]">
        <TextInput label="" type="textarea" @bind-text="@user.note" />
    </UIContainerBox>
    
</EditFormContext>
@code{
    [Parameter] public string modal_title { get; set; } = "";
    [Parameter] public UserModel user { get; set; } = new UserModel();
    [Parameter] public bool is_dialog_open { get; set; }

    [Parameter] public EventCallback<UserModel> Save_User_click { get; set; }
    [Parameter] public EventCallback<MouseEventArgs> Cancel_click { get; set; }

    async Task SaveUser_Click()
    {
        if (string.IsNullOrEmpty(user.username))
        {
            toast.Add(lang["Please enter username"], MudBlazor.Severity.Warning);
            return;
        }
        if (string.IsNullOrEmpty(user.password))
        {
            toast.Add(lang["Please enter password"], MudBlazor.Severity.Warning);
            return;
        }
        if (user.password.Length < 4)
        {
            toast.Add(lang["Password is too short"], MudBlazor.Severity.Warning);
            return;
        }
        await Save_User_click.InvokeAsync(user);
    } 
}

