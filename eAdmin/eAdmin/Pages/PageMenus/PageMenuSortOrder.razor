@page "/sortmenu"
@inherits PageCore
<Loading is_loading="@(is_loading || is_loading_data || is_saving)" />
<Title Value="@lang["Sort Menu"]"></Title>

@if (!is_loading)
{
    <PageContainer>
        <PageHeader>
            <HeaderLeft>
                <PageTitle ShowFilter="false">
                    <HeaderTemplate>
                        <MudHidden Breakpoint="Breakpoint.LgAndUp">
                            <MudIconButton Icon="@Icons.Material.Outlined.Menu" Color="MudBlazor.Color.Inherit" Edge="Edge.Start" />
                        </MudHidden>
                        @lang["Sort Menu"]
                    </HeaderTemplate>
                </PageTitle>
            </HeaderLeft>
          
        </PageHeader>
        <PageBody>
            <MudDrawer Elevation="1" Variant="@DrawerVariant.Temporary">
                <MudDrawerHeader>
                    <MudText Class="d-flex align-center" Typo="Typo.h6">@lang["Menu"]</MudText>
                </MudDrawerHeader>
                <MudDivider />
               menu tree
            </MudDrawer>
            <Grid ClassName="uk-grid-small">
                <MudHidden Breakpoint="Breakpoint.SmAndDown">
                    <Column ClassName="uk-width-1-5@m uk-width-1-1@s">
                        menu tree
                    </Column>
                </MudHidden>
                <Column ClassName="uk-width-4-5@m uk-width-1-1@s">
                    <UIContainerBox Title="Report">
                        <MudTreeView Items="@(new  HashSet<MenuSortOrder>(TreeItems.Where(r=>r.parent_id ==  null)))" CanActivate="true">
                            <ItemTemplate>
                                <MudTreeViewItem Items="@context.children" > 
                                        <MudTreeViewItemToggleButton  Visible="@(context.children.Count()>0)" />
                                        <MudText>@context.menu_name_en</MudText>
                                </MudTreeViewItem>
                            </ItemTemplate>
                        </MudTreeView>
                        @JsonSerializer.Serialize(TreeItems)
                    </UIContainerBox>
                    
                    
                     
                </Column>
            </Grid>
        </PageBody>
        <PageFooter>
            <FooterCenter>
                <ComSavingFormButton is_show_cancel="false" is_show_save_action="true" is_loading="@is_saving" />
            </FooterCenter>
        </PageFooter>
    </PageContainer>
}

@code
{

    RootMenu  root_list { get; set; } = new RootMenu();
    private HashSet<MenuSortOrder> TreeItems { get; set; } = new HashSet<MenuSortOrder>();
    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    async Task LoadData()
    {
        is_loading = true;
        var res = await http.ApiPost("getData",new FilterModel()
        {
            procedure_name="sp_get_menu_for_sort_order",
            procedure_parameter= $"'{gv.current_login_user.username}'"
        });
        if (res.IsSuccess)
        {
            root_list = JsonSerializer.Deserialize<RootMenu>(res.Content.ToString());
            BuidTree();
        }
        is_loading = false;
    }

    void BuidTree()
    {
        foreach (var i in root_list.menu.Where(r=>r.parent_id == null ))
        {
            AddChild(i);
            TreeItems.Add(i);


        }
    }

    void AddChild(MenuSortOrder parent){
        foreach (var i in root_list.menu.Where(r=>r.parent_id == parent.id))
        {
            //   AddChild(i);
            parent.children.Add(i);


        }

    }

    class MenuSortOrder
    {
        public MenuSortOrder()
        {
            children = new();
        }
        public int id { get; set; }
        public int? parent_id { get; set; }
        public string menu_name_en { get; set; }
        public int sort_order { get; set; }

        public HashSet<MenuSortOrder> children  { get; set; }
    }
    class MenuProductSortOrder
    {
        public int id { get; set; }
        public int menu_id { get; set; }
        public string product_code { get; set; }
        public string product_name_en { get; set; }
        public int sort_order { get; set; }
    }

    class RootMenu
    {
        public List<MenuSortOrder> menu { get; set; }
        public List<MenuProductSortOrder> menu_product { get; set; }
    }


}

