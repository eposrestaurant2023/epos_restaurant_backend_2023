
@if (menu != null)
{
    foreach (var m in menu.product_menus.Where(r => r.is_deleted == false))
    {
        <div>
            @m.product.product_name_en | @m.product.photo |
            <Button OnClick="@(()=>RemoveProduct(m))">Remove</Button>
        </div>

    }
    @if (deleted_product_menu != null && show_undo_delete == true)
    {
        <MatSnackbar @bind-IsOpen="@show_undo_delete">
            <MatSnackbarContent>Product @deleted_product_menu.product.product_name_kh  has been remove from this menu @menu.menu_name_en.</MatSnackbarContent>
            <MatSnackbarActions>
                <MatButton Raised="true" OnClick="@UndoDelete">Undo</MatButton>
            </MatSnackbarActions>
        </MatSnackbar>
    }
}
 

@code {
    [Parameter] public MenuModel menu { get; set; }

    ProductMenuModel deleted_product_menu = new ProductMenuModel();

    bool show_undo_delete = false;

    void RemoveProduct(ProductMenuModel deleted_item)
    {
        deleted_item.is_deleted = true;
        deleted_product_menu = deleted_item;
        show_undo_delete = true;
    }

    void UndoDelete()
    {
        deleted_product_menu.is_deleted = false;
        show_undo_delete = false;
    }


}
