@inherits PageCore
<div class="bg_business_rootmenu">
    @foreach (var b in gv.business_branch_by_role)
    {
        <h3 class="title uk-margin-remove-top uk-margin-remove-bottom" style="margin-bottom:10px !important;">
            @b.business_branch_name_en
        </h3>
        @foreach (var n in menus.Where(r => r.business_branch_id == b.id && r.is_deleted == false && r.parent_id == null))
        {
<button @onclick="@(()=>MenuClick(n))" class="@(n.is_selected? "selected" : "") button_color_button">
    <div style="text-align:left;width:100%">
        @n.menu_name_en 
    </div>
    @if (!menus.Where(r => r.parent_id == n.id && r.is_deleted == false).Any())
    {
        <div class="uk-inline button-action-table">
            <Icon icon="more_vert" />
            <div uk-drop="mode: click;pos:top-left" class="tbl_actions_group">
                <ul class="uk-nav uk-dropdown-nav">

                    <li @onclick="@(() => OnDeleteMenu(n))"> <Icon icon="delete" />Delete</li>

                </ul>
            </div>
        </div>
    }
    </button>
        }
    }
</div>
@code {
    [Parameter] public List<MenuModel> menus { get; set; } = new List<MenuModel>();
    [Parameter] public int menu_id { get; set; }
    [Parameter] public EventCallback<int> menu_idChanged { get; set; }

    [Parameter] public int current_menu_id { get; set; }
    [Parameter] public EventCallback<int> current_menu_idChanged { get; set; }

    [Parameter] public int parent_menu_id { get; set; }
    [Parameter] public EventCallback<int> parent_menu_idChanged { get; set; }

    [Parameter] public Guid business_id { get; set; }
    [Parameter] public EventCallback<Guid> business_idChanged { get; set; }

    [Parameter] public string keyword { get; set; }
    [Parameter] public EventCallback<string> keywordChanged { get; set; }

    async Task MenuClick(MenuModel m)
    {
        if (menus.Where(r => r.is_selected == true && r.parent_id == null).Any()) {
            menus.Where(r => r.is_selected == true && r.parent_id == null).FirstOrDefault().is_selected = false;
        }
        m.is_selected = true;
        await menu_idChanged.InvokeAsync(m.id);
        await current_menu_idChanged.InvokeAsync(m.id);
        await parent_menu_idChanged.InvokeAsync(m.id);
        await business_idChanged.InvokeAsync(m.business_branch_id);
        await keywordChanged.InvokeAsync("");

    }


    protected override async Task OnInitializedAsync()
    {
        Guid role_id = gv.business_branch_by_role.FirstOrDefault().id;
        var menu = menus.Where(r => r.business_branch_id == role_id).FirstOrDefault();
        await MenuClick(menu);
    }


    async Task OnDeleteMenu(MenuModel m)
    {
 
        if (m.id > 0)
        {
            if (await js.Confirm("Delete Menu", "Are you sure you want to delete this record?"))
            {
                m.is_deleted = true;
            }
        }
        else
        {
            menus.Remove(m);
        }
          
    }


}
