
@inject IStringLocalizer<Resource> lang
@inject IHttpService http;

 
@if (!is_loading)
{
    <ComDashboadKPI data="kpi" />
    <Spacing Number="20" />
    <div class="uk-grid-small" uk-grid uk-height-match="target: > div > .uk-card">
        <div class="uk-width-2-3">
            <ComDashboardHourlySaleRevenue business_branch_id="@bussiness_branch_id" />
        </div>
        <div class="uk-width-1-3">
            <ComDashboardSaleIndicator data="kpi" />
        </div>
    </div>

    <Spacing Number="20" />
    <ComDashboardDailySaleRevenue business_branch_id="@bussiness_branch_id" />


    <Spacing Number="20" />
    <ComPanel Title="">
        <Tab>
            <TabHeader>
                <TabHeaderItem>@lang["Recent Receipt"]</TabHeaderItem>
                <TabHeaderItem>@lang["Top Sale Product"]</TabHeaderItem>

            </TabHeader>
            <TabBody>
                <TabItem>
                    <ComDashboardRecentReceipt business_branch_id="@bussiness_branch_id"/>
                </TabItem>
                <TabItem>
                    @*jj*@
                </TabItem>

            </TabBody>
        </Tab>
    </ComPanel>
}
@code{
    [CascadingParameter] public GlobalVariableModel gv { get; set; }
    [Parameter] public string bussiness_branch_id { get; set; }

    int top = 10;
    string select_order = "10";
    bool is_loading;

    DashboardKPIModel kpi = new DashboardKPIModel();
    protected override async Task OnInitializedAsync()
    {
        is_loading = true;

        await LoadKPI();


        is_loading = false;
    }

    async Task LoadKPI()
    {
        var resp = await http.ApiPost("GetData", new FilterModel() { procedure_name = "sp_get_dashboard_kpi_json", procedure_parameter = $"'{bussiness_branch_id}'" });
        if (resp.IsSuccess)
        {
            var data = JsonSerializer.Deserialize<List<DashboardKPIModel>>(resp.Content.ToString());
            if (data.Any())
            {
                kpi = data.FirstOrDefault();
            }
            else
            {
                kpi = new DashboardKPIModel();
            }
        }
    }


}