@page "/dashboard"
@inject IStringLocalizer<Resource> lang
<Loading is_loading="@is_loading" />
<Title Value="@lang["Dashboard"]"></Title>
<PageContainer roles=@gv.GetRole("dashboard")>
    <PageHeader>
        <HeaderLeft>
            <PageTitle ShowFilter="false">
                <HeaderTemplate>
                    @lang["Dashboard"]
                </HeaderTemplate>
            </PageTitle>
        </HeaderLeft>
        <HeaderRight>
            <RefreshButton OnClick="@(async()=>await LoadData())" />
        </HeaderRight>

    </PageHeader>
    <PageBody>
        @if (gv.business_branch_by_role.Count() > 1)
        {
        <MudTabs>
            <MudTabPanel OnClick="@(async () => await LoadData(gv.business_branch_ids_filter_1))" Text="@lang["All Branches"]" Class="py-4">
                <Spacing Number="10" />
                <ComDashboard business_branch_id="@gv.business_branch_ids_filter_1" />
            </MudTabPanel>
            @foreach (var b in gv.business_branch_by_role)
            {

        <MudTabPanel OnClick="@(async () => await LoadData(b.id.ToString()))" Text="@b.business_branch_name_en" Class="py-4">
            <Spacing Number="10" />
            <ComDashboard business_branch_id="@b.id.ToString()" />
        </MudTabPanel>
            }
        </MudTabs>
        }
 
        
    </PageBody>

</PageContainer>



@code
{
    [CascadingParameter]
    public GlobalVariableModel gv { get; set; }
    bool is_loading;
    string business_branch_id = "";

    protected override async Task OnInitializedAsync()
    {

        await LoadData();
    }

    async Task LoadData(string _bussess_branch_id = "")
    {

        is_loading = true;
        await Task.Delay(100);
        if (_bussess_branch_id == "")
        {
            _bussess_branch_id = gv.business_branch_ids_filter_1;
        }
        business_branch_id = _bussess_branch_id;
        is_loading = false;
    }


}