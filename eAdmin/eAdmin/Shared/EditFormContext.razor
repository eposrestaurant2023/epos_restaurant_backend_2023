 
<EditForm @onsubmit:preventDefault="true" Model="model" Context="formContext" class="@form_attributes" >
    <ObjectGraphDataAnnotationsValidator />
    <Modal IsSimpleMode="false" Title="@title" IsOpened="@is_opened" IsOpenedChanged="(()=>OnCancelClick())" ModalWidth="@modal_width">
        <ModalBody>
            @ChildContent
        </ModalBody>
        <ModalFooter is_open_button_save_and_new="@is_open_button_save_and_new" 
                     OnNewSaveClick="@(()=>onNewSubmit(formContext))"
                     show_deleted="@show_deleted"
                     is_save_button="@is_save"
                     is_cancel_button="@is_cancel"
                     is_submitting="is_submitting"
                     OnCancelClick="OnCancelClick" 
                     OnSaveClick="@(()=>onSubmit(formContext))" 
                     OnDeleteClick="OnDeleteClcik" 
                     is_visible="@is_footer_visible" />
    </Modal>
</EditForm>

@code{
    //[CascadingParameter] public Lang.I18nText.Lang lang { get; set; }
    [Parameter] public bool is_submitting { get; set; } = false;
    [Parameter] public bool is_opened { get; set; }
    [Parameter] public bool is_save { get; set; } = true;
    [Parameter] public bool is_cancel { get; set; } = true;
    [Parameter] public bool is_open_button_save_and_new { get; set; }
    [Parameter] public bool is_footer_visible { get; set; } = true;
    [Parameter] public EventCallback<bool> is_openedChanged { get; set; }
    [Parameter] public bool show_deleted { get; set; } = false;
    [Parameter] public string title { get; set; }
    [Parameter] public string class_name { get; set; }
    [Parameter] public string modal_width { get; set; } = "auto";
    [Parameter] public string save_text { get; set; } = "Save";
    [Parameter] public RenderFragment ChildContent { get; set; }

    [Parameter] public EventCallback Save_Click { get; set; }
    [Parameter] public EventCallback NewSave_Click { get; set; }
    [Parameter] public EventCallback<MouseEventArgs> Cancel_Click { get; set; }
    [Parameter] public EventCallback<MouseEventArgs> Cancel_Clicks { get; set; }
    [Parameter] public EventCallback<MouseEventArgs> Delete_Click { get; set; }

    [Parameter] public object model { get; set; }

    [Parameter] public string form_attributes { get; set; } = "uk-form-horizontal";

    async Task OnCancelClick()
    {
        await is_openedChanged.InvokeAsync(false);
        await Cancel_Click.InvokeAsync(new MouseEventArgs());
        await Cancel_Clicks.InvokeAsync(new MouseEventArgs());
    }


    public void OnDeleteClcik()
    {
        Delete_Click.InvokeAsync(new MouseEventArgs());
    }
    async Task onSubmit(EditContext EditContext)
    {
        if (EditContext.Validate())
        {
            await Save_Click.InvokeAsync(true);
        }
    }

    async Task onNewSubmit(EditContext EditContext)
    {
        if (EditContext.Validate())
        {
            await NewSave_Click.InvokeAsync(false);
        }
    }
}
