@inject IJSRuntime js ;
@inject IStringLocalizer<Resource> lang

<div class="uk-search uk-search-default wrp-search-page @WrpClassName" style="width:@Width;">
    <span uk-search-icon></span>
    <input @onchange="@((e)=>OnSearch(e.Value.ToString()))" value="@Keyword" class="uk-input input-search-page @ClassName" type="text" placeholder="@PlaceHolder" @ref="@txt_search" />
</div>
@code{
    [Parameter] public EventCallback<string> KeywordChanged { get; set; }
    [Parameter] public string Keyword { get; set; } = "";
    [Parameter] public string ClassName { get; set; } = "";
    [Parameter] public string Width { get; set; } = "";
    [Parameter] public string WrpClassName { get; set; } = "";
    [Parameter] public string PlaceHolder { get; set; } = "Search...";
    private ElementReference txt_search;


    public string str_placeholder
    {
        get
        {
            if (string.IsNullOrEmpty(PlaceHolder))
            {
                return lang["Search"] + "...";
            }else
            {
                return PlaceHolder;
            }
        }
    }

    async Task OnSearch(string keyword)
    {
        await KeywordChanged.InvokeAsync(keyword);
    }



    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await js.InvokeVoidAsync("JsFunctions.focusElement", txt_search);
        }
    }

}