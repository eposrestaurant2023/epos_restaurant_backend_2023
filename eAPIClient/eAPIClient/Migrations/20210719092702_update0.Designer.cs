// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eAPIClient;

namespace eAPIClient.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210719092702_update0")]
    partial class update0
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("eAPIClient.Models.CashierShiftModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("cashier_shift_number")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal?>("close_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("close_note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("closed_by")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("closed_date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("closed_station_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("exchange_rate")
                        .HasColumnType("decimal(19,8)");

                    b.Property<bool>("is_closed")
                        .HasColumnType("bit");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("open_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("open_note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<Guid>("opened_station_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("outlet_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("shift")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<Guid>("working_day_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("working_day_id");

                    b.ToTable("tbl_cashier_shift");
                });

            modelBuilder.Entity("eAPIClient.Models.CategoryNoteModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("category_note_id")
                        .HasColumnType("int");

                    b.Property<string>("category_note_name_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("category_note_name_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_multiple_select")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("tbl_category_note");
                });

            modelBuilder.Entity("eAPIClient.Models.ConfigDataModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("config_type")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("data")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.ToTable("tbl_config_data");
                });

            modelBuilder.Entity("eAPIClient.Models.CustomerGroupModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("customer_group_name_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("customer_group_name_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("tbl_customer_group");
                });

            modelBuilder.Entity("eAPIClient.Models.CustomerModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<Guid>("business_branch_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("customer_code")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("customer_group_id")
                        .HasColumnType("int");

                    b.Property<string>("customer_name_en")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("customer_name_kh")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("date_of_birth")
                        .HasColumnType("date");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("gender")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("nationality")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("phone_1")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("phone_2")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("photo")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<decimal>("total_receivable")
                        .HasColumnType("decimal(19,8)");

                    b.HasKey("id");

                    b.HasIndex("customer_group_id");

                    b.ToTable("tbl_customer");
                });

            modelBuilder.Entity("eAPIClient.Models.DocumentNumberModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("counter")
                        .HasColumnType("int");

                    b.Property<string>("counter_digit")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("document_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("format")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("outlet_id")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("prefix")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.ToTable("tbl_document_number");
                });

            modelBuilder.Entity("eAPIClient.Models.MenuModel", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<string>("background_color")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_shortcut_menu")
                        .HasColumnType("bit");

                    b.Property<string>("menu_name_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("menu_name_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int?>("parent_id")
                        .HasColumnType("int");

                    b.Property<int>("root_menu_id")
                        .HasColumnType("int");

                    b.Property<string>("text_color")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.ToTable("tbl_menu");
                });

            modelBuilder.Entity("eAPIClient.Models.NoteModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("category_note_id")
                        .HasColumnType("int");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("note_id")
                        .HasColumnType("int");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("tbl_note");
                });

            modelBuilder.Entity("eAPIClient.Models.ProductMenuModel", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<int>("menu_id")
                        .HasColumnType("int");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("menu_id");

                    b.HasIndex("product_id");

                    b.ToTable("tbl_product_menu");
                });

            modelBuilder.Entity("eAPIClient.Models.ProductModel", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<bool>("is_allow_discount")
                        .HasColumnType("bit");

                    b.Property<bool>("is_inventory_product")
                        .HasColumnType("bit");

                    b.Property<bool>("is_open_product")
                        .HasColumnType("bit");

                    b.Property<string>("keyword")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("kitchen_group_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("kitchen_group_sort_order")
                        .HasColumnType("int");

                    b.Property<string>("photo")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("product_category_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("product_category_id")
                        .HasColumnType("int");

                    b.Property<string>("product_category_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("product_code")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("product_group_id")
                        .HasColumnType("int");

                    b.Property<string>("product_name_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("product_name_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("product_tax_value")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.ToTable("tbl_product");
                });

            modelBuilder.Entity("eAPIClient.Models.ProductModifierModel", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<int?>("ProductModifierModelid")
                        .HasColumnType("int");

                    b.Property<bool>("is_multiple_select")
                        .HasColumnType("bit");

                    b.Property<bool>("is_required")
                        .HasColumnType("bit");

                    b.Property<bool>("is_section")
                        .HasColumnType("bit");

                    b.Property<string>("modifier_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(19,8)");

                    b.Property<int?>("product_id")
                        .HasColumnType("int");

                    b.Property<string>("section_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.HasIndex("ProductModifierModelid");

                    b.HasIndex("product_id");

                    b.ToTable("tbl_product_modifier");
                });

            modelBuilder.Entity("eAPIClient.Models.ProductPortionModel", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<decimal>("cost")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("multiplier")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("portion_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("prices")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<int>("unit_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("product_id");

                    b.ToTable("tbl_product_portion");
                });

            modelBuilder.Entity("eAPIClient.Models.ProductPriceModel", b =>
                {
                    b.Property<Guid>("id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("prices")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("product_portion_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("tbl_product_price");
                });

            modelBuilder.Entity("eAPIClient.Models.ProductPrinterModel", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<string>("ip_address")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("port")
                        .HasColumnType("int");

                    b.Property<string>("printer_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("product_id");

                    b.ToTable("tbl_product_printer");
                });

            modelBuilder.Entity("eAPIClient.Models.SaleModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("balance")
                        .HasColumnType("decimal(19,8)");

                    b.Property<Guid>("business_branch_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("cashier_shift_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("cashier_shift_number")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("closed_by")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("closed_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("currency_exchange_rate_data")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<Guid?>("customer_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("discount_code")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("discount_note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("discountable_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("document_number")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("guest_cover")
                        .HasColumnType("int");

                    b.Property<bool?>("is_closed")
                        .HasColumnType("bit");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("is_paid")
                        .HasColumnType("bit");

                    b.Property<bool>("is_partially_paid")
                        .HasColumnType("bit");

                    b.Property<bool>("is_print_invoice")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("outlet_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("outlet_name_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("outlet_name_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("paid_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<double>("rounding_amount")
                        .HasColumnType("float");

                    b.Property<decimal>("sale_discount_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("sale_discount_type")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("sale_discount_value")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("sale_note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("sale_number")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("sale_product_discount_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("sale_type")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<Guid>("station_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("station_name_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("station_name_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<int>("status_id")
                        .HasColumnType("int");

                    b.Property<decimal>("sub_total")
                        .HasColumnType("decimal(19,8)");

                    b.Property<int?>("table_id")
                        .HasColumnType("int");

                    b.Property<string>("table_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("tax_1_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_1_rate")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_2_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_2_rate")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_3_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_3_rate")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_cost")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_credit")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_discount_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_net_sale")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_profit")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_quantity")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_tax_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<DateTime>("working_date")
                        .HasColumnType("date");

                    b.Property<Guid>("working_day_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("working_day_number")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.HasIndex("cashier_shift_id");

                    b.HasIndex("customer_id");

                    b.HasIndex("status_id");

                    b.HasIndex("working_day_id");

                    b.ToTable("tbl_sale");
                });

            modelBuilder.Entity("eAPIClient.Models.SaleOrderModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("created_by")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("tbl_sale_order");
                });

            modelBuilder.Entity("eAPIClient.Models.SalePaymentModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("change_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<double>("change_exchange_rate")
                        .HasColumnType("float");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("currency_id")
                        .HasColumnType("int");

                    b.Property<string>("currency_name_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("currency_name_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<double>("exchange_rate")
                        .HasColumnType("float");

                    b.Property<bool>("is_create_payment_in_sale_order")
                        .HasColumnType("bit");

                    b.Property<bool>("is_credit")
                        .HasColumnType("bit");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("outlet_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("payment_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<DateTime>("payment_date")
                        .HasColumnType("date");

                    b.Property<string>("payment_note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("payment_type_id")
                        .HasColumnType("int");

                    b.Property<string>("payment_type_name_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("payment_type_name_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("reference_number")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<Guid?>("sale_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("sale_id");

                    b.ToTable("tbl_sale_payment");
                });

            modelBuilder.Entity("eAPIClient.Models.SaleProductModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("cost")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("discount_code")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("discount_note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_allow_discount")
                        .HasColumnType("bit");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("is_free")
                        .HasColumnType("bit");

                    b.Property<bool>("is_inventory_product")
                        .HasColumnType("bit");

                    b.Property<string>("kitchen_group_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("kitchen_group_sort_order")
                        .HasColumnType("int");

                    b.Property<decimal>("multiplier")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("net_sale")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("portion_id")
                        .HasColumnType("int");

                    b.Property<string>("portion_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("product_category_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("product_category_id")
                        .HasColumnType("int");

                    b.Property<string>("product_category_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("product_code")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("product_group_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("product_group_id")
                        .HasColumnType("int");

                    b.Property<string>("product_group_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<string>("product_name_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("product_name_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("profit")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("quantity")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("reqular_price")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("sale_discount_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("sale_discount_value")
                        .HasColumnType("decimal(19,8)");

                    b.Property<Guid>("sale_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("sale_order_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("sale_product_discount_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("sale_product_discount_type")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("sale_product_discount_value")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("sale_product_modifier_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<Guid>("station_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("station_name_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("station_name_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<int>("status_id")
                        .HasColumnType("int");

                    b.Property<string>("status_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("sub_total")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_1_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_1_rate")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_1_taxable_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_2_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_2_rate")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_2_taxable_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_3_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_3_rate")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_3_taxable_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_discount_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_modifier_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_tax_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("unit")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.HasIndex("sale_id");

                    b.HasIndex("sale_order_id");

                    b.HasIndex("status_id");

                    b.ToTable("tbl_sale_product");
                });

            modelBuilder.Entity("eAPIClient.Models.SaleProductModifierModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("modifier_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(19,8)");

                    b.Property<Guid>("product_modifier_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("reqular_price")
                        .HasColumnType("decimal(19,8)");

                    b.Property<Guid>("sale_product_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("sale_product_id");

                    b.ToTable("tbl_sale_product_modifier");
                });

            modelBuilder.Entity("eAPIClient.Models.SaleProductPrintQueue", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("created_by")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_printed")
                        .HasColumnType("bit");

                    b.Property<string>("kitchen_group_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("kitchen_group_sort_order")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("modifier_items")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("outlet_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("portion_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("printer_ip_address")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("printer_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("printer_port")
                        .HasColumnType("int");

                    b.Property<string>("product_code")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("product_name_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("product_name_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("quantity")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("sale_number")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<Guid>("sale_product_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("sale_product_status_note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("station_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("unit")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.HasIndex("sale_product_id");

                    b.ToTable("tbl_sale_product_print_queue");
                });

            modelBuilder.Entity("eAPIClient.Models.SaleProductStatusModel", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<bool>("active_order")
                        .HasColumnType("bit");

                    b.Property<bool>("allow_append_quantity")
                        .HasColumnType("bit");

                    b.Property<bool>("allow_display_in_pos_order_list")
                        .HasColumnType("bit");

                    b.Property<bool>("allow_send_to_printer")
                        .HasColumnType("bit");

                    b.Property<bool>("allow_send_to_printer_when_change_table")
                        .HasColumnType("bit");

                    b.Property<bool>("allow_send_to_printer_when_merge_table")
                        .HasColumnType("bit");

                    b.Property<bool>("allow_void_or_cancel_order")
                        .HasColumnType("bit");

                    b.Property<string>("color")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("status_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("submited_status_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("tbl_sale_product_status");
                });

            modelBuilder.Entity("eAPIClient.Models.SaleStatusModel", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<string>("background")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("foreground")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_active_order")
                        .HasColumnType("bit");

                    b.Property<bool>("is_sale_lock")
                        .HasColumnType("bit");

                    b.Property<int>("priority")
                        .HasColumnType("int");

                    b.Property<string>("status_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.ToTable("tbl_sale_status");
                });

            modelBuilder.Entity("eAPIClient.Models.ShiftModel", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<string>("shift_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("sort_order")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("tbl_shift");
                });

            modelBuilder.Entity("eAPIClient.Models.WorkingDayModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("business_branch_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("close_note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("closed_by")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("closed_date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("closed_station_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_closed")
                        .HasColumnType("bit");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("open_note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<Guid>("opened_station_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("outlet_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("working_date")
                        .HasColumnType("date");

                    b.Property<string>("working_day_number")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.ToTable("tbl_working_day");
                });

            modelBuilder.Entity("eAPIClient.Models.CashierShiftModel", b =>
                {
                    b.HasOne("eAPIClient.Models.WorkingDayModel", "working_day")
                        .WithMany("cashier_shifts")
                        .HasForeignKey("working_day_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("working_day");
                });

            modelBuilder.Entity("eAPIClient.Models.CustomerModel", b =>
                {
                    b.HasOne("eAPIClient.Models.CustomerGroupModel", "customer_group")
                        .WithMany("customers")
                        .HasForeignKey("customer_group_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer_group");
                });

            modelBuilder.Entity("eAPIClient.Models.ProductMenuModel", b =>
                {
                    b.HasOne("eAPIClient.Models.MenuModel", "menu")
                        .WithMany("product_menus")
                        .HasForeignKey("menu_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eAPIClient.Models.ProductModel", "product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("menu");

                    b.Navigation("product");
                });

            modelBuilder.Entity("eAPIClient.Models.ProductModifierModel", b =>
                {
                    b.HasOne("eAPIClient.Models.ProductModifierModel", null)
                        .WithMany("children")
                        .HasForeignKey("ProductModifierModelid");

                    b.HasOne("eAPIClient.Models.ProductModel", "product")
                        .WithMany("product_modifiers")
                        .HasForeignKey("product_id");

                    b.Navigation("product");
                });

            modelBuilder.Entity("eAPIClient.Models.ProductPortionModel", b =>
                {
                    b.HasOne("eAPIClient.Models.ProductModel", "product")
                        .WithMany("product_portions")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");
                });

            modelBuilder.Entity("eAPIClient.Models.ProductPrinterModel", b =>
                {
                    b.HasOne("eAPIClient.Models.ProductModel", "product")
                        .WithMany("product_printers")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");
                });

            modelBuilder.Entity("eAPIClient.Models.SaleModel", b =>
                {
                    b.HasOne("eAPIClient.Models.CashierShiftModel", "cashier_shift")
                        .WithMany()
                        .HasForeignKey("cashier_shift_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eAPIClient.Models.CustomerModel", "customer")
                        .WithMany()
                        .HasForeignKey("customer_id");

                    b.HasOne("eAPIClient.Models.SaleStatusModel", "sale_status")
                        .WithMany()
                        .HasForeignKey("status_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eAPIClient.Models.WorkingDayModel", "working_day")
                        .WithMany()
                        .HasForeignKey("working_day_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cashier_shift");

                    b.Navigation("customer");

                    b.Navigation("sale_status");

                    b.Navigation("working_day");
                });

            modelBuilder.Entity("eAPIClient.Models.SalePaymentModel", b =>
                {
                    b.HasOne("eAPIClient.Models.SaleModel", "sale")
                        .WithMany("sale_payments")
                        .HasForeignKey("sale_id");

                    b.Navigation("sale");
                });

            modelBuilder.Entity("eAPIClient.Models.SaleProductModel", b =>
                {
                    b.HasOne("eAPIClient.Models.SaleModel", "sale")
                        .WithMany("sale_products")
                        .HasForeignKey("sale_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eAPIClient.Models.SaleOrderModel", "sale_order")
                        .WithMany()
                        .HasForeignKey("sale_order_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eAPIClient.Models.SaleProductStatusModel", "sale_product_status")
                        .WithMany()
                        .HasForeignKey("status_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("sale");

                    b.Navigation("sale_order");

                    b.Navigation("sale_product_status");
                });

            modelBuilder.Entity("eAPIClient.Models.SaleProductModifierModel", b =>
                {
                    b.HasOne("eAPIClient.Models.SaleProductModel", "sale_product")
                        .WithMany("sale_product_modifiers")
                        .HasForeignKey("sale_product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("sale_product");
                });

            modelBuilder.Entity("eAPIClient.Models.SaleProductPrintQueue", b =>
                {
                    b.HasOne("eAPIClient.Models.SaleProductModel", "sale_product")
                        .WithMany("sale_product_print_queues")
                        .HasForeignKey("sale_product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("sale_product");
                });

            modelBuilder.Entity("eAPIClient.Models.CustomerGroupModel", b =>
                {
                    b.Navigation("customers");
                });

            modelBuilder.Entity("eAPIClient.Models.MenuModel", b =>
                {
                    b.Navigation("product_menus");
                });

            modelBuilder.Entity("eAPIClient.Models.ProductModel", b =>
                {
                    b.Navigation("product_modifiers");

                    b.Navigation("product_portions");

                    b.Navigation("product_printers");
                });

            modelBuilder.Entity("eAPIClient.Models.ProductModifierModel", b =>
                {
                    b.Navigation("children");
                });

            modelBuilder.Entity("eAPIClient.Models.SaleModel", b =>
                {
                    b.Navigation("sale_payments");

                    b.Navigation("sale_products");
                });

            modelBuilder.Entity("eAPIClient.Models.SaleProductModel", b =>
                {
                    b.Navigation("sale_product_modifiers");

                    b.Navigation("sale_product_print_queues");
                });

            modelBuilder.Entity("eAPIClient.Models.WorkingDayModel", b =>
                {
                    b.Navigation("cashier_shifts");
                });
#pragma warning restore 612, 618
        }
    }
}
