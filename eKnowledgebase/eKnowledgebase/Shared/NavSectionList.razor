@inject NavigationManager nav;
@inject eKnowledgebase.Services.eKnowledgebaseService s;

    @if (is_loading)
    {
        <div>loading...</div>
    }
    else
    {
            @foreach (var d in models.OrderBy(r => r.sort_order))
            {
                <MudListItem Icon="@d.icon" @onclick="@(()=>OnItem_Click(d))">
                    @state.GetTitleText(d)
                </MudListItem>

            }
      

    }


@code {
    [CascadingParameter]
    public AppState state { get; set; }
    [Parameter]
    public Guid? id { get; set; }
    List<eKnowledgebaseModel> models = new();

    [Parameter]
    public EventCallback<eKnowledgebaseModel> OnItemClick { get; set; }

    bool is_loading;

    [Parameter]
    public string url_name { get; set; } = "section";

    protected override async Task OnInitializedAsync()
    {
        is_loading = true;
        models = await s.GetDataByParentID(id);
        is_loading = false;
    }

    async Task OnItem_Click(eKnowledgebaseModel? m)
    {
        nav.NavigateTo($"{url_name}/{m?.id}");
        await OnItemClick.InvokeAsync(m);
    }

}