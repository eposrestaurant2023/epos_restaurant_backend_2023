// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eAPI;

namespace eAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eModels.AttachFilesModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("customer_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("file_extension")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("file_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<long>("file_size")
                        .HasColumnType("bigint");

                    b.Property<string>("file_title")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("file_type")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("is_document_file")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("modifier_group_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("modifier_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int?>("product_id")
                        .HasColumnType("int");

                    b.Property<int?>("production_id")
                        .HasColumnType("int");

                    b.Property<int?>("purchase_order_id")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<int?>("stock_take_id")
                        .HasColumnType("int");

                    b.Property<int?>("stock_transfer_id")
                        .HasColumnType("int");

                    b.Property<int?>("vendor_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("customer_id");

                    b.HasIndex("modifier_group_id");

                    b.HasIndex("modifier_id");

                    b.HasIndex("product_id");

                    b.HasIndex("production_id");

                    b.HasIndex("purchase_order_id");

                    b.HasIndex("stock_take_id");

                    b.HasIndex("stock_transfer_id");

                    b.HasIndex("vendor_id");

                    b.ToTable("tbl_attach_files");
                });

            modelBuilder.Entity("eModels.BusinessBranchCurrencyModel", b =>
                {
                    b.Property<Guid>("business_branch_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("currency_id")
                        .HasColumnType("int");

                    b.Property<double>("change_exchange_rate")
                        .HasColumnType("float");

                    b.Property<double>("change_exchange_rate_input")
                        .HasColumnType("float");

                    b.Property<double>("exchange_rate")
                        .HasColumnType("float");

                    b.Property<double>("exchange_rate_input")
                        .HasColumnType("float");

                    b.HasKey("business_branch_id", "currency_id");

                    b.HasIndex("currency_id");

                    b.ToTable("tbl_business_branch_currency");
                });

            modelBuilder.Entity("eModels.BusinessBranchModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("address_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("address_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("business_branch_name_en")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("business_branch_name_kh")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("color")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("contact_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("logo")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("phone_1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("phone_2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("website")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.ToTable("tbl_business_branch");
                });

            modelBuilder.Entity("eModels.BusinessBranchPaymentTypeModel", b =>
                {
                    b.Property<int>("payment_type_id")
                        .HasColumnType("int");

                    b.Property<Guid>("business_branch_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("payment_type_id", "business_branch_id");

                    b.HasIndex("business_branch_id");

                    b.ToTable("tbl_business_branch_payment_type");
                });

            modelBuilder.Entity("eModels.BusinessBranchPriceRule", b =>
                {
                    b.Property<Guid>("business_branch_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("price_rule_id")
                        .HasColumnType("int");

                    b.Property<bool>("is_change_status")
                        .HasColumnType("bit");

                    b.Property<bool>("is_default")
                        .HasColumnType("bit");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("is_loading")
                        .HasColumnType("bit");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("business_branch_id", "price_rule_id");

                    b.HasIndex("price_rule_id");

                    b.ToTable("tbl_business_branch_price_rule");
                });

            modelBuilder.Entity("eModels.BusinessBranchProductPriceModel", b =>
                {
                    b.Property<Guid>("id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("business_branch_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("prices")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("product_portion_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("tbl_business_branch_product_price");
                });

            modelBuilder.Entity("eModels.BusinessBranchRoleModel", b =>
                {
                    b.Property<int>("role_id")
                        .HasColumnType("int");

                    b.Property<Guid>("business_branch_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("is_delete")
                        .HasColumnType("bit");

                    b.HasKey("role_id", "business_branch_id");

                    b.HasIndex("business_branch_id");

                    b.ToTable("tbl_business_branch_role");
                });

            modelBuilder.Entity("eModels.BusinessBranchSettingModel", b =>
                {
                    b.Property<int>("setting_id")
                        .HasColumnType("int");

                    b.Property<Guid>("business_branch_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("setting_value")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("setting_id", "business_branch_id");

                    b.HasIndex("business_branch_id");

                    b.ToTable("tbl_business_branch_setting");
                });

            modelBuilder.Entity("eModels.BusinessBranchSystemFeatureModel", b =>
                {
                    b.Property<Guid>("business_branch_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("system_feature_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("business_branch_id", "system_feature_id");

                    b.HasIndex("system_feature_id");

                    b.ToTable("tbl_business_branch_system_feature");
                });

            modelBuilder.Entity("eModels.BusinessInformationModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("color")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("company_logo")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("company_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("company_name_kh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("contact_email")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("contact_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("contact_office_number")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("contact_phone_number")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("mobile_phone")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("office_phone")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.ToTable("tbl_business_information");
                });

            modelBuilder.Entity("eModels.CashDrawerAmountModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("base_currency_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("base_currency_format")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<Guid>("business_branch_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("cash_deposit_to")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<Guid>("cash_drawer_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("cashier_shift_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("currency_id")
                        .HasColumnType("int");

                    b.Property<string>("currency_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<double>("exchange_rate")
                        .HasColumnType("float");

                    b.Property<string>("format")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("multiplier_value")
                        .HasColumnType("int");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<Guid>("outlet_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("transaction_type_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<Guid>("working_day_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("working_day_id");

                    b.ToTable("tbl_cash_drawer_amount");
                });

            modelBuilder.Entity("eModels.CashierShiftModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("cash_drawer_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("cash_drawer_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("cashier_shift_number")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal?>("close_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("close_note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("closed_by")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("closed_date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("closed_station_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("closed_station_name_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("closed_station_name_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_closed")
                        .HasColumnType("bit");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("open_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("open_note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<Guid>("opened_station_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("opened_station_name_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("opened_station_name_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<Guid>("outlet_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("outlet_name_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("outlet_name_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("shift_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("working_date")
                        .HasColumnType("date");

                    b.Property<Guid>("working_day_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("closed_station_id");

                    b.HasIndex("opened_station_id");

                    b.HasIndex("outlet_id");

                    b.HasIndex("working_day_id");

                    b.ToTable("tbl_cashier_shift");
                });

            modelBuilder.Entity("eModels.CategoryNoteModel", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<string>("category_note_name_en")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("category_note_name_kh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_multiple_select")
                        .HasColumnType("bit");

                    b.Property<int>("sort_order")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("tbl_category_note");
                });

            modelBuilder.Entity("eModels.ConfigDataModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("business_branch_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("config_type")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("data")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.ToTable("tbl_config_data");
                });

            modelBuilder.Entity("eModels.CountryModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("country_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("country_note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.ToTable("tbl_country");
                });

            modelBuilder.Entity("eModels.CurrencyModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("currency_format")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("currency_name_en")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("currency_name_kh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<double>("default_change_exchange_rate")
                        .HasColumnType("float");

                    b.Property<double>("default_exchange_rate")
                        .HasColumnType("float");

                    b.Property<bool>("is_base_exchange_currency")
                        .HasColumnType("bit");

                    b.Property<bool>("is_main")
                        .HasColumnType("bit");

                    b.Property<bool>("is_prefix_symbol")
                        .HasColumnType("bit");

                    b.Property<bool>("is_show_in_bill")
                        .HasColumnType("bit");

                    b.Property<string>("report_format")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("sort")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("symbol")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.ToTable("tbl_currency");
                });

            modelBuilder.Entity("eModels.CustomerBusinessBranchModel", b =>
                {
                    b.Property<Guid>("customer_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("business_branch_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("customer_id", "business_branch_id");

                    b.HasIndex("business_branch_id");

                    b.ToTable("tbl_customer_business_branch");
                });

            modelBuilder.Entity("eModels.CustomerGroupModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("customer_group_name_en")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("customer_group_name_kh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("tbl_customer_group");
                });

            modelBuilder.Entity("eModels.CustomerModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("customer_code")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("customer_group_id")
                        .HasColumnType("int");

                    b.Property<string>("customer_name_en")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("customer_name_kh")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("date_of_birth")
                        .HasColumnType("date");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("gender")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("nationality")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("phone_1")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("phone_2")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("photo")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<decimal>("total_receivable")
                        .HasColumnType("decimal(19,8)");

                    b.HasKey("id");

                    b.HasIndex("customer_group_id");

                    b.ToTable("tbl_customer");
                });

            modelBuilder.Entity("eModels.DefaultStockLocationProductModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("business_branch_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<Guid>("station_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("stock_location_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("business_branch_id");

                    b.HasIndex("product_id");

                    b.HasIndex("station_id");

                    b.HasIndex("stock_location_id");

                    b.ToTable("tbl_default_stock_location_product");
                });

            modelBuilder.Entity("eModels.DiscountCodeModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("business_branch_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("discount_code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("discount_type")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("discount_value")
                        .HasColumnType("decimal(19,8)");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("business_branch_id");

                    b.ToTable("tbl_discount_code");
                });

            modelBuilder.Entity("eModels.DocumentNumberModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("counter")
                        .HasColumnType("int");

                    b.Property<string>("counter_digit")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("document_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("format")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("prefix")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.ToTable("tbl_document_number");
                });

            modelBuilder.Entity("eModels.HistoryModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PurchaseOrderPaymentModelid")
                        .HasColumnType("int");

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("customer_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("document_number")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("modifier_group_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("modifier_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("module")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("old_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<Guid?>("outlet_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("product_id")
                        .HasColumnType("int");

                    b.Property<int?>("production_id")
                        .HasColumnType("int");

                    b.Property<int?>("purchase_order_id")
                        .HasColumnType("int");

                    b.Property<Guid?>("sale_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("sale_payment_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<int?>("stock_take_id")
                        .HasColumnType("int");

                    b.Property<int?>("stock_transfer_id")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("transaction_date")
                        .HasColumnType("date");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int?>("user_id")
                        .HasColumnType("int");

                    b.Property<int?>("vendor_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("PurchaseOrderPaymentModelid");

                    b.HasIndex("customer_id");

                    b.HasIndex("modifier_group_id");

                    b.HasIndex("modifier_id");

                    b.HasIndex("product_id");

                    b.HasIndex("production_id");

                    b.HasIndex("purchase_order_id");

                    b.HasIndex("sale_id");

                    b.HasIndex("sale_payment_id");

                    b.HasIndex("stock_take_id");

                    b.HasIndex("stock_transfer_id");

                    b.HasIndex("user_id");

                    b.HasIndex("vendor_id");

                    b.ToTable("tbl_history");
                });

            modelBuilder.Entity("eModels.InventoryTransactionModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("base_unit")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("created_by")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("inventory_transaction_type_id")
                        .HasColumnType("int");

                    b.Property<decimal>("multiplier")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("old_quantity")
                        .HasColumnType("decimal(19,8)");

                    b.Property<int?>("portion_id")
                        .HasColumnType("int");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<int?>("purchase_order_id")
                        .HasColumnType("int");

                    b.Property<int?>("purchase_order_product_id")
                        .HasColumnType("int");

                    b.Property<decimal>("quantity")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("quantity_on_hand")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("reference_number")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<Guid?>("sale_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("stock_location_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("stock_take_id")
                        .HasColumnType("int");

                    b.Property<int?>("stock_take_product_id")
                        .HasColumnType("int");

                    b.Property<int?>("stock_transfer_id")
                        .HasColumnType("int");

                    b.Property<int?>("stock_transfer_product_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("transaction_date")
                        .HasColumnType("date");

                    b.Property<string>("unit")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.HasIndex("inventory_transaction_type_id");

                    b.HasIndex("product_id");

                    b.HasIndex("stock_location_id");

                    b.ToTable("tbl_inventory_transaction");
                });

            modelBuilder.Entity("eModels.InventoryTransactionTypeModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("inventory_transaction_type_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.ToTable("tbl_inventory_transaction_type");
                });

            modelBuilder.Entity("eModels.KitchenGroupModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("kitchen_group_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("sort_order")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("tbl_kitchen_group");
                });

            modelBuilder.Entity("eModels.MenuModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("background_color")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<Guid>("business_branch_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("is_shortcut_menu")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("menu_name_en")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("menu_name_kh")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("menu_path")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int?>("parent_id")
                        .HasColumnType("int");

                    b.Property<string>("photo")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int?>("root_menu_id")
                        .HasColumnType("int");

                    b.Property<int>("sort_order")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("text_color")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.HasIndex("business_branch_id");

                    b.HasIndex("parent_id");

                    b.ToTable("tbl_menu");
                });

            modelBuilder.Entity("eModels.ModifierGroupItemModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("is_multiple_select")
                        .HasColumnType("bit");

                    b.Property<bool>("is_required")
                        .HasColumnType("bit");

                    b.Property<bool>("is_section")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("modifier_group_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("modifier_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("parent_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("section_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("sort_order")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("modifier_group_id");

                    b.HasIndex("modifier_id");

                    b.HasIndex("parent_id");

                    b.ToTable("tbl_modifier_group_item");
                });

            modelBuilder.Entity("eModels.ModifierGroupModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("modifier_group_name_en")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("modifier_group_name_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("tbl_modifier_group");
                });

            modelBuilder.Entity("eModels.ModifierGroupProductCategoryModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("modifer_group_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("product_category_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("modifer_group_id");

                    b.HasIndex("product_category_id");

                    b.ToTable("tbl_modifier_group_product_category");
                });

            modelBuilder.Entity("eModels.ModifierIngredientModel", b =>
                {
                    b.Property<Guid>("modifier_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ingredient_id")
                        .HasColumnType("int");

                    b.Property<decimal>("cost")
                        .HasColumnType("decimal(19,8)");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("quantity")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_cost")
                        .HasColumnType("decimal(19,8)");

                    b.Property<int>("unit_id")
                        .HasColumnType("int");

                    b.HasKey("modifier_id", "ingredient_id");

                    b.HasIndex("ingredient_id");

                    b.HasIndex("unit_id");

                    b.ToTable("tbl_modifier_ingredient");
                });

            modelBuilder.Entity("eModels.ModifierModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("modifier_group_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("modifier_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("modifier_group_id");

                    b.ToTable("tbl_modifier");
                });

            modelBuilder.Entity("eModels.ModuleViewModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("default_filters")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("default_order_by")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("default_order_by_type")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_default")
                        .HasColumnType("bit");

                    b.Property<string>("module_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("permission_option")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("sort_order")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.ToTable("tbl_module_view");
                });

            modelBuilder.Entity("eModels.NoteModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("business_branch_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("category_note_id")
                        .HasColumnType("int");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("note")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("business_branch_id");

                    b.HasIndex("category_note_id");

                    b.ToTable("tbl_note");
                });

            modelBuilder.Entity("eModels.NumberModel", b =>
                {
                    b.Property<int>("number")
                        .HasColumnType("int");

                    b.ToTable("tbl_number");
                });

            modelBuilder.Entity("eModels.OutletModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("business_branch_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("outlet_name_en")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("outlet_name_kh")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("business_branch_id");

                    b.ToTable("tbl_outlet");
                });

            modelBuilder.Entity("eModels.OutletStationModel", b =>
                {
                    b.Property<Guid>("station_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("outlet_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("station_id", "outlet_id");

                    b.ToTable("tbl_outlet_station");
                });

            modelBuilder.Entity("eModels.PaymentTypeModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("currency_id")
                        .HasColumnType("int");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_build_in")
                        .HasColumnType("bit");

                    b.Property<bool>("is_credit")
                        .HasColumnType("bit");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("is_foc")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("payment_type_group")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("payment_type_name_en")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("payment_type_name_kh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("photo")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("sort_order")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("currency_id");

                    b.ToTable("tbl_payment_type");
                });

            modelBuilder.Entity("eModels.PermissionOptionModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("icon")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_front_end")
                        .HasColumnType("bit");

                    b.Property<bool>("is_match_all")
                        .HasColumnType("bit");

                    b.Property<bool>("is_public_report")
                        .HasColumnType("bit");

                    b.Property<bool>("is_report")
                        .HasColumnType("bit");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("option_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int?>("parent_id")
                        .HasColumnType("int");

                    b.Property<string>("report_title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("report_title_kh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("roles")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("show_in_menu")
                        .HasColumnType("bit");

                    b.Property<int>("sort_order")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("url")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.HasIndex("parent_id");

                    b.ToTable("tbl_permission_option");
                });

            modelBuilder.Entity("eModels.PermissionOptionRoleModel", b =>
                {
                    b.Property<int>("role_id")
                        .HasColumnType("int");

                    b.Property<int>("permission_option_id")
                        .HasColumnType("int");

                    b.Property<bool>("is_delete")
                        .HasColumnType("bit");

                    b.HasKey("role_id", "permission_option_id");

                    b.HasIndex("permission_option_id");

                    b.ToTable("tbl_permission_option_role");
                });

            modelBuilder.Entity("eModels.PredefineDiscountCodeModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("discount_code")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("discount_value")
                        .HasColumnType("decimal(19,8)");

                    b.Property<int>("sort_order")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("tbl_predefine_discount_code");
                });

            modelBuilder.Entity("eModels.PredefineNoteModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("category_note_id")
                        .HasColumnType("int");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("sort_order")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("tbl_predefine_note");
                });

            modelBuilder.Entity("eModels.PredefinePaymentAmountModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("payment_type_id")
                        .HasColumnType("int");

                    b.Property<decimal>("predefine_value")
                        .HasColumnType("decimal(19,8)");

                    b.Property<int>("sort_order")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("tbl_predefine_payment_amount");
                });

            modelBuilder.Entity("eModels.PriceRuleModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_build_in")
                        .HasColumnType("bit");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("price_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("tbl_price_rule");
                });

            modelBuilder.Entity("eModels.PrinterModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("business_branch_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("group_item_type_id")
                        .HasColumnType("int");

                    b.Property<string>("ip_address")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("port")
                        .HasColumnType("int");

                    b.Property<string>("printer_name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("business_branch_id");

                    b.ToTable("tbl_printer");
                });

            modelBuilder.Entity("eModels.ProductCategoryModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("has_ingredient_product")
                        .HasColumnType("bit");

                    b.Property<bool>("has_menu_product")
                        .HasColumnType("bit");

                    b.Property<bool>("is_defualt")
                        .HasColumnType("bit");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("is_deleted_group")
                        .HasColumnType("bit");

                    b.Property<bool>("is_ingredient_category")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("product_category_en")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("product_category_kh")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("product_group_id")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<bool>("status_group")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("product_group_id");

                    b.ToTable("tbl_product_category");
                });

            modelBuilder.Entity("eModels.ProductGroupModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_built_in")
                        .HasColumnType("bit");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("product_group_code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("product_group_en")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("product_group_kh")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("sort_order")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("tbl_product_group");
                });

            modelBuilder.Entity("eModels.ProductIngredientModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("cost")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ingredient_id")
                        .HasColumnType("int");

                    b.Property<int?>("ingredient_portion_id")
                        .HasColumnType("int");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("product_portion_id")
                        .HasColumnType("int");

                    b.Property<decimal>("quantity")
                        .HasColumnType("decimal(19,8)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<decimal>("total_cost")
                        .HasColumnType("decimal(19,8)");

                    b.Property<int>("unit_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("ingredient_id");

                    b.HasIndex("product_portion_id");

                    b.HasIndex("unit_id");

                    b.ToTable("tbl_product_ingredient");
                });

            modelBuilder.Entity("eModels.ProductIngredientRelatedModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ingredient_id")
                        .HasColumnType("int");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("ingredient_id");

                    b.HasIndex("product_id");

                    b.ToTable("tbl_product_ingredient_related");
                });

            modelBuilder.Entity("eModels.ProductMenuModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<int>("menu_id")
                        .HasColumnType("int");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("menu_id");

                    b.HasIndex("product_id");

                    b.ToTable("tbl_product_menu");
                });

            modelBuilder.Entity("eModels.ProductModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("cost")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_allow_discount")
                        .HasColumnType("bit");

                    b.Property<bool>("is_auto_generate_code")
                        .HasColumnType("bit");

                    b.Property<bool>("is_composite_product")
                        .HasColumnType("bit");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("is_ingredient_product")
                        .HasColumnType("bit");

                    b.Property<bool>("is_inventory_product")
                        .HasColumnType("bit");

                    b.Property<bool>("is_low_inventory")
                        .HasColumnType("bit");

                    b.Property<bool>("is_menu_product")
                        .HasColumnType("bit");

                    b.Property<bool>("is_open_product")
                        .HasColumnType("bit");

                    b.Property<bool>("is_out_of_stock")
                        .HasColumnType("bit");

                    b.Property<bool>("is_over_stock")
                        .HasColumnType("bit");

                    b.Property<bool>("is_product_has_inventory_transaction")
                        .HasColumnType("bit");

                    b.Property<bool>("is_production_product")
                        .HasColumnType("bit");

                    b.Property<int?>("kitchen_group_id")
                        .HasColumnType("int");

                    b.Property<string>("kitchen_group_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("kitchen_group_sort_order")
                        .HasColumnType("int");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("max_price")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("min_price")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("photo")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("product_category_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("product_category_id")
                        .HasColumnType("int");

                    b.Property<string>("product_category_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("product_code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("product_group_id")
                        .HasColumnType("int");

                    b.Property<string>("product_name_en")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("product_name_kh")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("product_tax_value")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("quantity")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("revenue_group_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<int>("unit_id")
                        .HasColumnType("int");

                    b.Property<int?>("vendor_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("kitchen_group_id");

                    b.HasIndex("product_category_id");

                    b.HasIndex("unit_id");

                    b.HasIndex("vendor_id");

                    b.ToTable("tbl_product");
                });

            modelBuilder.Entity("eModels.ProductModifierModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("is_multiple_select")
                        .HasColumnType("bit");

                    b.Property<bool>("is_required")
                        .HasColumnType("bit");

                    b.Property<bool>("is_section")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("modifier_group_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("modifier_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("modifier_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<Guid?>("parent_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(19,8)");

                    b.Property<int?>("product_id")
                        .HasColumnType("int");

                    b.Property<string>("section_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("sort_order")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("modifier_id");

                    b.HasIndex("parent_id");

                    b.HasIndex("product_id");

                    b.ToTable("tbl_product_modifier");
                });

            modelBuilder.Entity("eModels.ProductPortionModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("cost")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("multiplier")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("portion_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<int>("unit_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("product_id");

                    b.HasIndex("unit_id");

                    b.ToTable("tbl_product_portion");
                });

            modelBuilder.Entity("eModels.ProductPriceModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(19,8)");

                    b.Property<int>("price_rule_id")
                        .HasColumnType("int");

                    b.Property<int>("product_portion_id")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("price_rule_id");

                    b.HasIndex("product_portion_id");

                    b.ToTable("tbl_product_price");
                });

            modelBuilder.Entity("eModels.ProductPrinterModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("group_item_type_id")
                        .HasColumnType("int");

                    b.Property<string>("ip_address")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<int>("port")
                        .HasColumnType("int");

                    b.Property<int>("printer_id")
                        .HasColumnType("int");

                    b.Property<string>("printer_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("printer_id");

                    b.HasIndex("product_id");

                    b.ToTable("tbl_product_printer");
                });

            modelBuilder.Entity("eModels.ProductTaxModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("business_branch_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<decimal>("tax_1_rate")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_2_rate")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_3_rate")
                        .HasColumnType("decimal(19,8)");

                    b.HasKey("id");

                    b.HasIndex("business_branch_id");

                    b.HasIndex("product_id");

                    b.ToTable("tbl_product_tax");
                });

            modelBuilder.Entity("eModels.ProductionModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("business_branch_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("is_fulfilled")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("production_code")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("production_date")
                        .HasColumnType("date");

                    b.Property<string>("reference_number")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<Guid>("stock_location_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("term_conditions")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("total_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_quantity")
                        .HasColumnType("decimal(19,8)");

                    b.HasKey("id");

                    b.HasIndex("business_branch_id");

                    b.HasIndex("stock_location_id");

                    b.ToTable("tbl_production");
                });

            modelBuilder.Entity("eModels.ProductionProductModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("cost")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("grand_total")
                        .HasColumnType("decimal(19,8)");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("is_fulfilled")
                        .HasColumnType("bit");

                    b.Property<bool>("is_inventory_product")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("multiplier")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<int>("production_id")
                        .HasColumnType("int");

                    b.Property<decimal>("quantity")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("regular_cost")
                        .HasColumnType("decimal(19,8)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<decimal>("sub_total")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("unit")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.HasIndex("product_id");

                    b.HasIndex("production_id");

                    b.ToTable("tbl_production_product");
                });

            modelBuilder.Entity("eModels.ProvinceModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("province_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.ToTable("tbl_province");
                });

            modelBuilder.Entity("eModels.PurchaseOrderModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("balance")
                        .HasColumnType("decimal(19,8)");

                    b.Property<Guid>("business_branch_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("discount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("discount_type")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int?>("discount_user_id")
                        .HasColumnType("int");

                    b.Property<decimal>("discountable_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("document_number")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("due_date")
                        .HasColumnType("date");

                    b.Property<decimal>("grand_total_discount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("is_fulfilled")
                        .HasColumnType("bit");

                    b.Property<bool>("is_over_due")
                        .HasColumnType("bit");

                    b.Property<bool>("is_paid")
                        .HasColumnType("bit");

                    b.Property<bool>("is_partially_paid")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("paid_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("po_product_discount_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<DateTime>("purchase_date")
                        .HasColumnType("date");

                    b.Property<string>("purchase_order_note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("reference_number")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<Guid>("stock_location_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("sub_total")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("term_conditions")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("total_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_discount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_quantity")
                        .HasColumnType("decimal(19,8)");

                    b.Property<int>("vendor_id")
                        .HasColumnType("int");

                    b.Property<string>("vendor_note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.HasIndex("business_branch_id");

                    b.HasIndex("discount_user_id");

                    b.HasIndex("stock_location_id");

                    b.HasIndex("vendor_id");

                    b.ToTable("tbl_purchase_order");
                });

            modelBuilder.Entity("eModels.PurchaseOrderPaymentModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("currency_format")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("currency_id")
                        .HasColumnType("int");

                    b.Property<string>("currency_name_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("currency_name_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<double>("exchange_rate")
                        .HasColumnType("float");

                    b.Property<bool>("is_create_payment_in_puchase_order")
                        .HasColumnType("bit");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("payment_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<DateTime>("payment_date")
                        .HasColumnType("date");

                    b.Property<string>("payment_note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("payment_type_id")
                        .HasColumnType("int");

                    b.Property<int>("purchase_order_id")
                        .HasColumnType("int");

                    b.Property<string>("reference_number")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("payment_type_id");

                    b.HasIndex("purchase_order_id");

                    b.ToTable("tbl_purchase_order_payment");
                });

            modelBuilder.Entity("eModels.PurchaseOrderProductModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("cost")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("discount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("discount_type")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("grand_total")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("invoice_discount_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<bool>("is_allow_discount")
                        .HasColumnType("bit");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("is_fulfilled")
                        .HasColumnType("bit");

                    b.Property<bool>("is_inventory_product")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("multiplier")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<int>("purchase_order_id")
                        .HasColumnType("int");

                    b.Property<decimal>("quantity")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("regular_cost")
                        .HasColumnType("decimal(19,8)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<decimal>("sub_total")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_discount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("unit")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.HasIndex("product_id");

                    b.HasIndex("purchase_order_id");

                    b.ToTable("tbl_purchase_order_product");
                });

            modelBuilder.Entity("eModels.RevenueGroupModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("revenue_group_name_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("revenue_group_name_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("sort_order")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("tbl_revenue_group");
                });

            modelBuilder.Entity("eModels.RoleModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_buildin")
                        .HasColumnType("bit");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("role_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("tbl_role");
                });

            modelBuilder.Entity("eModels.SaleModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("balance")
                        .HasColumnType("decimal(19,8)");

                    b.Property<Guid>("business_branch_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("cash_drawer_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("cashier_shift_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("cashier_shift_number")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("closed_by")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<Guid?>("closed_cash_drawer_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("closed_cashier_shift_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("closed_date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("closed_station_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("closed_working_day_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("currency_exchange_rate_data")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("customer_code")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<Guid?>("customer_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("customer_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("discount_code")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("discount_note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("discountable_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("document_number")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("guest_cover")
                        .HasColumnType("int");

                    b.Property<bool?>("is_closed")
                        .HasColumnType("bit");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("is_foc")
                        .HasColumnType("bit");

                    b.Property<bool>("is_paid")
                        .HasColumnType("bit");

                    b.Property<bool>("is_partially_paid")
                        .HasColumnType("bit");

                    b.Property<bool>("is_print_invoice")
                        .HasColumnType("bit");

                    b.Property<bool>("is_sale_use_tax_1")
                        .HasColumnType("bit");

                    b.Property<bool>("is_sale_use_tax_2")
                        .HasColumnType("bit");

                    b.Property<bool>("is_sale_use_tax_3")
                        .HasColumnType("bit");

                    b.Property<bool>("is_synced")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("outlet_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("outlet_name_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("outlet_name_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("paid_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("phone_number")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<double>("rounding_amount")
                        .HasColumnType("float");

                    b.Property<decimal>("sale_discount_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("sale_discount_type")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("sale_discount_value")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("sale_note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("sale_number")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("sale_product_discount_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("sale_type")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("shift_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<Guid>("station_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("station_name_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("station_name_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<int>("status_id")
                        .HasColumnType("int");

                    b.Property<decimal>("sub_total")
                        .HasColumnType("decimal(19,8)");

                    b.Property<int?>("table_id")
                        .HasColumnType("int");

                    b.Property<string>("table_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("tax_1_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_1_rate")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_2_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_2_rate")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_3_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_3_rate")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_cost")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_credit")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_discount_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_net_sale")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_profit")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_quantity")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_tax_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<DateTime>("working_date")
                        .HasColumnType("date");

                    b.Property<Guid>("working_day_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("working_day_number")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.HasIndex("business_branch_id");

                    b.HasIndex("customer_id");

                    b.HasIndex("outlet_id");

                    b.HasIndex("status_id");

                    b.ToTable("tbl_sale");
                });

            modelBuilder.Entity("eModels.SalePaymentModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("change_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<double>("change_exchange_rate")
                        .HasColumnType("float");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("currency_format")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("currency_id")
                        .HasColumnType("int");

                    b.Property<string>("currency_name_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("currency_name_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<double>("exchange_rate")
                        .HasColumnType("float");

                    b.Property<bool>("is_create_payment_in_sale_order")
                        .HasColumnType("bit");

                    b.Property<bool>("is_credit")
                        .HasColumnType("bit");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("is_payment_from_pos")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("outlet_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("payment_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<DateTime>("payment_date")
                        .HasColumnType("date");

                    b.Property<string>("payment_note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("payment_type_id")
                        .HasColumnType("int");

                    b.Property<string>("payment_type_name_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("payment_type_name_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("reference_number")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<Guid?>("sale_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("payment_type_id");

                    b.HasIndex("sale_id");

                    b.ToTable("tbl_sale_payment");
                });

            modelBuilder.Entity("eModels.SaleProductModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("cost")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("discount_code")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("discount_note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_allow_discount")
                        .HasColumnType("bit");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("is_free")
                        .HasColumnType("bit");

                    b.Property<bool>("is_inventory_product")
                        .HasColumnType("bit");

                    b.Property<bool>("is_sale_use_tax_1")
                        .HasColumnType("bit");

                    b.Property<bool>("is_sale_use_tax_2")
                        .HasColumnType("bit");

                    b.Property<bool>("is_sale_use_tax_3")
                        .HasColumnType("bit");

                    b.Property<string>("kitchen_group_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("kitchen_group_sort_order")
                        .HasColumnType("int");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("multiplier")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("net_sale")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("portion_id")
                        .HasColumnType("int");

                    b.Property<string>("portion_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("product_category_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("product_category_id")
                        .HasColumnType("int");

                    b.Property<string>("product_category_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("product_code")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("product_group_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("product_group_id")
                        .HasColumnType("int");

                    b.Property<string>("product_group_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<string>("product_name_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("product_name_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("profit")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("quantity")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("reqular_price")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("revenue_group_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("sale_discount_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("sale_discount_value")
                        .HasColumnType("decimal(19,8)");

                    b.Property<Guid>("sale_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("sale_order_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("sale_product_discount_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("sale_product_discount_type")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("sale_product_discount_value")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("sale_product_modifier_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("seat_number")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<Guid>("station_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("station_name_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("station_name_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<int>("status_id")
                        .HasColumnType("int");

                    b.Property<string>("status_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("sub_total")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_1_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_1_rate")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_1_taxable_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_2_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_2_rate")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_2_taxable_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_3_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_3_rate")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_3_taxable_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_discount_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_modifier_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_tax_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("unit")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.HasIndex("product_id");

                    b.HasIndex("sale_id");

                    b.ToTable("tbl_sale_product");
                });

            modelBuilder.Entity("eModels.SaleProductModifierModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("modifier_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(19,8)");

                    b.Property<Guid>("product_modifier_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("reqular_price")
                        .HasColumnType("decimal(19,8)");

                    b.Property<Guid>("sale_product_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("sale_product_id");

                    b.ToTable("tbl_sale_product_modifier");
                });

            modelBuilder.Entity("eModels.SaleProductStatusModel", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<bool>("active_order")
                        .HasColumnType("bit");

                    b.Property<bool>("allow_append_quantity")
                        .HasColumnType("bit");

                    b.Property<bool>("allow_display_in_pos_order_list")
                        .HasColumnType("bit");

                    b.Property<bool>("allow_send_to_printer")
                        .HasColumnType("bit");

                    b.Property<bool>("allow_send_to_printer_when_change_table")
                        .HasColumnType("bit");

                    b.Property<bool>("allow_send_to_printer_when_merge_table")
                        .HasColumnType("bit");

                    b.Property<bool>("allow_void_or_cancel_order")
                        .HasColumnType("bit");

                    b.Property<string>("color")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("status_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("submited_status_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("tbl_sale_product_status");
                });

            modelBuilder.Entity("eModels.SaleStatusModel", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<string>("background")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("foreground")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_active_order")
                        .HasColumnType("bit");

                    b.Property<bool>("is_sale_lock")
                        .HasColumnType("bit");

                    b.Property<int>("priority")
                        .HasColumnType("int");

                    b.Property<string>("status_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.ToTable("tbl_sale_status");
                });

            modelBuilder.Entity("eModels.SaleTypeModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("business_branch_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("is_build_in")
                        .HasColumnType("bit");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("is_order_use_table")
                        .HasColumnType("bit");

                    b.Property<string>("sale_type_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.HasIndex("business_branch_id");

                    b.ToTable("tbl_sale_type");
                });

            modelBuilder.Entity("eModels.SettingModel", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<string>("group_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("input_type")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_public")
                        .HasColumnType("bit");

                    b.Property<string>("permission_options")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("setting_description")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("setting_option")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("setting_title")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("setting_value")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("sort_order")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("tbl_setting");
                });

            modelBuilder.Entity("eModels.ShiftModel", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<string>("shift_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("sort_order")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("tbl_shift");
                });

            modelBuilder.Entity("eModels.StationModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("cash_drawer_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("cash_drawer_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("expired_date")
                        .HasColumnType("date");

                    b.Property<bool>("is_already_config")
                        .HasColumnType("bit");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("is_full_license")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("outlet_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("station_name_en")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("station_name_kh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<decimal>("tax_1_rate")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_1_taxable_rate")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_2_rate")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_2_taxable_rate")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_3_rate")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("tax_3_taxable_rate")
                        .HasColumnType("decimal(19,8)");

                    b.HasKey("id");

                    b.HasIndex("outlet_id");

                    b.ToTable("tbl_station");
                });

            modelBuilder.Entity("eModels.StockLocationModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("business_branch_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("is_default")
                        .HasColumnType("bit");

                    b.Property<string>("stock_location_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.HasIndex("business_branch_id");

                    b.ToTable("tbl_stock_location");
                });

            modelBuilder.Entity("eModels.StockLocationProductModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("initial_adjustment_quantity")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("initial_quantity")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("max_quantity")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("min_quantity")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("multiplier")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<decimal>("quantity")
                        .HasColumnType("decimal(19,8)");

                    b.Property<Guid>("stock_location_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("unit")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.HasIndex("product_id");

                    b.HasIndex("stock_location_id");

                    b.ToTable("tbl_stock_location_product");
                });

            modelBuilder.Entity("eModels.StockTakeModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("business_branch_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("document_number")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("is_fulfilled")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("reference_number")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<Guid>("stock_location_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("stock_take_date")
                        .HasColumnType("date");

                    b.Property<string>("term_conditions")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("total_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_quantity")
                        .HasColumnType("decimal(19,8)");

                    b.HasKey("id");

                    b.HasIndex("business_branch_id");

                    b.HasIndex("stock_location_id");

                    b.ToTable("tbl_stock_take");
                });

            modelBuilder.Entity("eModels.StockTakeProductModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("cost")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("grand_total")
                        .HasColumnType("decimal(19,8)");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("is_fulfilled")
                        .HasColumnType("bit");

                    b.Property<bool>("is_inventory_product")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("multiplier")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<decimal>("quantity")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("regular_cost")
                        .HasColumnType("decimal(19,8)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<int>("stock_take_id")
                        .HasColumnType("int");

                    b.Property<decimal>("sub_total")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("unit")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.HasIndex("product_id");

                    b.HasIndex("stock_take_id");

                    b.ToTable("tbl_stock_take_product");
                });

            modelBuilder.Entity("eModels.StockTransferModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("document_number")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<Guid>("from_business_branch_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("from_stock_location_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("is_fulfilled")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("reference_number")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("stock_transfer_date")
                        .HasColumnType("date");

                    b.Property<decimal>("sub_total")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("term_conditions")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<Guid>("to_business_branch_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("to_stock_location_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("total_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_quantity")
                        .HasColumnType("decimal(19,8)");

                    b.HasKey("id");

                    b.HasIndex("from_business_branch_id");

                    b.HasIndex("from_stock_location_id");

                    b.HasIndex("to_business_branch_id");

                    b.HasIndex("to_stock_location_id");

                    b.ToTable("tbl_stock_transfer");
                });

            modelBuilder.Entity("eModels.StockTransferProductModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("cost")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("grand_total")
                        .HasColumnType("decimal(19,8)");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("is_fulfilled")
                        .HasColumnType("bit");

                    b.Property<bool>("is_inventory_product")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("multiplier")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<decimal>("quantity")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("regular_cost")
                        .HasColumnType("decimal(19,8)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<int>("stock_transfer_id")
                        .HasColumnType("int");

                    b.Property<decimal>("sub_total")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("total_amount")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("unit")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.HasIndex("product_id");

                    b.HasIndex("stock_transfer_id");

                    b.ToTable("tbl_stock_transfer_product");
                });

            modelBuilder.Entity("eModels.StoreProcedureResultDecimalModel", b =>
                {
                    b.Property<decimal>("result")
                        .HasColumnType("decimal(19,8)");

                    b.ToTable("StoreProcedureResultsDecimal");
                });

            modelBuilder.Entity("eModels.StoreProcedureResultModel", b =>
                {
                    b.Property<string>("result")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.ToTable("StoreProcedureResults");
                });

            modelBuilder.Entity("eModels.SystemFeatureModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("feature_code")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("feature_description")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("feature_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("permission_options")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("sort_order")
                        .HasColumnType("bit");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("tbl_system_feature");
                });

            modelBuilder.Entity("eModels.TableGroupModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("outlet_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("photo")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("table_group_name_en")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("table_group_name_kh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.HasIndex("outlet_id");

                    b.ToTable("tbl_table_group");
                });

            modelBuilder.Entity("eModels.TableModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<double>("height")
                        .HasColumnType("float");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<double>("position_x_percent")
                        .HasColumnType("float");

                    b.Property<double>("position_y_percent")
                        .HasColumnType("float");

                    b.Property<int?>("price_rule_id")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<int>("table_group_id")
                        .HasColumnType("int");

                    b.Property<string>("table_name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<double>("width")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("price_rule_id");

                    b.HasIndex("table_group_id");

                    b.ToTable("tbl_table");
                });

            modelBuilder.Entity("eModels.TestModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.ToTable("tbl_test");
                });

            modelBuilder.Entity("eModels.UnitCategoryModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("category_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_built_in")
                        .HasColumnType("bit");

                    b.Property<decimal>("length")
                        .HasColumnType("decimal(19,8)");

                    b.Property<int>("sort_order")
                        .HasColumnType("int");

                    b.Property<string>("unit")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<decimal>("volumes")
                        .HasColumnType("decimal(19,8)");

                    b.Property<decimal>("weight")
                        .HasColumnType("decimal(19,8)");

                    b.HasKey("id");

                    b.ToTable("tbl_unit_category");
                });

            modelBuilder.Entity("eModels.UnitModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_built_in")
                        .HasColumnType("bit");

                    b.Property<bool>("is_defualt")
                        .HasColumnType("bit");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("multiplier")
                        .HasColumnType("decimal(19,8)");

                    b.Property<int>("sort_order")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("type_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("unit_category_id")
                        .HasColumnType("int");

                    b.Property<string>("unit_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.HasIndex("unit_category_id");

                    b.ToTable("tbl_unit");
                });

            modelBuilder.Entity("eModels.UserModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date_of_birth")
                        .HasColumnType("date");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("full_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_allow_backend_login")
                        .HasColumnType("bit");

                    b.Property<bool>("is_allow_front_end_login")
                        .HasColumnType("bit");

                    b.Property<bool>("is_buildin")
                        .HasColumnType("bit");

                    b.Property<bool>("is_default")
                        .HasColumnType("bit");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("phone_1")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("phone_2")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("photo")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("pin_code")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("role_id")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("user_code")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.HasIndex("role_id");

                    b.ToTable("tbl_user");
                });

            modelBuilder.Entity("eModels.VendorGroupModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("vendor_group_name_en")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("vendor_group_name_kh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.ToTable("tbl_vendor_group");
                });

            modelBuilder.Entity("eModels.VendorModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("company_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("email_address")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("is_auto_generate_vendor_code")
                        .HasColumnType("bit");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("mobile_phone")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("office_phone")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("photo")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("province_id")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<decimal>("total_payable")
                        .HasColumnType("decimal(19,8)");

                    b.Property<string>("vendor_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<int>("vendor_group_id")
                        .HasColumnType("int");

                    b.Property<string>("vendor_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.HasIndex("province_id");

                    b.HasIndex("vendor_group_id");

                    b.ToTable("tbl_vendor");
                });

            modelBuilder.Entity("eModels.WorkingDayModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("business_branch_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("business_branch_name_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("business_branch_name_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<Guid>("cash_drawer_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("cash_drawer_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("close_note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("closed_by")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("closed_date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("closed_station_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("closed_station_name_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("closed_station_name_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_closed")
                        .HasColumnType("bit");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("open_note")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("opended_station_name_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("opended_station_name_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<Guid>("opened_station_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("outlet_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("outlet_name_en")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("outlet_name_kh")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("working_date")
                        .HasColumnType("date");

                    b.Property<string>("working_day_number")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.HasKey("id");

                    b.HasIndex("closed_station_id");

                    b.HasIndex("opened_station_id");

                    b.HasIndex("outlet_id");

                    b.ToTable("tbl_working_day");
                });

            modelBuilder.Entity("eShareModel.CashDrawerModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("cash_drawer_name")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<string>("created_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime?>("deleted_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("last_modified_by")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Khmer_100_BIN");

                    b.Property<DateTime>("last_modified_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("tbl_cash_drawer");
                });

            modelBuilder.Entity("eModels.AttachFilesModel", b =>
                {
                    b.HasOne("eModels.CustomerModel", "customer")
                        .WithMany()
                        .HasForeignKey("customer_id");

                    b.HasOne("eModels.ModifierGroupModel", "modifier_group")
                        .WithMany("attache_files")
                        .HasForeignKey("modifier_group_id");

                    b.HasOne("eModels.ModifierModel", "modifier")
                        .WithMany("attache_files")
                        .HasForeignKey("modifier_id");

                    b.HasOne("eModels.ProductModel", "product")
                        .WithMany()
                        .HasForeignKey("product_id");

                    b.HasOne("eModels.ProductionModel", "production")
                        .WithMany()
                        .HasForeignKey("production_id");

                    b.HasOne("eModels.PurchaseOrderModel", "purchase_order")
                        .WithMany()
                        .HasForeignKey("purchase_order_id");

                    b.HasOne("eModels.StockTakeModel", "stock_take")
                        .WithMany()
                        .HasForeignKey("stock_take_id");

                    b.HasOne("eModels.StockTransferModel", "stock_transfer")
                        .WithMany()
                        .HasForeignKey("stock_transfer_id");

                    b.HasOne("eModels.VendorModel", "vendor")
                        .WithMany()
                        .HasForeignKey("vendor_id");

                    b.Navigation("customer");

                    b.Navigation("modifier");

                    b.Navigation("modifier_group");

                    b.Navigation("product");

                    b.Navigation("production");

                    b.Navigation("purchase_order");

                    b.Navigation("stock_take");

                    b.Navigation("stock_transfer");

                    b.Navigation("vendor");
                });

            modelBuilder.Entity("eModels.BusinessBranchCurrencyModel", b =>
                {
                    b.HasOne("eModels.BusinessBranchModel", "business_branch")
                        .WithMany()
                        .HasForeignKey("business_branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.CurrencyModel", "currency")
                        .WithMany()
                        .HasForeignKey("currency_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("business_branch");

                    b.Navigation("currency");
                });

            modelBuilder.Entity("eModels.BusinessBranchPaymentTypeModel", b =>
                {
                    b.HasOne("eModels.BusinessBranchModel", "business_branch")
                        .WithMany("business_branch_payment_types")
                        .HasForeignKey("business_branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.PaymentTypeModel", "payment_type")
                        .WithMany("business_branch_payment_types")
                        .HasForeignKey("payment_type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("business_branch");

                    b.Navigation("payment_type");
                });

            modelBuilder.Entity("eModels.BusinessBranchPriceRule", b =>
                {
                    b.HasOne("eModels.BusinessBranchModel", "business_branch")
                        .WithMany("business_branch_prices")
                        .HasForeignKey("business_branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.PriceRuleModel", "price_rule")
                        .WithMany("business_branch_prices")
                        .HasForeignKey("price_rule_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("business_branch");

                    b.Navigation("price_rule");
                });

            modelBuilder.Entity("eModels.BusinessBranchRoleModel", b =>
                {
                    b.HasOne("eModels.BusinessBranchModel", "business_branch")
                        .WithMany("business_branch_roles")
                        .HasForeignKey("business_branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.RoleModel", "role")
                        .WithMany("business_branch_roles")
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("business_branch");

                    b.Navigation("role");
                });

            modelBuilder.Entity("eModels.BusinessBranchSettingModel", b =>
                {
                    b.HasOne("eModels.BusinessBranchModel", "business_branch")
                        .WithMany("business_branch_settings")
                        .HasForeignKey("business_branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.SettingModel", "setting")
                        .WithMany("business_branch_settings")
                        .HasForeignKey("setting_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("business_branch");

                    b.Navigation("setting");
                });

            modelBuilder.Entity("eModels.BusinessBranchSystemFeatureModel", b =>
                {
                    b.HasOne("eModels.BusinessBranchModel", "business_branch")
                        .WithMany()
                        .HasForeignKey("business_branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.SystemFeatureModel", "system_feature")
                        .WithMany("business_branch_system_features")
                        .HasForeignKey("system_feature_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("business_branch");

                    b.Navigation("system_feature");
                });

            modelBuilder.Entity("eModels.CashDrawerAmountModel", b =>
                {
                    b.HasOne("eModels.WorkingDayModel", "working_day")
                        .WithMany("cash_drawer_amounts")
                        .HasForeignKey("working_day_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("working_day");
                });

            modelBuilder.Entity("eModels.CashierShiftModel", b =>
                {
                    b.HasOne("eModels.StationModel", "closed_station")
                        .WithMany()
                        .HasForeignKey("closed_station_id");

                    b.HasOne("eModels.StationModel", "opened_station")
                        .WithMany()
                        .HasForeignKey("opened_station_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.OutletModel", "outlet")
                        .WithMany()
                        .HasForeignKey("outlet_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.WorkingDayModel", "working_day")
                        .WithMany("cashier_shifts")
                        .HasForeignKey("working_day_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("closed_station");

                    b.Navigation("opened_station");

                    b.Navigation("outlet");

                    b.Navigation("working_day");
                });

            modelBuilder.Entity("eModels.CustomerBusinessBranchModel", b =>
                {
                    b.HasOne("eModels.BusinessBranchModel", "business_branch")
                        .WithMany("customer_business_branchs")
                        .HasForeignKey("business_branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.CustomerModel", "customer")
                        .WithMany("customer_business_branchs")
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("business_branch");

                    b.Navigation("customer");
                });

            modelBuilder.Entity("eModels.CustomerModel", b =>
                {
                    b.HasOne("eModels.CustomerGroupModel", "customer_group")
                        .WithMany("customers")
                        .HasForeignKey("customer_group_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer_group");
                });

            modelBuilder.Entity("eModels.DefaultStockLocationProductModel", b =>
                {
                    b.HasOne("eModels.BusinessBranchModel", "business_branch")
                        .WithMany("default_stock_location_products")
                        .HasForeignKey("business_branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.ProductModel", "product")
                        .WithMany("default_stock_location_products")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.StationModel", "station")
                        .WithMany()
                        .HasForeignKey("station_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.StockLocationModel", "stock_location")
                        .WithMany("default_stock_location_products")
                        .HasForeignKey("stock_location_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("business_branch");

                    b.Navigation("product");

                    b.Navigation("station");

                    b.Navigation("stock_location");
                });

            modelBuilder.Entity("eModels.DiscountCodeModel", b =>
                {
                    b.HasOne("eModels.BusinessBranchModel", "business_branch")
                        .WithMany("discount_codes")
                        .HasForeignKey("business_branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("business_branch");
                });

            modelBuilder.Entity("eModels.HistoryModel", b =>
                {
                    b.HasOne("eModels.PurchaseOrderPaymentModel", null)
                        .WithMany("histories")
                        .HasForeignKey("PurchaseOrderPaymentModelid");

                    b.HasOne("eModels.CustomerModel", "customer")
                        .WithMany()
                        .HasForeignKey("customer_id");

                    b.HasOne("eModels.ModifierGroupModel", "modifier_group")
                        .WithMany("histories")
                        .HasForeignKey("modifier_group_id");

                    b.HasOne("eModels.ModifierModel", "modifier")
                        .WithMany("histories")
                        .HasForeignKey("modifier_id");

                    b.HasOne("eModels.ProductModel", "product")
                        .WithMany("histories")
                        .HasForeignKey("product_id");

                    b.HasOne("eModels.ProductionModel", "production")
                        .WithMany("histories")
                        .HasForeignKey("production_id");

                    b.HasOne("eModels.PurchaseOrderModel", "purchase_order")
                        .WithMany("histories")
                        .HasForeignKey("purchase_order_id");

                    b.HasOne("eModels.SaleModel", "sale")
                        .WithMany("histories")
                        .HasForeignKey("sale_id");

                    b.HasOne("eModels.SalePaymentModel", "sale_payment")
                        .WithMany("histories")
                        .HasForeignKey("sale_payment_id");

                    b.HasOne("eModels.StockTakeModel", "stock_take")
                        .WithMany("histories")
                        .HasForeignKey("stock_take_id");

                    b.HasOne("eModels.StockTransferModel", "stock_transfer")
                        .WithMany("histories")
                        .HasForeignKey("stock_transfer_id");

                    b.HasOne("eModels.UserModel", "user")
                        .WithMany()
                        .HasForeignKey("user_id");

                    b.HasOne("eModels.VendorModel", "vendor")
                        .WithMany()
                        .HasForeignKey("vendor_id");

                    b.Navigation("customer");

                    b.Navigation("modifier");

                    b.Navigation("modifier_group");

                    b.Navigation("product");

                    b.Navigation("production");

                    b.Navigation("purchase_order");

                    b.Navigation("sale");

                    b.Navigation("sale_payment");

                    b.Navigation("stock_take");

                    b.Navigation("stock_transfer");

                    b.Navigation("user");

                    b.Navigation("vendor");
                });

            modelBuilder.Entity("eModels.InventoryTransactionModel", b =>
                {
                    b.HasOne("eModels.InventoryTransactionTypeModel", "inventory_transaction_type")
                        .WithMany("inventory_transactions")
                        .HasForeignKey("inventory_transaction_type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.ProductModel", "product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.StockLocationModel", "stock_location")
                        .WithMany()
                        .HasForeignKey("stock_location_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("inventory_transaction_type");

                    b.Navigation("product");

                    b.Navigation("stock_location");
                });

            modelBuilder.Entity("eModels.MenuModel", b =>
                {
                    b.HasOne("eModels.BusinessBranchModel", "business_branch")
                        .WithMany()
                        .HasForeignKey("business_branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.MenuModel", "parent")
                        .WithMany("menus")
                        .HasForeignKey("parent_id");

                    b.Navigation("business_branch");

                    b.Navigation("parent");
                });

            modelBuilder.Entity("eModels.ModifierGroupItemModel", b =>
                {
                    b.HasOne("eModels.ModifierGroupModel", "modifier_group")
                        .WithMany("modifier_group_items")
                        .HasForeignKey("modifier_group_id");

                    b.HasOne("eModels.ModifierModel", "modifier")
                        .WithMany("modifier_group_items")
                        .HasForeignKey("modifier_id");

                    b.HasOne("eModels.ModifierGroupItemModel", "parent")
                        .WithMany("children")
                        .HasForeignKey("parent_id");

                    b.Navigation("modifier");

                    b.Navigation("modifier_group");

                    b.Navigation("parent");
                });

            modelBuilder.Entity("eModels.ModifierGroupProductCategoryModel", b =>
                {
                    b.HasOne("eModels.ModifierGroupModel", "modifier_group")
                        .WithMany("modifier_group_product_categories")
                        .HasForeignKey("modifer_group_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.ProductCategoryModel", "product_category")
                        .WithMany("modifier_group_product_categories")
                        .HasForeignKey("product_category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("modifier_group");

                    b.Navigation("product_category");
                });

            modelBuilder.Entity("eModels.ModifierIngredientModel", b =>
                {
                    b.HasOne("eModels.ProductModel", "ingredient")
                        .WithMany("modifier_ingredients")
                        .HasForeignKey("ingredient_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.ModifierModel", "modifier")
                        .WithMany("modifier_ingredients")
                        .HasForeignKey("modifier_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.UnitModel", "unit")
                        .WithMany("modifier_ingredients")
                        .HasForeignKey("unit_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ingredient");

                    b.Navigation("modifier");

                    b.Navigation("unit");
                });

            modelBuilder.Entity("eModels.ModifierModel", b =>
                {
                    b.HasOne("eModels.ModifierGroupModel", "modifier_group")
                        .WithMany()
                        .HasForeignKey("modifier_group_id");

                    b.Navigation("modifier_group");
                });

            modelBuilder.Entity("eModels.NoteModel", b =>
                {
                    b.HasOne("eModels.BusinessBranchModel", "business_branch")
                        .WithMany("cashier_notes")
                        .HasForeignKey("business_branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.CategoryNoteModel", "category_note")
                        .WithMany("notes")
                        .HasForeignKey("category_note_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("business_branch");

                    b.Navigation("category_note");
                });

            modelBuilder.Entity("eModels.OutletModel", b =>
                {
                    b.HasOne("eModels.BusinessBranchModel", "business_branch")
                        .WithMany("outlets")
                        .HasForeignKey("business_branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("business_branch");
                });

            modelBuilder.Entity("eModels.PaymentTypeModel", b =>
                {
                    b.HasOne("eModels.CurrencyModel", "currency")
                        .WithMany()
                        .HasForeignKey("currency_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("currency");
                });

            modelBuilder.Entity("eModels.PermissionOptionModel", b =>
                {
                    b.HasOne("eModels.PermissionOptionModel", "parent")
                        .WithMany("permission_options")
                        .HasForeignKey("parent_id");

                    b.Navigation("parent");
                });

            modelBuilder.Entity("eModels.PermissionOptionRoleModel", b =>
                {
                    b.HasOne("eModels.PermissionOptionModel", "permission_option")
                        .WithMany("permission_option_roles")
                        .HasForeignKey("permission_option_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.RoleModel", "role")
                        .WithMany("permission_option_roles")
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("permission_option");

                    b.Navigation("role");
                });

            modelBuilder.Entity("eModels.PrinterModel", b =>
                {
                    b.HasOne("eModels.BusinessBranchModel", "business_branch")
                        .WithMany("printers")
                        .HasForeignKey("business_branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("business_branch");
                });

            modelBuilder.Entity("eModels.ProductCategoryModel", b =>
                {
                    b.HasOne("eModels.ProductGroupModel", "product_group")
                        .WithMany("product_categories")
                        .HasForeignKey("product_group_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product_group");
                });

            modelBuilder.Entity("eModels.ProductIngredientModel", b =>
                {
                    b.HasOne("eModels.ProductModel", "ingredient")
                        .WithMany()
                        .HasForeignKey("ingredient_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.ProductPortionModel", "product_portion")
                        .WithMany("product_ingredients")
                        .HasForeignKey("product_portion_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.UnitModel", "unit")
                        .WithMany()
                        .HasForeignKey("unit_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ingredient");

                    b.Navigation("product_portion");

                    b.Navigation("unit");
                });

            modelBuilder.Entity("eModels.ProductIngredientRelatedModel", b =>
                {
                    b.HasOne("eModels.ProductModel", "ingredient")
                        .WithMany()
                        .HasForeignKey("ingredient_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.ProductModel", "product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ingredient");

                    b.Navigation("product");
                });

            modelBuilder.Entity("eModels.ProductMenuModel", b =>
                {
                    b.HasOne("eModels.MenuModel", "menu")
                        .WithMany("product_menus")
                        .HasForeignKey("menu_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.ProductModel", "product")
                        .WithMany("product_menus")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("menu");

                    b.Navigation("product");
                });

            modelBuilder.Entity("eModels.ProductModel", b =>
                {
                    b.HasOne("eModels.KitchenGroupModel", "kitchen_group")
                        .WithMany("products")
                        .HasForeignKey("kitchen_group_id");

                    b.HasOne("eModels.ProductCategoryModel", "product_category")
                        .WithMany("products")
                        .HasForeignKey("product_category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.UnitModel", "unit")
                        .WithMany()
                        .HasForeignKey("unit_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.VendorModel", "vendor")
                        .WithMany()
                        .HasForeignKey("vendor_id");

                    b.Navigation("kitchen_group");

                    b.Navigation("product_category");

                    b.Navigation("unit");

                    b.Navigation("vendor");
                });

            modelBuilder.Entity("eModels.ProductModifierModel", b =>
                {
                    b.HasOne("eModels.ModifierModel", "modifier")
                        .WithMany("product_modifiers")
                        .HasForeignKey("modifier_id");

                    b.HasOne("eModels.ProductModifierModel", "parent")
                        .WithMany("children")
                        .HasForeignKey("parent_id");

                    b.HasOne("eModels.ProductModel", "product")
                        .WithMany("product_modifiers")
                        .HasForeignKey("product_id");

                    b.Navigation("modifier");

                    b.Navigation("parent");

                    b.Navigation("product");
                });

            modelBuilder.Entity("eModels.ProductPortionModel", b =>
                {
                    b.HasOne("eModels.ProductModel", "product")
                        .WithMany("product_portions")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.UnitModel", "unit")
                        .WithMany()
                        .HasForeignKey("unit_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("unit");
                });

            modelBuilder.Entity("eModels.ProductPriceModel", b =>
                {
                    b.HasOne("eModels.PriceRuleModel", "price_rule")
                        .WithMany()
                        .HasForeignKey("price_rule_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.ProductPortionModel", "product_portion")
                        .WithMany("product_prices")
                        .HasForeignKey("product_portion_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("price_rule");

                    b.Navigation("product_portion");
                });

            modelBuilder.Entity("eModels.ProductPrinterModel", b =>
                {
                    b.HasOne("eModels.PrinterModel", "printer")
                        .WithMany()
                        .HasForeignKey("printer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.ProductModel", "product")
                        .WithMany("product_printers")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("printer");

                    b.Navigation("product");
                });

            modelBuilder.Entity("eModels.ProductTaxModel", b =>
                {
                    b.HasOne("eModels.BusinessBranchModel", "business_branch")
                        .WithMany()
                        .HasForeignKey("business_branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.ProductModel", "product")
                        .WithMany("product_taxes")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("business_branch");

                    b.Navigation("product");
                });

            modelBuilder.Entity("eModels.ProductionModel", b =>
                {
                    b.HasOne("eModels.BusinessBranchModel", "business_branch")
                        .WithMany()
                        .HasForeignKey("business_branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.StockLocationModel", "stock_location")
                        .WithMany()
                        .HasForeignKey("stock_location_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("business_branch");

                    b.Navigation("stock_location");
                });

            modelBuilder.Entity("eModels.ProductionProductModel", b =>
                {
                    b.HasOne("eModels.ProductModel", "product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.ProductionModel", "production")
                        .WithMany("production_products")
                        .HasForeignKey("production_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("production");
                });

            modelBuilder.Entity("eModels.PurchaseOrderModel", b =>
                {
                    b.HasOne("eModels.BusinessBranchModel", "business_branch")
                        .WithMany()
                        .HasForeignKey("business_branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.UserModel", "discount_user")
                        .WithMany()
                        .HasForeignKey("discount_user_id");

                    b.HasOne("eModels.StockLocationModel", "stock_location")
                        .WithMany()
                        .HasForeignKey("stock_location_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.VendorModel", "vendor")
                        .WithMany()
                        .HasForeignKey("vendor_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("business_branch");

                    b.Navigation("discount_user");

                    b.Navigation("stock_location");

                    b.Navigation("vendor");
                });

            modelBuilder.Entity("eModels.PurchaseOrderPaymentModel", b =>
                {
                    b.HasOne("eModels.PaymentTypeModel", "payment_type")
                        .WithMany()
                        .HasForeignKey("payment_type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.PurchaseOrderModel", "purchase_order")
                        .WithMany("purchase_order_payments")
                        .HasForeignKey("purchase_order_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("payment_type");

                    b.Navigation("purchase_order");
                });

            modelBuilder.Entity("eModels.PurchaseOrderProductModel", b =>
                {
                    b.HasOne("eModels.ProductModel", "product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.PurchaseOrderModel", "purchase_order")
                        .WithMany("purchase_order_products")
                        .HasForeignKey("purchase_order_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("purchase_order");
                });

            modelBuilder.Entity("eModels.SaleModel", b =>
                {
                    b.HasOne("eModels.BusinessBranchModel", "business_branch")
                        .WithMany()
                        .HasForeignKey("business_branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.CustomerModel", "customer")
                        .WithMany()
                        .HasForeignKey("customer_id");

                    b.HasOne("eModels.OutletModel", "outlet")
                        .WithMany()
                        .HasForeignKey("outlet_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.SaleStatusModel", "sale_status")
                        .WithMany()
                        .HasForeignKey("status_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("business_branch");

                    b.Navigation("customer");

                    b.Navigation("outlet");

                    b.Navigation("sale_status");
                });

            modelBuilder.Entity("eModels.SalePaymentModel", b =>
                {
                    b.HasOne("eModels.PaymentTypeModel", "payment_type")
                        .WithMany()
                        .HasForeignKey("payment_type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.SaleModel", "sale")
                        .WithMany("sale_payments")
                        .HasForeignKey("sale_id");

                    b.Navigation("payment_type");

                    b.Navigation("sale");
                });

            modelBuilder.Entity("eModels.SaleProductModel", b =>
                {
                    b.HasOne("eModels.ProductModel", "product")
                        .WithMany("sale_products")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.SaleModel", "sale")
                        .WithMany("sale_products")
                        .HasForeignKey("sale_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("sale");
                });

            modelBuilder.Entity("eModels.SaleProductModifierModel", b =>
                {
                    b.HasOne("eModels.SaleProductModel", "sale_product")
                        .WithMany("sale_product_modifiers")
                        .HasForeignKey("sale_product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("sale_product");
                });

            modelBuilder.Entity("eModels.SaleTypeModel", b =>
                {
                    b.HasOne("eModels.BusinessBranchModel", "business_branch")
                        .WithMany("sale_types")
                        .HasForeignKey("business_branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("business_branch");
                });

            modelBuilder.Entity("eModels.StationModel", b =>
                {
                    b.HasOne("eModels.OutletModel", "outlet")
                        .WithMany("stations")
                        .HasForeignKey("outlet_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("outlet");
                });

            modelBuilder.Entity("eModels.StockLocationModel", b =>
                {
                    b.HasOne("eModels.BusinessBranchModel", "business_branch")
                        .WithMany("stock_locations")
                        .HasForeignKey("business_branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("business_branch");
                });

            modelBuilder.Entity("eModels.StockLocationProductModel", b =>
                {
                    b.HasOne("eModels.ProductModel", "product")
                        .WithMany("stock_location_products")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.StockLocationModel", "stock_location")
                        .WithMany("stock_location_products")
                        .HasForeignKey("stock_location_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("stock_location");
                });

            modelBuilder.Entity("eModels.StockTakeModel", b =>
                {
                    b.HasOne("eModels.BusinessBranchModel", "business_branch")
                        .WithMany()
                        .HasForeignKey("business_branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.StockLocationModel", "stock_location")
                        .WithMany()
                        .HasForeignKey("stock_location_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("business_branch");

                    b.Navigation("stock_location");
                });

            modelBuilder.Entity("eModels.StockTakeProductModel", b =>
                {
                    b.HasOne("eModels.ProductModel", "product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.StockTakeModel", "stock_take")
                        .WithMany("stock_take_products")
                        .HasForeignKey("stock_take_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("stock_take");
                });

            modelBuilder.Entity("eModels.StockTransferModel", b =>
                {
                    b.HasOne("eModels.BusinessBranchModel", "from_business_branch")
                        .WithMany()
                        .HasForeignKey("from_business_branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.StockLocationModel", "from_stock_location")
                        .WithMany()
                        .HasForeignKey("from_stock_location_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.BusinessBranchModel", "to_business_branch")
                        .WithMany()
                        .HasForeignKey("to_business_branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.StockLocationModel", "to_stock_location")
                        .WithMany()
                        .HasForeignKey("to_stock_location_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("from_business_branch");

                    b.Navigation("from_stock_location");

                    b.Navigation("to_business_branch");

                    b.Navigation("to_stock_location");
                });

            modelBuilder.Entity("eModels.StockTransferProductModel", b =>
                {
                    b.HasOne("eModels.ProductModel", "product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.StockTransferModel", "stock_transfer")
                        .WithMany("stock_transfer_products")
                        .HasForeignKey("stock_transfer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("stock_transfer");
                });

            modelBuilder.Entity("eModels.TableGroupModel", b =>
                {
                    b.HasOne("eModels.OutletModel", "outlet")
                        .WithMany()
                        .HasForeignKey("outlet_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("outlet");
                });

            modelBuilder.Entity("eModels.TableModel", b =>
                {
                    b.HasOne("eModels.PriceRuleModel", "price_rule")
                        .WithMany()
                        .HasForeignKey("price_rule_id");

                    b.HasOne("eModels.TableGroupModel", "table_group")
                        .WithMany("tables")
                        .HasForeignKey("table_group_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("price_rule");

                    b.Navigation("table_group");
                });

            modelBuilder.Entity("eModels.UnitModel", b =>
                {
                    b.HasOne("eModels.UnitCategoryModel", "unit_category")
                        .WithMany("units")
                        .HasForeignKey("unit_category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("unit_category");
                });

            modelBuilder.Entity("eModels.UserModel", b =>
                {
                    b.HasOne("eModels.RoleModel", "role")
                        .WithMany()
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("role");
                });

            modelBuilder.Entity("eModels.VendorModel", b =>
                {
                    b.HasOne("eModels.ProvinceModel", "province")
                        .WithMany()
                        .HasForeignKey("province_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.VendorGroupModel", "vendor_group")
                        .WithMany("vendors")
                        .HasForeignKey("vendor_group_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("province");

                    b.Navigation("vendor_group");
                });

            modelBuilder.Entity("eModels.WorkingDayModel", b =>
                {
                    b.HasOne("eModels.StationModel", "closed_station")
                        .WithMany()
                        .HasForeignKey("closed_station_id");

                    b.HasOne("eModels.StationModel", "opened_station")
                        .WithMany()
                        .HasForeignKey("opened_station_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eModels.OutletModel", "outlet")
                        .WithMany()
                        .HasForeignKey("outlet_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("closed_station");

                    b.Navigation("opened_station");

                    b.Navigation("outlet");
                });

            modelBuilder.Entity("eModels.BusinessBranchModel", b =>
                {
                    b.Navigation("business_branch_payment_types");

                    b.Navigation("business_branch_prices");

                    b.Navigation("business_branch_roles");

                    b.Navigation("business_branch_settings");

                    b.Navigation("cashier_notes");

                    b.Navigation("customer_business_branchs");

                    b.Navigation("default_stock_location_products");

                    b.Navigation("discount_codes");

                    b.Navigation("outlets");

                    b.Navigation("printers");

                    b.Navigation("sale_types");

                    b.Navigation("stock_locations");
                });

            modelBuilder.Entity("eModels.CategoryNoteModel", b =>
                {
                    b.Navigation("notes");
                });

            modelBuilder.Entity("eModels.CustomerGroupModel", b =>
                {
                    b.Navigation("customers");
                });

            modelBuilder.Entity("eModels.CustomerModel", b =>
                {
                    b.Navigation("customer_business_branchs");
                });

            modelBuilder.Entity("eModels.InventoryTransactionTypeModel", b =>
                {
                    b.Navigation("inventory_transactions");
                });

            modelBuilder.Entity("eModels.KitchenGroupModel", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("eModels.MenuModel", b =>
                {
                    b.Navigation("menus");

                    b.Navigation("product_menus");
                });

            modelBuilder.Entity("eModels.ModifierGroupItemModel", b =>
                {
                    b.Navigation("children");
                });

            modelBuilder.Entity("eModels.ModifierGroupModel", b =>
                {
                    b.Navigation("attache_files");

                    b.Navigation("histories");

                    b.Navigation("modifier_group_items");

                    b.Navigation("modifier_group_product_categories");
                });

            modelBuilder.Entity("eModels.ModifierModel", b =>
                {
                    b.Navigation("attache_files");

                    b.Navigation("histories");

                    b.Navigation("modifier_group_items");

                    b.Navigation("modifier_ingredients");

                    b.Navigation("product_modifiers");
                });

            modelBuilder.Entity("eModels.OutletModel", b =>
                {
                    b.Navigation("stations");
                });

            modelBuilder.Entity("eModels.PaymentTypeModel", b =>
                {
                    b.Navigation("business_branch_payment_types");
                });

            modelBuilder.Entity("eModels.PermissionOptionModel", b =>
                {
                    b.Navigation("permission_option_roles");

                    b.Navigation("permission_options");
                });

            modelBuilder.Entity("eModels.PriceRuleModel", b =>
                {
                    b.Navigation("business_branch_prices");
                });

            modelBuilder.Entity("eModels.ProductCategoryModel", b =>
                {
                    b.Navigation("modifier_group_product_categories");

                    b.Navigation("products");
                });

            modelBuilder.Entity("eModels.ProductGroupModel", b =>
                {
                    b.Navigation("product_categories");
                });

            modelBuilder.Entity("eModels.ProductModel", b =>
                {
                    b.Navigation("default_stock_location_products");

                    b.Navigation("histories");

                    b.Navigation("modifier_ingredients");

                    b.Navigation("product_menus");

                    b.Navigation("product_modifiers");

                    b.Navigation("product_portions");

                    b.Navigation("product_printers");

                    b.Navigation("product_taxes");

                    b.Navigation("sale_products");

                    b.Navigation("stock_location_products");
                });

            modelBuilder.Entity("eModels.ProductModifierModel", b =>
                {
                    b.Navigation("children");
                });

            modelBuilder.Entity("eModels.ProductPortionModel", b =>
                {
                    b.Navigation("product_ingredients");

                    b.Navigation("product_prices");
                });

            modelBuilder.Entity("eModels.ProductionModel", b =>
                {
                    b.Navigation("histories");

                    b.Navigation("production_products");
                });

            modelBuilder.Entity("eModels.PurchaseOrderModel", b =>
                {
                    b.Navigation("histories");

                    b.Navigation("purchase_order_payments");

                    b.Navigation("purchase_order_products");
                });

            modelBuilder.Entity("eModels.PurchaseOrderPaymentModel", b =>
                {
                    b.Navigation("histories");
                });

            modelBuilder.Entity("eModels.RoleModel", b =>
                {
                    b.Navigation("business_branch_roles");

                    b.Navigation("permission_option_roles");
                });

            modelBuilder.Entity("eModels.SaleModel", b =>
                {
                    b.Navigation("histories");

                    b.Navigation("sale_payments");

                    b.Navigation("sale_products");
                });

            modelBuilder.Entity("eModels.SalePaymentModel", b =>
                {
                    b.Navigation("histories");
                });

            modelBuilder.Entity("eModels.SaleProductModel", b =>
                {
                    b.Navigation("sale_product_modifiers");
                });

            modelBuilder.Entity("eModels.SettingModel", b =>
                {
                    b.Navigation("business_branch_settings");
                });

            modelBuilder.Entity("eModels.StockLocationModel", b =>
                {
                    b.Navigation("default_stock_location_products");

                    b.Navigation("stock_location_products");
                });

            modelBuilder.Entity("eModels.StockTakeModel", b =>
                {
                    b.Navigation("histories");

                    b.Navigation("stock_take_products");
                });

            modelBuilder.Entity("eModels.StockTransferModel", b =>
                {
                    b.Navigation("histories");

                    b.Navigation("stock_transfer_products");
                });

            modelBuilder.Entity("eModels.SystemFeatureModel", b =>
                {
                    b.Navigation("business_branch_system_features");
                });

            modelBuilder.Entity("eModels.TableGroupModel", b =>
                {
                    b.Navigation("tables");
                });

            modelBuilder.Entity("eModels.UnitCategoryModel", b =>
                {
                    b.Navigation("units");
                });

            modelBuilder.Entity("eModels.UnitModel", b =>
                {
                    b.Navigation("modifier_ingredients");
                });

            modelBuilder.Entity("eModels.VendorGroupModel", b =>
                {
                    b.Navigation("vendors");
                });

            modelBuilder.Entity("eModels.WorkingDayModel", b =>
                {
                    b.Navigation("cash_drawer_amounts");

                    b.Navigation("cashier_shifts");
                });
#pragma warning restore 612, 618
        }
    }
}
